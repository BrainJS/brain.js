{"version":3,"sources":["../../../src/recurrent/matrix/row-pluck-b.js"],"names":["rowPluckB","product","left","rowIndex","columns","rowBase","column","deltas"],"mappings":";;;;;kBAMwBA,S;AANxB;;;;;;AAMe,SAASA,SAAT,CAAmBC,OAAnB,EAA4BC,IAA5B,EAAkCC,QAAlC,EAA4C;AACzD,MAAMC,UAAUF,KAAKE,OAArB;AACA,MAAMC,UAAUD,UAAUD,QAA1B;AACA,OAAK,IAAIG,SAAS,CAAlB,EAAqBA,SAASF,OAA9B,EAAuCE,QAAvC,EAAiD;AAC/CJ,SAAKK,MAAL,CAAYF,UAAUC,MAAtB,IAAgCL,QAAQM,MAAR,CAAeD,MAAf,CAAhC;AACD;AACF","file":"row-pluck-b.js","sourcesContent":["/**\r\n * adds {from} deltas into {m} deltas\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n * @param {Number} rowIndex\r\n */\r\nexport default function rowPluckB(product, left, rowIndex) {\r\n  const columns = left.columns;\r\n  const rowBase = columns * rowIndex;\r\n  for (let column = 0; column < columns; column++) {\r\n    left.deltas[rowBase + column] = product.deltas[column];\r\n  }\r\n}\r\n"]}