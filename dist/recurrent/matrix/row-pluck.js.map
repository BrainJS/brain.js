{"version":3,"sources":["../../../src/recurrent/matrix/row-pluck.js"],"names":["rowPluck","product","left","rowPluckIndex","columns","rowBase","column","weights","deltas"],"mappings":";;;;;kBAKwBA,Q;AALxB;;;;;AAKe,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,IAA3B,EAAiCC,aAAjC,EAAgD;AAC7D,MAAMC,UAAUF,KAAKE,OAArB;AACA,MAAMC,UAAUD,UAAUD,aAA1B;AACA,OAAK,IAAIG,SAAS,CAAlB,EAAqBA,SAASF,OAA9B,EAAuCE,QAAvC,EAAiD;AAC/CL,YAAQM,OAAR,CAAgBD,MAAhB,IAA0BJ,KAAKK,OAAL,CAAaF,UAAUC,MAAvB,CAA1B;AACAL,YAAQO,MAAR,CAAeF,MAAf,IAAyB,CAAzB;AACD;AACF","file":"row-pluck.js","sourcesContent":["/**\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n * @param {Number} rowPluckIndex\r\n */\r\nexport default function rowPluck(product, left, rowPluckIndex) {\r\n  const columns = left.columns;\r\n  const rowBase = columns * rowPluckIndex;\r\n  for (let column = 0; column < columns; column++) {\r\n    product.weights[column] = left.weights[rowBase + column];\r\n    product.deltas[column] = 0;\r\n  }\r\n}\r\n"]}