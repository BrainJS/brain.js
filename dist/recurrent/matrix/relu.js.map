{"version":3,"sources":["../../../src/recurrent/matrix/relu.js"],"names":["relu","product","left","i","weights","length","Math","max","deltas"],"mappings":";;;;;kBAMwBA,I;AANxB;;;;;;AAMe,SAASA,IAAT,CAAcC,OAAd,EAAuBC,IAAvB,EAA6B;AAC1C,OAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAID,KAAKE,OAAL,CAAaC,MAAhC,EAAwCF,GAAxC,EAA6C;AAC3CF,YAAQG,OAAR,CAAgBD,CAAhB,IAAqBG,KAAKC,GAAL,CAAS,CAAT,EAAYL,KAAKE,OAAL,CAAaD,CAAb,CAAZ,CAArB,CAD2C,CACQ;AACnDF,YAAQO,MAAR,CAAeL,CAAf,IAAoB,CAApB;AACD;AACF","file":"relu.js","sourcesContent":["/**\r\n *\r\n * relu {m} weights to {into} weights\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n */\r\nexport default function relu(product, left) {\r\n  for(let i = 0; i < left.weights.length; i++) {\r\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\r\n    product.deltas[i] = 0;\r\n  }\r\n}\r\n"]}