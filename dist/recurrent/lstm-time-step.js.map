{"version":3,"sources":["../../src/recurrent/lstm-time-step.js"],"names":["LSTMTimeStep","hiddenSize","prevSize","LSTM","prototype","getModel","call","equation","inputMatrix","previousResult","hiddenLayer","getEquation","RNNTimeStep"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,Y;;;;;;;;;;;6BACVC,U,EAAYC,Q,EAAU;AAC7B,aAAOC,eAAKC,SAAL,CAAeC,QAAf,CAAwBC,IAAxB,CAA6B,IAA7B,EAAmCL,UAAnC,EAA+CC,QAA/C,CAAP;AACD;;AAED;;;;;;;;;;;gCAQYK,Q,EAAUC,W,EAAaC,c,EAAgBC,W,EAAa;AAC9D,aAAOP,eAAKC,SAAL,CAAeO,WAAf,CAA2BL,IAA3B,CAAgC,IAAhC,EAAsCC,QAAtC,EAAgDC,WAAhD,EAA6DC,cAA7D,EAA6EC,WAA7E,CAAP;AACD;;;;EAfuCE,qB;;kBAArBZ,Y","file":"lstm-time-step.js","sourcesContent":["import Matrix from './matrix';\nimport LSTM from './lstm';\nimport RNNTimeStep from './rnn-time-step';\n\nexport default class LSTMTimeStep extends RNNTimeStep {\n  getModel(hiddenSize, prevSize) {\n    return LSTM.prototype.getModel.call(this, hiddenSize, prevSize);\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return LSTM.prototype.getEquation.call(this, equation, inputMatrix, previousResult, hiddenLayer);\n  }\n}\n"]}