{"version":3,"sources":["../../src/utilities/cast.js"],"names":["arraysToFloat32Arrays","arrayToFloat32Arrays","arrayToFloat32Array","objectsToFloat32Arrays","objectToFloat32Arrays","objectToFloat32Array","arrays","result","i","length","push","Float32Array","from","array","objects","table","results","object","p","hasOwnProperty"],"mappings":";;;;;QAAgBA,qB,GAAAA,qB;QAOAC,oB,GAAAA,oB;QAOAC,mB,GAAAA,mB;QAGAC,sB,GAAAA,sB;QAcAC,qB,GAAAA,qB;QAOAC,oB,GAAAA,oB;AAtCT,SAASL,qBAAT,CAA+BM,MAA/B,EAAuC;AAC5C,MAAMC,SAAS,EAAf;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,OAAOG,MAA3B,EAAmCD,GAAnC,EAAwC;AACtCD,WAAOG,IAAP,CAAYC,aAAaC,IAAb,CAAkBN,OAAOE,CAAP,CAAlB,CAAZ;AACD;AACD,SAAOD,MAAP;AACD;AACM,SAASN,oBAAT,CAA8BY,KAA9B,EAAqC;AAC1C,MAAMN,SAAS,EAAf;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIK,MAAMJ,MAA1B,EAAkCD,GAAlC,EAAuC;AACrCD,WAAOG,IAAP,CAAYC,aAAaC,IAAb,CAAkB,CAACC,MAAML,CAAN,CAAD,CAAlB,CAAZ;AACD;AACD,SAAOD,MAAP;AACD;AACM,SAASL,mBAAT,CAA6BW,KAA7B,EAAoC;AACzC,SAAOF,aAAaC,IAAb,CAAkBC,KAAlB,CAAP;AACD;AACM,SAASV,sBAAT,CAAgCW,OAAhC,EAAyCC,KAAzC,EAAgDN,MAAhD,EAAwD;AAC7D,MAAMO,UAAU,EAAhB;AACA,OAAK,IAAIR,IAAI,CAAb,EAAgBA,IAAIM,QAAQL,MAA5B,EAAoCD,GAApC,EAAyC;AACvC,QAAMS,SAASH,QAAQN,CAAR,CAAf;AACA,QAAMD,SAAS,IAAII,YAAJ,CAAiBF,MAAjB,CAAf;AACA,SAAK,IAAIS,CAAT,IAAcD,MAAd,EAAsB;AACpB,UAAIA,OAAOE,cAAP,CAAsBD,CAAtB,CAAJ,EAA8B;AAC5BX,eAAOQ,MAAMG,CAAN,CAAP,IAAmBD,OAAOC,CAAP,CAAnB;AACD;AACF;AACDF,YAAQN,IAAR,CAAaH,MAAb;AACD;AACD,SAAOS,OAAP;AACD;AACM,SAASZ,qBAAT,CAA+Ba,MAA/B,EAAuC;AAC5C,MAAMV,SAAS,EAAf;AACA,OAAK,IAAIW,CAAT,IAAcD,MAAd,EAAsB;AACpBV,WAAOG,IAAP,CAAYC,aAAaC,IAAb,CAAkB,CAACK,OAAOC,CAAP,CAAD,CAAlB,CAAZ;AACD;AACD,SAAOX,MAAP;AACD;AACM,SAASF,oBAAT,CAA8BY,MAA9B,EAAsCF,KAAtC,EAA6CN,MAA7C,EAAqD;AAC1D,MAAMF,SAAS,IAAII,YAAJ,CAAiBF,MAAjB,CAAf;AACA,OAAK,IAAIS,CAAT,IAAcD,MAAd,EAAsB;AACpB,QAAIA,OAAOE,cAAP,CAAsBD,CAAtB,CAAJ,EAA8B;AAC5BX,aAAOQ,MAAMG,CAAN,CAAP,IAAmBD,OAAOC,CAAP,CAAnB;AACD;AACF;AACD,SAAOX,MAAP;AACD","file":"cast.js","sourcesContent":["export function arraysToFloat32Arrays(arrays) {\r\n  const result = [];\r\n  for (let i = 0; i < arrays.length; i++) {\r\n    result.push(Float32Array.from(arrays[i]));\r\n  }\r\n  return result;\r\n}\r\nexport function arrayToFloat32Arrays(array) {\r\n  const result = [];\r\n  for (let i = 0; i < array.length; i++) {\r\n    result.push(Float32Array.from([array[i]]));\r\n  }\r\n  return result;\r\n}\r\nexport function arrayToFloat32Array(array) {\r\n  return Float32Array.from(array)\r\n}\r\nexport function objectsToFloat32Arrays(objects, table, length) {\r\n  const results = [];\r\n  for (let i = 0; i < objects.length; i++) {\r\n    const object = objects[i];\r\n    const result = new Float32Array(length);\r\n    for (let p in object) {\r\n      if (object.hasOwnProperty(p)) {\r\n        result[table[p]] = object[p];\r\n      }\r\n    }\r\n    results.push(result);\r\n  }\r\n  return results;\r\n}\r\nexport function objectToFloat32Arrays(object) {\r\n  const result = [];\r\n  for (let p in object) {\r\n    result.push(Float32Array.from([object[p]]));\r\n  }\r\n  return result;\r\n}\r\nexport function objectToFloat32Array(object, table, length) {\r\n  const result = new Float32Array(length);\r\n  for (let p in object) {\r\n    if (object.hasOwnProperty(p)) {\r\n      result[table[p]] = object[p];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n"]}