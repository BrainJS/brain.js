{"version":3,"sources":["activation/leaky-relu.js","activation/relu.js","activation/sigmoid.js","activation/tanh.js","activation/index.js","cross-validate.js","../node_modules/gpu.js/dist/gpu-browser.js","utilities/kernel.js","utilities/zeros.js","utilities/zeros-2d.js","utilities/layer-size.js","utilities/zeros-3d.js","layer/base.js","layer/activation.js","layer/types.js","layer/add.js","praxis/base.js","praxis/arthur-deviation-weights.js","praxis/arthur-deviation-biases.js","utilities/random-weight.js","utilities/randos.js","utilities/randos-2d.js","layer/random.js","layer/multiply.js","layer/sigmoid.js","layer/arthur-feed-forward.js","utilities/layer-setup.js","utilities/randos-3d.js","utilities/values.js","layer/convolution.js","layer/dropout.js","layer/feed-forward.js","layer/fully-connected.js","layer/negative.js","layer/multiply-element.js","utilities/ones.js","utilities/ones-2d.js","layer/ones.js","layer/tanh.js","layer/zeros.js","layer/gru.js","layer/input.js","layer/leaky-relu.js","layer/lstm.js","layer/target.js","layer/output.js","layer/pool.js","layer/relu.js","layer/recurrent.js","layer/regression.js","layer/soft-max.js","layer/svm.js","layer/transpose.js","layer/index.js","likely.js","lookup.js","praxis/adam.js","praxis/momentum-root-mean-squared-propagation.js","praxis/index.js","utilities/mse-2d.js","utilities/layer-from-json.js","utilities/traverse-layers-from.js","utilities/flatten-layers.js","feed-forward.js","../src/thaw.js","../src/block.js","../src/index.js","../node_modules/events/events.js","../node_modules/inherits/inherits_browser.js","../node_modules/process/browser.js","../node_modules/process-nextick-args/index.js","../node_modules/stream-browserify/node_modules/isarray/index.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/safe-buffer/index.js","../node_modules/core-util-is/lib/util.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/util-deprecate/browser.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/stream-browserify/node_modules/string_decoder/lib/string_decoder.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/stream-browserify/node_modules/readable-stream/readable-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/writable-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/duplex-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/transform.js","../node_modules/stream-browserify/node_modules/readable-stream/passthrough.js","../node_modules/stream-browserify/index.js","train-stream.js","utilities/to-array.js","utilities/max.js","utilities/mse.js","utilities/range.js","utilities/lookup-table.js","utilities/cast.js","neural-network.js","neural-network-gpu.js","layer/recurrent-connection.js","layer/recurrent-input.js","layer/recurrent-zeros.js","recurrent.js","recurrent/matrix/index.js","utilities/random.js","recurrent/matrix/random-matrix.js","recurrent/matrix/ones-matrix.js","recurrent/matrix/copy.js","recurrent/matrix/clone-negative.js","recurrent/matrix/add.js","recurrent/matrix/add-b.js","recurrent/matrix/all-ones.js","recurrent/matrix/multiply.js","recurrent/matrix/multiply-b.js","recurrent/matrix/multiply-element.js","recurrent/matrix/multiply-element-b.js","recurrent/matrix/relu.js","recurrent/matrix/relu-b.js","recurrent/matrix/row-pluck.js","recurrent/matrix/row-pluck-b.js","recurrent/matrix/sigmoid.js","recurrent/matrix/sigmoid-b.js","recurrent/matrix/tanh.js","recurrent/matrix/tanh-b.js","recurrent/matrix/softmax.js","recurrent/matrix/equation.js","recurrent/matrix/sample-i.js","recurrent/matrix/max-i.js","utilities/data-formatter.js","recurrent/rnn.js","utilities/array-lookup-table.js","recurrent/rnn-time-step.js","recurrent/lstm.js","recurrent/lstm-time-step.js","recurrent/gru.js","recurrent/gru-time-step.js","utilities/to-svg.js","index.js"],"names":["activate","weight","measure","error","module","exports","Math","max","delta","value","exp","tanh","leakyRelu","require","relu","sigmoid","CrossValidate","Classifier","options","json","trainOpts","trainSet","testSet","classifier","beginTrain","Date","now","trainingStats","train","beginTest","testStats","test","endTest","stats","Object","assign","trainTime","testTime","iterations","total","learningRate","hiddenLayers","network","toJSON","array","i","length","j","floor","random","temp","data","k","Error","size","constructor","Array","shuffleArray","newData","keys","forEach","key","avgs","stat","binaryStats","truePos","trueNeg","falsePos","falseNeg","results","isBinary","dclone","slice","splice","result","testPartition","hasOwnProperty","push","precision","recall","accuracy","testSize","trainSize","sets","fromJSON","crossValidateJson","reduce","prev","cur","Infinity","instance","f","define","amd","window","global","self","GPU","r","e","n","t","o","c","u","a","code","p","call","factory","reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","set","pos","isIdentifierStart","astral","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","prototype","toString","has","obj","propName","isArray","wordsRegexp","words","replace","Position","line","col","column","offset","SourceLocation","start","end","sourceFile","getLineInfo","input","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","getOptions","opts","opt","tokens","token","pushComment","block","text","startLoc","endLoc","comment","type","loc","range","SCOPE_TOP","SCOPE_FUNCTION","SCOPE_VAR","SCOPE_ASYNC","SCOPE_GENERATOR","functionFlags","async","generator","BIND_NONE","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","lastIndexOf","curLine","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","prototypeAccessors","inFunction","configurable","inGenerator","inAsync","allowSuper","allowDirectSuper","treatFunctionsAsVar","parse","node","startNode","nextToken","parseTopLevel","get","currentVarScope","flags","currentThisScope","treatFunctionsAsVarInScope","currentScope","inNonArrowFunction","extend","len","plugins","arguments","cls","parseExpressionAt","parser","parseExpression","tokenizer","defineProperties","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","body","stmt","parseStatement","list","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","await","parseForIn","init","toAssignable","checkLVal","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","empty","handler","clause","param","parseBindingAtom","simple","finalizer","object","i$1","label$1","statementStart","indexOf","createNewLexicalScope","update","isForIn","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","classBody","hadConstructor","element","parseClassElement","superClass","constructorAllowsSuper","this$1","method","tryContextual","noLineBreak","computed","startNodeAt","static","isGenerator","parsePropertyName","allowsDirectSuper","parseClassMethod","parseMethod","parseExprSubscripts","parseExprAtom","checkExport","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","proto","other","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","oldShorthandAssign","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","parseSubscripts","base","noCalls","maybeAsyncArrow","parseSubscript","property","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","readRegexp","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","parseNew","parseExprImport","parseDynamicImport","errorPos","bigint","val","innerStartPos","spreadStart","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","isImport","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","allowDuplicates","nameHash","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","Scope","var","lexical","functions","scope","redeclared","scope$2","scope$3","Node","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","ecma9BinaryProperties","ecma10BinaryProperties","unicodeBinaryProperties","ecma11BinaryProperties","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","unicodeScriptValues","ecma11ScriptValues","buildUnicodeData","d","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$8","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString","ch","isSyntaxCharacter","isControlLetter","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","isRegExpIdentifierStart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$9","codePointToString$1","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","readInt","radix","BigInt","startsWithDot","octal","str$1","val$1","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","word","escStart","esc","acorn","version","tokTypes","keywordTypes","tokContexts","defineProperty","glWiretap","gl","readPixelsVariableName","contextName","throwGetError","useTrackablePrimitives","readPixelsFile","recording","variables","onReadPixels","onUnrecognizedArgumentLookup","proxy","Proxy","listen","addComment","checkThrowError","insertVariable","setIndent","getContextVariableName","indent","getError","variableName","contextVariables","extension","getExtension","tappedExtension","glExtensionWiretap","getEntity","targetVariableName","getVariableName","argumentAsStrings","join","width","height","sourceVariable","imageVariable","imageCount","readPixels","apply","argumentsToString","addVariable","drawBuffers","writePPM","methodCallToString","trackablePrimitive","entityNames","spaces","repeat","args","getExtensionEntity","drawBuffersWEBGL","extensionEntityNames","from","map","arg","argumentToString","hasLines","hasSingleQuotes","hasDoubleQuotes","JSON","stringify","instantiationString","setupArguments","newArguments","toArray","apiDecorate","kernel","setOutput","output","setupOutput","graphical","setupGraphical","setConstants","constants","setGraphical","setCanvas","canvas","setContext","destroy","validateSettings","Promise","resolve","reject","getPixels","flip","x","y","flipPixels","pixels","halfHeight","bytesPerRow","Uint8ClampedArray","topOffset","bottomOffset","subarray","copyWithin","_imageData","color","g","b","thread","_colorData","mockMethod","methods","createImageData","z","gpuMock","fn","settings","mock3D","cube","matrix","row","Float32Array","_fn","mock2DGraphical","mock2D","mock1D","utils","alias","fnString","Function","getArgumentNamesFromString","getFunctionBodyFromString","FunctionNode","CPUFunctionNode","ast","retArr","isRootKernel","argumentNames","argumentName","astGeneric","returnType","getType","leadingReturnStatement","followingReturnStatement","isSubKernel","isNaN","astErrorOutput","idtNode","forNode","initArr","testArr","updateArr","bodyArr","isSafe","pushState","includes","popState","iVariableName","getInternalVariableName","whileNode","doWhileNode","assNode","getDeclaration","assignable","bNode","isState","varDecNode","ifNode","tNode","mNode","getMemberExpressionDetails","signature","xProperty","yProperty","zProperty","origin","removeIstanbulCoverage","markupName","isInput","constant","constantTypes","argumentSizes","dynamicArguments","functionName","astMemberExpressionUnroll","calledFunctions","isAstMathFunction","onFunctionCall","targetTypes","lookupFunctionArgumentTypes","argumentType","triggerImplyArgumentType","arrNode","arrLen","subNode","cpuKernelString","cpuKernel","header","thisProperties","beforeReturn","useFunctionKeyword","constantsToString","colorFn","flattenFunctionToString","thisLookup","propertyName","findDependency","getPixelsFn","constantKeys","argumentTypes","flattenedImageTo3DArray","_imageTo3DArray","doNotDefine","flattenedImageTo2DArray","_mediaTo2DArray","_kernelString","Kernel","FunctionBuilder","CPUKernel","mergeSettings","_prependedString","translatedSources","features","combinedKernel","freeze","kernelMap","isIntegerDivisionAccurate","document","createElement","OffscreenCanvas","getContext","argType","getVariableType","strictIntegers","getDimensions","checkOutput","subKernels","functionBuilder","fromKernel","getPrototypes","getKernelResultType","setupConstants","translateSource","kernelString","getKernelString","debug","console","log","run","bind","buildSignature","built","kernelThreadString","filter","shift","_getLoopMaxString","injectedNative","_processConstants","_processArguments","_graphicalKernelBody","_resultKernelBody","loopMaxIterations","media","videoWidth","videoHeight","ctx","drawImage","pixelsData","getImageData","imageArray","pixel","images","imagesArray","_resultKernel1DLoop","_kernelOutput","_resultKernel2DLoop","_resultKernel3DLoop","_graphicalKernel2DLoop","_graphicalOutput","constructorString","_getKernelResultTypeConstructorString","_mapSubKernels","subKernel","removeCanvasReference","functionNodes","rootNode","subKernelNodes","nativeFunctions","functionMap","nativeFunctionNames","lookupChain","functionNodeDependencies","functionCalls","nativeFunction","extraNodeOptions","kernelArguments","kernelConstants","argumentBitRatios","constantBitRatios","optimizeFloatMemory","dynamicOutput","onIstanbulCoverageVariable","kernelConstant","needsArgumentType","assignArgumentType","lookupReturnType","requestingNode","lookupFunctionArgumentName","argumentIndex","lookupFunctionArgumentBitRatio","triggerImplyArgumentBitRatio","calleeFunctionName","assignArgumentBitRatio","trackFunctionCall","onNestedFunction","nestedFunction","nodeOptions","traceFunctionAST","addFunctionNode","rootNodeOptions","functionNode","retList","functionIndex","traceFunctionCalls","dependantFunctionName","getPrototypesFromFunctionNames","reverse","functionList","ret","nativeIndex","jsonFunctionNodes","jsonFunctionNode","getStringFromFunctionNames","_isNativeFunction","_lookupNativeFunctionReturnType","_isFunction","_getFunction","getJsAST","Boolean","_getNativeFunction","bitRatio","fnNode","calleeNode","calleeBitRatio","Set","add","subKernelNode","called","functionCallIndex","FunctionTracer","getFunctionNameFromString","identifiers","contexts","states","strictTypingChecking","fixIntegerDivisionAccuracy","literalTypes","validate","_string","_internalVariableNames","isFunctionString","firstExpression","inParser","functionAST","inForLoopInit","inForLoopTest","dependencies","getDependencies","valueType","realType","isSafeDependencies","identifier","typeLookupMap","constantName","trim","literalKey","astKey","Number","isInteger","inferArgumentTypesIfNeeded","getVariableSignature","rightType","lastType","isAstVariable","findIdentifierOrigin","variableSignature","getLookupType","getConstantType","isAstMathVariable","lastReturn","findLastReturn","every","dependency","isNotSafe","details","returnRawValue","unshift","signatureString","allowedExpressions","astFunctionDeclaration","astFunctionExpression","astReturnStatement","astLiteral","astBinaryExpression","astIdentifierExpression","astAssignmentExpression","astExpressionStatement","astEmptyStatement","astBlockStatement","astIfStatement","astSwitchStatement","astBreakStatement","astContinueStatement","astForStatement","astWhileStatement","astDoWhileStatement","astVariableDeclaration","astVariableDeclarator","astThisExpression","astSequenceExpression","astUnaryExpression","astUpdateExpression","astLogicalExpression","astMemberExpression","astCallExpression","astArrayExpression","astDebuggerStatement","astConditionalExpression","debugString","getAstString","splitLines","lineBefore","isChildFunction","astFunction","esNode","eNode","brNode","crNode","iVarDecNode","sNode","sequenceResult","isIstanbulAST","expressionResult","uNode","unaryResult","checkAndUpconvertBitwiseUnary","logNode","astToFind","stack","atNode","separator","runningContexts","functionContexts","returnStatements","trackedIdentifiers","newFunctionContext","scan","newContext","currentContext","currentFunctionContext","functionContext","useFunctionContext","suggestedType","normalizeDeclarations","hasState","testIdentifiers","getIdentifiers","toStringWithoutUtils","getRenderString","targetName","readBackValue","getToArrayString","kernelResult","textureName","flattenedFunctions","findKernelValue","kernelValues","values","uploadedValues","HTMLImageElement","kernelValue","uploadValue","variableIndex","variable","glKernelString","originKernel","setupContextString","destroyContextString","build","postResult","subKernelsResultVariableSetup","subKernelsResultIndex","pipeline","immutable","tactic","checkContext","kernelArgument","imageIndex","texture","flattenTo","flatten2dArrayTo","flatten3dArrayTo","flatten4dArrayTo","renderOutput","renderTexture","formatValues","varName","renderKernels","getStringValueHandler","mappedTextures","subKernelResult","subKernelTextureName","rendered","getGetPixelsString","constantsUpload","GLTextureArray2Float","GLTextureArray2Float2D","GLTextureArray2Float3D","GLTextureArray3Float","GLTextureArray3Float2D","GLTextureArray3Float3D","GLTextureArray4Float","GLTextureArray4Float2D","GLTextureArray4Float3D","GLTextureFloat","GLTextureFloat2D","GLTextureFloat3D","GLTextureMemoryOptimized","GLTextureMemoryOptimized2D","GLTextureMemoryOptimized3D","GLTextureUnsigned","GLTextureUnsigned2D","GLTextureUnsigned3D","GLTextureGraphical","GLKernel","transferValues","TextureConstructor","renderRawOutput","texSize","translatedSource","compiledFragmentShader","compiledVertexShader","switchingKernels","fix","warnDeprecated","floatTextures","testContext","testCanvas","kernelFunction","v1","v2","isDrawBuffers","getIsDrawBuffers","isFloatRead","getIsFloatRead","getIsIntegerDivisionAccurate","isTextureFloat","getIsTextureFloat","channelCount","getChannelCount","maxTextureSize","getMaxTextureSize","lowIntPrecision","getShaderPrecisionFormat","FRAGMENT_SHADER","LOW_INT","lowFloatPrecision","LOW_FLOAT","mediumIntPrecision","MEDIUM_INT","mediumFloatPrecision","MEDIUM_FLOAT","highIntPrecision","HIGH_INT","highFloatPrecision","HIGH_FLOAT","getVariablePrecisionString","isStartingVariableName","isVariableChar","char","nextChar","typeMap","lastKernel","threadDim","w","h","ceil","RGBA","FLOAT","bytes","Uint8Array","UNSIGNED_BYTE","buffer","splitArray","readPackedPixelsToUint8Array","readPackedPixelsToFloat32Array","renderKernelsToTextures","requestFallback","renderKernelsToArrays","renderValues","erect3DPackedFloat","erect2DPackedFloat","erectPackedFloat","readFloatPixelsToFloat32Array","erectMemoryOptimized3DFloat","erectMemoryOptimized2DFloat","erectMemoryOptimizedFloat","erect3DArray2","erect2DArray2","erectArray2","erect3DArray3","erect2DArray3","erectArray3","erect3DArray4","erect2DArray4","erectArray4","erect3DFloat","erect2DFloat","erectFloat","getMainResultNumberTexture","getMainResultArray2Texture","getMainResultArray3Texture","getMainResultArray4Texture","getMainResultGraphical","getMainResultMemoryOptimizedFloats","getMainResultTexture","getMainResultPackedPixels","linesToString","getMainResultKernelNumberTexture","getMainResultSubKernelNumberTexture","getMainResultKernelArray2Texture","getMainResultSubKernelArray2Texture","getMainResultKernelArray3Texture","getMainResultSubKernelArray3Texture","getMainResultKernelArray4Texture","getMainResultSubKernelArray4Texture","variablePrecision","clone","existingValue","newOutput","toKernelOutput","newThreadDim","newTexSize","getKernelTextureSize","oldTexSize","oldPrecision","newPrecision","warn","switchKernels","needed","bindFramebuffer","FRAMEBUFFER","framebuffer","updateMaxTexSize","viewport","maxTexSize","delete","reason","textureSize","isInt","low","medium","high","requiredSize","log2","rangeMax","prevArg","_refs","mappedTexture","int","float","vec2","vec3","vec4","GLTexture","_framebuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","_deleted","Texture","cloneTexture","existingFramebuffer","getParameter","FRAMEBUFFER_BINDING","selectTexture","target","createTexture","texImage2D","internalFormat","textureFormat","textureType","copyTexSubImage2D","deleteFramebuffer","activeTexture","TEXTURE31","bindTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","WebGLKernel","isSupported","testExtensions","HeadlessGLKernel","preserveDrawingBuffer","extensions","STACKGL_resize_drawingbuffer","STACKGL_destroy_context","OES_texture_float","OES_texture_float_linear","OES_element_index_uint","WEBGL_draw_buffers","fallbackRequested","resize","WEBGL_color_buffer_float","getFeatures","RENDERER","MAX_DRAW_BUFFERS_WEBGL","MAX_TEXTURE_SIZE","setupFeatureChecks","KernelValue","onRequestContextHandle","onUpdateValueMismatch","contextHandle","forceUploadEachRun","Input","useLegacyEncoder","onRequestFallback","forceUploadKernelConstants","gpu","addFunction","addNativeFunction","initCanvas","initContext","initPlugins","functionToIGPUFunction","splitArgumentTypes","argumentTypesObject","nativeFunctionArguments","nativeFunctionReturnType","Int32Array","getBitRatio","needsConstantTypes","setDynamicOutput","setDynamicArguments","removeCanvasReferences","Int8Array","Uint16Array","Int16Array","argumentsTypes","pluginNames","plugin","Constructor","getSignature","getArgumentTypes","sourceString","fragmentShader","WebGLFunctionNode","consequentType","alternateType","castLiteralToFloat","castValueToInteger","castLiteralToInteger","round","checkAndUpconvertOperator","castValueToFloat","leftType","operatorMap","literalResult","literalType","bitwiseResult","checkAndUpconvertBitwiseOperators","upconvertableOperators","foundOperator","initString","initNeedsSemiColon","declarationSets","declarationSet","info","actualType","markupType","declarationResult","fallingThrough","defaultResult","movingDefaultToEnd","pastFirstIf","testType","memberExpressionPropertyMarkup","memberExpressionXYZ","isMathFunction","functionMatch","functionReplace","targetType","WebGLKernelValueBoolean","WebGLKernelValueFloat","WebGLKernelValueInteger","WebGLKernelValueHTMLImage","WebGLKernelValueDynamicHTMLImage","WebGLKernelValueHTMLVideo","WebGLKernelValueDynamicHTMLVideo","WebGLKernelValueSingleInput","WebGLKernelValueDynamicSingleInput","WebGLKernelValueUnsignedInput","WebGLKernelValueDynamicUnsignedInput","WebGLKernelValueMemoryOptimizedNumberTexture","WebGLKernelValueDynamicMemoryOptimizedNumberTexture","WebGLKernelValueNumberTexture","WebGLKernelValueDynamicNumberTexture","WebGLKernelValueSingleArray","WebGLKernelValueDynamicSingleArray","WebGLKernelValueSingleArray1DI","WebGLKernelValueDynamicSingleArray1DI","WebGLKernelValueSingleArray2DI","WebGLKernelValueDynamicSingleArray2DI","WebGLKernelValueSingleArray3DI","WebGLKernelValueDynamicSingleArray3DI","WebGLKernelValueSingleArray2","WebGLKernelValueSingleArray3","WebGLKernelValueSingleArray4","WebGLKernelValueUnsignedArray","kernelValueMaps","unsigned","dynamic","WebGLKernelValueDynamicUnsignedArray","single","lookupKernelValueType","undefined","WebGLKernelValue","WebGLKernelArray","requestTexture","setupTexture","defineTexture","onRequestTexture","onRequestIndex","dimensionsId","sizeId","deleteTexture","setUniform1i","checkSize","dimensions","setUniform3iv","setUniform2iv","inputTexture","getMemoryOptimizedFloatTextureSize","uploadArrayLength","setShape","getMemoryOptimizedPackedTextureSize","Type","getTransferArrayType","preUploadValue","setUniform1f","inputImage","initialValueConstructor","pixelStorei","UNPACK_FLIP_Y_WEBGL","Uint32Array","Float64Array","updateTextureArgumentRefs","valueDimensions","setUniform2fv","setUniform3fv","setUniform4fv","TranserArrayType","mrud","vertexShader","canvases","maxTexSizes","endianness","systemEndianness","argumentTextureCount","constantTextureCount","fragShader","vertShader","drawBuffersMap","onRequestSwitchKernel","textureCache","programUniformLocationCache","uniform1fCache","uniform1iCache","uniform2fCache","uniform2fvCache","uniform2ivCache","uniform3fvCache","uniform3ivCache","uniform4fvCache","uniform4ivCache","WebGLRenderingContext","isContextMatch","alpha","depth","antialias","pluginsToUse","some","pluginName","checkTextureSize","canvasIndex","needsArgumentTypes","textureIndexes","TEXTURE0","setup","initExtensions","failureResult","pickRenderStrategy","enable","SCISSOR_TEST","getVertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getFragmentShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","vertices","texCoords","texCoordOffset","byteLength","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","bufferSubData","aPosLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","aTexCoordLoc","useProgram","updateValue","_setupOutputTexture","_setupSubOutputTextures","getPrototypeString","setupReturnTypes","getSubKernelResultType","scissor","setUniform2f","onBeforeRun","bindRenderbuffer","RENDERBUFFER","drawArrays","TRIANGLE_STRIP","getInternalFormat","beforeMutate","format","getTextureFormat","getUniformLocation","uniform1f","uniform1i","value1","value2","cache","uniform2f","uniform2fv","uniform2iv","uniform3fv","uniform3iv","uniform4fv","uniform4iv","HEADER","_getHeaderString","LOOP_MAX","PLUGINS","_getPluginsString","CONSTANTS","_getConstantsString","DECODE32_ENDIANNESS","_getDecode32EndiannessString","ENCODE32_ENDIANNESS","_getEncode32EndiannessString","DIVIDE_WITH_INTEGER_CHECK","_getDivideWithIntegerCheckString","INJECTED_NATIVE","_getInjectedNative","MAIN_CONSTANTS","_getMainConstantsString","MAIN_ARGUMENTS","_getMainArgumentsString","KERNEL","MAIN_RESULT","getMainResultString","FLOAT_TACTIC_DECLARATION","getFloatTacticDeclaration","INT_TACTIC_DECLARATION","getIntTacticDeclaration","SAMPLER_2D_TACTIC_DECLARATION","getSampler2DTacticDeclaration","SAMPLER_2D_ARRAY_TACTIC_DECLARATION","getSampler2DArrayTacticDeclaration","getSource","getKernelResultDeclaration","getMainResultKernelPackedPixels","getMainResultSubKernelPackedPixels","channels","channel","getMainResultKernelMemoryOptimizedFloats","getMainResultSubKernelMemoryOptimizedFloats","src","artifact","replaceArtifacts","_getFragShaderArtifactMap","_getVertShaderArtifactMap","deleteBuffer","deleteShader","deleteProgram","textureCacheIndex","idx","destroyExtensions","loseContext","WebGL2FunctionNode","WebGL2KernelValueBoolean","WebGL2KernelValueFloat","WebGL2KernelValueInteger","WebGL2KernelValueHTMLImage","WebGL2KernelValueDynamicHTMLImage","WebGL2KernelValueHTMLImageArray","WebGL2KernelValueDynamicHTMLImageArray","WebGL2KernelValueHTMLVideo","WebGL2KernelValueDynamicHTMLVideo","WebGL2KernelValueSingleInput","WebGL2KernelValueDynamicSingleInput","WebGL2KernelValueUnsignedInput","WebGL2KernelValueDynamicUnsignedInput","WebGL2KernelValueMemoryOptimizedNumberTexture","WebGL2KernelValueDynamicMemoryOptimizedNumberTexture","WebGL2KernelValueNumberTexture","WebGL2KernelValueDynamicNumberTexture","WebGL2KernelValueSingleArray","WebGL2KernelValueDynamicSingleArray","WebGL2KernelValueSingleArray1DI","WebGL2KernelValueDynamicSingleArray1DI","WebGL2KernelValueSingleArray2DI","WebGL2KernelValueDynamicSingleArray2DI","WebGL2KernelValueSingleArray3DI","WebGL2KernelValueDynamicSingleArray3DI","WebGL2KernelValueSingleArray2","WebGL2KernelValueSingleArray3","WebGL2KernelValueSingleArray4","WebGL2KernelValueUnsignedArray","WebGL2KernelValueDynamicUnsignedArray","TEXTURE_2D_ARRAY","texImage3D","texSubImage3D","RGBA32F","WebGL2Kernel","EXT_color_buffer_float","R32F","RED","RG32F","RG","REPEAT","texStorage2D","WebGL2RenderingContext","MAX_DRAW_BUFFERS","lib","bindTo","kernelRunShortcut","kernelOrder","kernelTypes","internalKernels","mode","kernels","chooseKernel","Worker","importScripts","HTMLCanvasElement","ExternalKernel","isFunction","devKernel","upgradeDeprecatedCreateKernelSettings","switchableKernels","settingsCopy","fallbackKernel","kernelRun","dynamicArgument","replaceKernel","mergedSettings","reasons","existingKernel","newKernel","argument2Type","createKernel","firstKernel","setPipeline","setTimeout","destroyContext","upgradedSettings","floatOutput","outputToTexture","outputImmutable","webGLKernelValueMaps","webGL2KernelValueMaps","mathRandom","bindKernelToShortcut","shortcut","allPropertiesOf","substring","__defineGetter__","__defineSetter__","resetSwitchingKernels","accept","replacementKernel","functionReturnType","FUNCTION_NAME","STRIP_COMMENTS","ARGUMENT_NAMES","_systemEndianness","getSystemEndianness","ArrayBuffer","funcObj","toLowerCase","funcStr","fnStr","isActiveClone","nodeName","texelCount","closestSquareDimensions","sqrt","totalArea","roundTo","pad","dim","part","byteOffset","lines","props","getOwnPropertyNames","getPrototypeOf","oldName","newName","yResults","xStart","xEnd","zResults","xResults","xResultsMax","XResultsMax","flattened","functionDependencies","flatten","flat","foundSource","flattenedFunctionDependencies","functionDependency","normalizedDeclarations","declarationIndex","propertyIndex","subPropertyIndex","subProperty","elementIndex","splitHTMLImageToRGB","image","rKernel","gKernel","bKernel","aKernel","splitRGBAToCanvases","rgba","visualKernelR","visualKernelG","visualKernelB","visualKernelA","getMinifySafeName","gpuInstance","teardown","makeKernel","createKernelMap","makeDevKernel","kernelInput","release","zeros","checkSameSize","layer1","layer2","zeros2D","zeros3D","Base","deltas","weights","praxis","praxisOpts","defaults","setupPraxis","layer","predictKernel","compareKernel","previousLayer","nextLayer","resetDeltas","jsonLayer","resetDeltasValue","resetDeltasKernel","Activation","inputLayer","Internal","Filter","Model","Modifier","Operator","predict","inputWeights1","inputWeights2","Add","inputLayer1","inputLayer2","layerTemplate","updateChange","changes","incomingWeights","inputDeltas","lastChange","inputDelta","incoming","change","momentum","ArthurDeviationWeights","weightsLayer","incomingLayer","deltaLayer","setupKernels","arthurDeviationWeights","ArthurDeviationBiases","arthurDeviationBiases","randomWeight","randos","randos2D","Random","weights1","weights2","sum","compareFromX","inputWeights","compareFromY","Multiply","compareKernel1","compareKernel2","inputLayer1Deltas","inputLayer2Deltas","newDeltas1","newDeltas2","multiply","predict2D","inputs","predict3D","compare2D","compare3D","Sigmoid","noopPraxis","arthurFeedForward","weightsPraxis","biasesLayer","biasesPraxis","multiplyLayer","addLayer","sigmoidLayer","setStride","strideX","stride","strideY","setPadding","paddingX","padding","paddingY","rondos2D","fill","randos3D","filters","biases","startFilterX","startInputX","endFilterX","filterWidth","inputWidth","startFilterY","startInputY","endFilterY","filterHeight","inputHeight","inputDepth","filterY","inputY","filterX","inputX","compareFilterDeltas","filterDeltas","startDeltaX","endDeltaX","deltaWidth","startDeltaY","endDeltaY","deltaHeight","deltaY","deltaX","deltaZ","compareInputDeltas","compareBiases","biasDeltas","Convolution","filterCount","bias","learnFilters","learnInputs","compareFilterDeltasKernel","deltasWidth","deltasHeight","deltasDepth","compareInputDeltasKernel","compareBiasesKernel","convolution","setDropout","dropout","trainingPredict","probability","compare","dropouts","Dropout","isTraining","feedForward","compareInputDeltas3D","compareFilterDeltas3D","inputZ","FullyConnected","connectionCount","inputLayerDeltas","fullyConnected","Negative","negative","inputLayerWeights","MultiplyElement","multiplyElement","ones","ones2D","Ones","errors","Tanh","Zeros","gru","recurrentInput","updateGateWeights","updateGatePeepholes","updateGateBias","updateGate","resetGateWeights","resetGatePeepholes","resetGateBias","resetGate","cellWeights","cellPeepholes","cellBias","cell","rows","columns","reshapeInput","predict1D","LeakyRelu","lstm","inputGateWeights","inputGatePeepholes","inputGateBias","inputGate","forgetGateWeights","forgetGatePeepholes","forgetGateBias","forgetGate","outputGateWeights","outputGatePeepholes","outputGateBias","outputGate","memoryWeights","memoryPeepholes","memoryBias","memory","retainCell","writeCell","compare1D","targetValues","Target","compareFn","outputGateConnector","setSwitchY","setSwitchX","largestValue","largestX","largestY","switchY","switchX","outputWidth","outputHeight","deltasY","deltasX","switchXValue","switchYValue","Pool","outputDepth","prevWeights","pool","Relu","recurrent","setDimensions","transition","Regression","learn","targets","regression","getMaxValue","maxInput","getMaxValue2D","getMaxValue3D","getSum","getSum2D","getSum3D","getExponentials","getExponentials2D","getExponentials3D","exponentials","exponentialsSum","indicator","loss","SoftMax","getExponentialsKernel","getMaxValueKernel","getSumKernel","maxValue","softMax","SVM","svm","Transpose","transpose","net","maxProp","lookup","hashes","hash","memo","toHash","objects2D","table","valueIndex","objects","tableIndex","dataIndex","arrayLength","limit","shape","Adam","adam","getMomentum","decay","previousMomentum","clipByValue","previousMomenta","clippedDelta","clipValue","decayRate","smoothEps","regularizationStrength","isClippedByValue","MomentumRootMeanSquaredPropagation","momenta","momentumRootMeanSquaredPropagation","MRmsProp","mRmsProp","Layer","realLayer","Reflect","construct","traverseLayersFrom","cb","layers","mse2d","layerFromJSON","flattenLayers","FeedForward","outputLayer","_updateTrainingOptions","trainDefaults","structure","_inputLayer","_hiddenLayers","_outputLayer","_validateTrainingOptions","_setLogMethod","validations","errorThresh","logPeriod","callback","callbackPeriod","timeout","errorCheckInterval","reinforce","binaryThresh","_connectHiddenLayers","hiddenLayer","_connectLayers","initializeLayers","_getMSE","_addMSE","_divideMSESum","mseSum","inputLookup","runInput","outputLookup","status","endTime","_prepTraining","_trainingTick","_calculateTrainingError","_trainPatterns","formattedData","_formatData","initialize","transferredData","transferInput","transferOutput","formattedDatum","prevSum","_trainPattern","resultArray","logErrorRate","_calculateDeltas","adjustWeights","tmp","inputDatumCheck","buildLookup","datumParam","outputDatumCheck","jsonLayers","inputLayerIndex","inputLayer1Index","inputLayer2Index","sizes","concat","getLayer","thaw","thawing","thaws","Thaw","items","defaultSettings","each","tick","clearTimeout","delay","stop","doTick","makeReady","middle","Block","count","_next","addArray","insert","insertArray","ReflectOwnKeys","R","ReflectApply","receiver","ProcessEmitWarning","warning","ownKeys","getOwnPropertySymbols","NumberIsNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","listener","prepend","m","events","existing","TypeError","create","newListener","emit","warned","emitter","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","copy","spliceOne","enumerable","RangeError","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","on","prependListener","once","prependOnceListener","originalListener","off","removeAllListeners","rawListeners","eventNames","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","Item","noop","nextTick","title","env","argv","versions","binding","cwd","chdir","dir","umask","pna","WriteReq","chunk","encoding","CorkedRequest","entry","finish","onCorkedFinish","Writable","Duplex","asyncWrite","WritableState","util","inherits","internalUtil","deprecate","Stream","Buffer","OurUint8Array","_uint8ArrayToBuffer","_isUint8Array","isBuffer","realHasInstance","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","highWaterMark","writableHwm","writableHighWaterMark","defaultHwm","finalCalled","needDrain","ending","ended","finished","destroyed","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","_writableState","writable","write","_write","writev","_writev","_destroy","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","holder","allBuffers","callFinal","prefinish","need","endWritable","corkReq","getBuffer","_","hasInstance","pipe","cork","uncork","setDefaultEncoding","_undestroy","undestroy","TrainStream","neuralNetwork","dataFormatDetermined","floodCallback","doneTrainingCallback","updateTrainingOptions","finishStreamIteration","enc","addFormat","firstDatum","formatData","trainPattern","verifyIsInitialized","LookupTable","datum","arraysToFloat32Arrays","arrays","arrayToFloat32Arrays","arrayToFloat32Array","objectsToFloat32Arrays","objectToFloat32Arrays","objectToFloat32Array","default","mse","NeuralNetwork","outputs","calculateDeltas","inputLookupLength","outputLookupLength","inputSize","outputSize","beta1","beta2","epsilon","leakyReluAlpha","activation","prevSize","setActivation","_setupAdam","_runInputSigmoid","_calculateDeltasSigmoid","_runInputRelu","_calculateDeltasRelu","_runInputLeakyRelu","_calculateDeltasLeakyRelu","_runInputTanh","_calculateDeltasTanh","isRunnable","toObject","activeLayer","activeWeights","activeBiases","activeOutputs","currentSize","currentWeights","currentBiases","currentOutputs","validateTrainingOptions","setLogMethod","logTrainingStatus","calculateTrainingError","trainPatterns","prepTraining","trainingTick","thawedTrain","trainError","activeSize","activeOutput","activeError","activeDeltas","nextWeights","nextDeltas","currentErrors","currentDeltas","activeDelta","activeChanges","biasChangesLow","biasChangesHigh","changesLow","changesHigh","_adjustWeightsAdam","currentChangesLow","currentChangesHigh","currentBiasChangesLow","currentBiasChangesHigh","gradient","changeLow","changeHigh","momentumCorrection","pow","gradientCorrection","biasGradient","biasChangeLow","biasChangeHigh","biasMomentumCorrection","biasGradientCorrection","_formatInput","getTypedArrayFn","_formatOutput","addKeys","misclasses","errorSum","actual","expected","misclass","getTrainOptsJSON","needsVar","nodeHandle","layerNumber","nodeKey","layersAsMath","checkFns","gpuUtils","weightedSumSigmoid","weightedSumRelu","weightedSumLeakyRelu","weightedSumTanh","calcErrorOutput","calcDeltasSigmoid","calcDeltasRelu","calcDeltasLeakyRelu","calcDeltasTanh","calcError","calcChanges","previousChanges","previousOutputs","addWeights","addBiases","NeuralNetworkGPU","forwardPropagate","backwardPropagate","changesPropagate","biasesPropagate","buildRunInput","buildCalculateDeltas","buildGetChanges","buildChangeBiases","buildGetMSE","getMSE","getChanges","changeBiases","weightedSum","texturizeInputData","calcDeltas","outputTextures","texturizeOutputData","RecurrentConnection","layerDeltas","RecurrentInput","recurrentInputDeltas","recurrentInputWeights","RecurrentZeros","recurrentZeros","Recurrent","initialLayers","_hiddenLayerSets","_outputConnection","setLayer","flattenedLayers","_inputLayers","_outputLayers","_recurrentIndices","_model","previousHiddenLayers","firstLayer","recurrentIndex","previousHiddenLayer","setRecurrentInput","_previousInputs","_connectHiddenLayersDeep","reuseKernels","hiddenConnection","initializeDeep","hiddenLayersIndex","Matrix","ix","weightRows","deltasRows","rowIndex","weightValues","deltasValues","columnIndex","setWeight","setDeltas","randomFloat","gaussRandom","returnV","vVal","randomInteger","randomN","mu","std","RandomMatrix","OnesMatrix","product","leftRows","leftColumns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","leftColumn","rightColumnBase","leftIndex","rightIndex","leftRowRoot","rightRow","backPropagateValue","rowPluckIndex","rowBase","sig","mwi","maxVal","cloneNegative","addB","allOnes","multiplyB","multiplyElementB","reluB","rowPluck","rowPluckB","sigmoidB","tanhB","softmax","Equation","inputRow","inputValue","forwardFn","backpropagationFn","iForward","iBackpropagate","abs","runIndex","logProbabilities","probabilities","maxv","maxix","DataFormatter","maxThreshold","indexTable","characterTable","characters","specialIndexes","buildCharactersFromIterable","buildTables","tempCharactersTable","dataFormatterIndex","dataFormatterLength","characterIndex","charactersLength","character","toIndexes","indices","toCharacters","addSpecial","special","specialIndex","toIndexesInputOutput","dataFormatter","fromAllPrintable","addInputOutput","sampleI","maxI","RNN","stepCache","runs","ratioClipped","model","equations","allMatrices","equationConnections","outputConnector","inputRange","mapModel","getModel","hiddenSize","lastHiddenSize","equation","equationConnection","initialLayerInputs","getEquation","inputMatrixToRow","createInputMatrix","createHiddenLayers","hiddenMatrix","createOutputMatrix","trainInput","backpropagate","log2ppl","bindEquation","inputIndex","inputMax","equationIndex","predictTargetIndex","backpropagateIndex","regc","clipval","numClipped","numTot","matrixIndex","rawInput","isSampleI","temperature","maxPredictionLength","formatDataIn","previousIndex","outputMatrix","probs","formatDataOut","setupData","hiddenSizes","jsonString","previousConnectionIndex","connection","matrixToString","stateIndex","matrixOrigin","toInner","fileName","fnName","statesRaw","usedFunctionNames","innerFunctionsSwitch","toFunctionString","inputMatrix","previousResult","addUnrecognized","fromArrayInputOutput","ArrayLookupTable","RNNTimeStep","runObject","runNumbers","runObjects","runArrays","forecast","forecastNumbers","forecastObjects","forecastArrays","setSize","trainInputOutput","trainArrays","trainNumbers","dataShape","toTable2D","toInputTable2D","toOutputTable2D","predictTarget","lastOutput","inputArray","toArrayShort","toObjectPartial","totalSize","outputIndex","toArrays","lookupTable","errorMSE","errorsAbs","errorCount","forceForecast","formatInputData","formatOutputData","LSTM","inputHidden","inputBias","forgetMatrix","forgetHidden","forgetBias","outputHidden","outputBias","cellActivationMatrix","cellActivationHidden","cellActivationBias","cellWrite","LSTMTimeStep","GRU","updateGateInputMatrix","updateGateHiddenMatrix","resetGateInputMatrix","resetGateHiddenMatrix","cellWriteInputMatrix","cellWriteHiddenMatrix","cellWriteBias","GRUTimeStep","recurrentJSONTypes","drawInput","pixelX","pixelY","radius","fontSize","fontClassName","svg","className","drawNeuron","hidden","drawOutput","drawBackwardConnections","lineY","neuralNetworkToSVG","previousSize","rnnToSVG","recurrentLine","drawRecurrentConnections","moveX","moveY","x1","y1","x2","y2","getFeedForwardLayers","layerCount","getRecurrentLayers","wrapSVG","svgBody","getSizes","toSVG","mergedOptions","isRNN","layerTypes","likely","brain","utilities"],"mappings":"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AAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,MAAM,GAAG,KAAK,GAAG,IAAI,EAAE,KAAK,GAAG,KAAK,KAAK,KAEpuCC,EAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EA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","file":"brain-browser.min.js","sourceRoot":"../src","sourcesContent":["/**\n * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return weight > 0 ? weight : 0.01 * weight;\n}\n\n/**\n * Leaky Relu derivative\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return weight > 0 ? error : 0.01 * error;\n}\n\nmodule.exports = { activate, measure };\n","/**\n * Relu Activation, aka Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return Math.max(0, weight);\n}\n\n/**\n * Relu derivative\n * @param weight\n * @param delta\n * @returns {number}\n */\nfunction measure(weight, delta) {\n  if (weight <= 0) {\n    return 0;\n  }\n  return delta;\n}\n\nmodule.exports = { activate, measure };\n","/**\n * sigmoid activation\n * @param value\n * @returns {number}\n */\nfunction activate(value) {\n  return 1 / (1 + Math.exp(-value));\n}\n\n/**\n * sigmoid derivative\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return weight * (1 - weight) * error;\n}\n\nmodule.exports = { activate, measure };\n","/**\n *\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return Math.tanh(weight);\n}\n\n/**\n * @description grad for z = tanh(x) is (1 - z^2)\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return (1 - weight * weight) * error;\n}\n\nmodule.exports = { activate, measure };\n","const leakyRelu = require('./leaky-relu');\nconst relu = require('./relu');\nconst sigmoid = require('./sigmoid');\nconst tanh = require('./tanh');\n\nmodule.exports = { leakyRelu, relu, sigmoid, tanh };\n","class CrossValidate {\n\n  /**\n   *\n   * @param {NeuralNetwork|constructor} Classifier\n   * @param {object} [options]\n   */\n  constructor(Classifier, options) {\n    this.Classifier = Classifier;\n    this.options = options;\n    this.json = null;\n  }\n\n  /**\n   *\n   * @param {object} trainOpts\n   * @param {object} trainSet\n   * @param {object} testSet\n   * @returns {void|*}\n   */\n  testPartition(trainOpts, trainSet, testSet) {\n    const classifier = new this.Classifier(this.options);\n    const beginTrain = Date.now();\n    const trainingStats = classifier.train(trainSet, trainOpts);\n    const beginTest = Date.now();\n    const testStats = classifier.test(testSet);\n    const endTest = Date.now();\n    const stats = Object.assign({}, testStats, {\n      trainTime: beginTest - beginTrain,\n      testTime: endTest - beginTest,\n      iterations: trainingStats.iterations,\n      error: trainingStats.error,\n      total: testStats.total,\n      learningRate: classifier.trainOpts.learningRate,\n      hiddenLayers: classifier.hiddenLayers,\n      network: classifier.toJSON()\n    });\n\n    return stats;\n  }\n\n  /**\n   * Randomize array element order in-place.\n   * Using Durstenfeld shuffle algorithm.\n   * source: http://stackoverflow.com/a/12646864/1324039\n   */\n  shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} trainOpts\n   * @param {number} [k]\n   * @returns {\n   *  {\n   *    avgs: {\n   *      error: number,\n   *      trainTime: number,\n   *      testTime: number,\n   *      iterations: number,\n   *      error: number\n   *    },\n   *    stats: {\n   *      truePos: number,\n   *      trueNeg: number,\n   *      falsePos: number,\n   *      falseNeg: number,\n   *      total: number\n   *    },\n   *    sets: Array\n   *  }\n   * }\n   */\n  train(data, trainOpts = {}, k = 4) {\n    if (data.length < k) {\n      throw new Error(`Training set size is too small for ${ data.length } k folds of ${ k }`);\n    }\n\n    const size = data.length / k;\n\n    if (data.constructor === Array) {\n      this.shuffleArray(data);\n    } else {\n      const newData = {};\n      this.shuffleArray(Object.keys(data)).forEach((key) => {\n        newData[key] = data[key];\n      });\n      data = newData;\n    }\n\n    const avgs = {\n      trainTime: 0,\n      testTime: 0,\n      iterations: 0,\n      error: 0\n    };\n\n    const stats = {\n      total: 0\n    };\n\n    const binaryStats = {\n      total: 0,\n      truePos: 0,\n      trueNeg: 0,\n      falsePos: 0,\n      falseNeg: 0\n    };\n\n    const results = [];\n    let stat;\n    let isBinary = null;\n\n    for (let i = 0; i < k; i++) {\n      const dclone = data.slice(0);\n      const testSet = dclone.splice(i * size, size);\n      const trainSet = dclone;\n      const result = this.testPartition(trainOpts, trainSet, testSet);\n\n      if (isBinary === null) {\n        isBinary =\n          result.hasOwnProperty('falseNeg')\n          && result.hasOwnProperty('falsePos')\n          && result.hasOwnProperty('trueNeg')\n          && result.hasOwnProperty('truePos');\n        if (isBinary) {\n          Object.assign(stats, binaryStats);\n        }\n      }\n\n      for (stat in avgs) {\n        if (stat in avgs) {\n          avgs[stat] += result[stat];\n        }\n      }\n\n      for (stat in stats) {\n        if (stat in stats) {\n          stats[stat] += result[stat];\n        }\n      }\n\n      results.push(result);\n    }\n\n    for (stat in avgs) {\n      if (stat in avgs) {\n        avgs[stat] /= k;\n      }\n    }\n\n    if (isBinary) {\n      stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\n      stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\n      stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\n    }\n\n    stats.testSize = size;\n    stats.trainSize = data.length - size;\n\n\n    return this.json = {\n      avgs: avgs,\n      stats: stats,\n      sets: results\n    };\n  }\n\n  toNeuralNetwork() {\n    return this.fromJSON(this.json);\n  }\n\n  toJSON() {\n    return this.json;\n  }\n\n  fromJSON(crossValidateJson) {\n    const Classifier = this.Classifier;\n    const json = crossValidateJson.sets.reduce((prev, cur) => prev.error < cur.error ? prev : cur, {error: Infinity}).network;\n    if (Classifier.fromJSON) {\n      return Classifier.fromJSON(json);\n    }\n    const instance = new Classifier();\n    instance.fromJSON(json);\n    return instance;\n  }\n}\n\nmodule.exports = CrossValidate;\n","/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated JavaScript\n *\n * @version 2.6.2\n * @date Sun Jan 19 2020 07:44:57 GMT-0500 (Eastern Standard Time)\n *\n * @license MIT\n * The MIT License\n *\n * Copyright (c) 2020 gpu.js Team\n */(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GPU = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, function (exports) { 'use strict';\n\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];\n\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n\n\n\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n\n  var keywords$1 = {};\n\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n\n  var defaultOptions = {\n    ecmaVersion: 10,\n    sourceType: \"script\",\n    onInsertedSemicolon: null,\n    onTrailingComma: null,\n    allowReserved: null,\n    allowReturnOutsideFunction: false,\n    allowImportExportEverywhere: false,\n    allowAwaitOutsideFunction: false,\n    allowHashBang: false,\n    locations: false,\n    onToken: null,\n    onComment: null,\n    ranges: false,\n    program: null,\n    sourceFile: null,\n    directSourceFile: null,\n    preserveParens: false\n  };\n\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  var\n      BIND_NONE = 0, \n      BIND_VAR = 1, \n      BIND_LEXICAL = 2, \n      BIND_FUNCTION = 3, \n      BIND_SIMPLE_CATCH = 4, \n      BIND_OUTSIDE = 5; \n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    this.containsEsc = false;\n\n\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    this.potentialArrowAt = -1;\n\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    this.labels = [];\n    this.undefinedExports = {};\n\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n\n  var literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") { return true }\n      start += match[0].length;\n\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) { return true } \n    if (context) { return false }\n\n    if (nextCh === 123) { return true } \n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40) \n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); \n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n\n  pp$1.parseBlock = function(createNewLexicalScope, node) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (!this.eat(types.braceR)) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.strict = oldStrict;\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    if (this.eat(types.star)) {\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { \n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { \n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n\n  var pp$3 = Parser.prototype;\n\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n          else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n\n\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldShorthandAssign = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      oldShorthandAssign = refDestructuringErrors.shorthandAssign;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.shorthandAssign = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n      refDestructuringErrors.shorthandAssign = -1; \n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    if (oldShorthandAssign > -1) { refDestructuringErrors.shorthandAssign = oldShorthandAssign; }\n    return left\n  };\n\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n    if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n      if (element === base || element.type === \"ArrowFunctionExpression\") { return element }\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n    var computed = this.eat(types.bracketL);\n    if (computed || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n    this.next(); \n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); \n\n    node.source = this.parseMaybeAssign();\n\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\" || containsEsc)\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      node.body = this.parseBlock(false);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n\n    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n    this.strict = oldStrict;\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n  };\n\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  RegExpValidationState.prototype.at = function at (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i);\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current () {\n    return this.at(this.pos)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead () {\n    return this.at(this.nextIndex(this.pos))\n  };\n\n  RegExpValidationState.prototype.advance = function advance () {\n    this.pos = this.nextIndex(this.pos);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch) {\n    if (this.current() === ch) {\n      this.advance();\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      if (state.eat(0x29 )) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D ) || state.eat(0x7D )) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C )) {\n      this.regexp_alternative(state);\n    }\n\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    if (state.eat(0x5E ) || state.eat(0x24 )) {\n      return true\n    }\n\n    if (state.eat(0x5C )) {\n      if (state.eat(0x42 ) || state.eat(0x62 )) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    if (state.eat(0x28 ) && state.eat(0x3F )) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C );\n      }\n      if (state.eat(0x3D ) || state.eat(0x21 )) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 )) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F );\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A ) ||\n      state.eat(0x2B ) ||\n      state.eat(0x3F ) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B )) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D )) {\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 )) {\n      if (state.eat(0x3F ) && state.eat(0x3A )) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 )) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 )) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F ) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 )) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24  ||\n      ch >= 0x28  && ch <= 0x2B  ||\n      ch === 0x2E  ||\n      ch === 0x3F  ||\n      ch >= 0x5B  && ch <= 0x5E  ||\n      ch >= 0x7B  && ch <= 0x7D \n    )\n  }\n\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24  &&\n      !(ch >= 0x28  && ch <= 0x2B ) &&\n      ch !== 0x2E  &&\n      ch !== 0x3F  &&\n      ch !== 0x5B  &&\n      ch !== 0x5E  &&\n      ch !== 0x7C \n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F )) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C )) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24  || ch === 0x5F \n  }\n\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch === 0x200C  || ch === 0x200D \n  }\n\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      if (state.current() === 0x63 ) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B )) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 )) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30  && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 ) {\n      state.lastIntValue = 0x09; \n      state.advance();\n      return true\n    }\n    if (ch === 0x6E ) {\n      state.lastIntValue = 0x0A; \n      state.advance();\n      return true\n    }\n    if (ch === 0x76 ) {\n      state.lastIntValue = 0x0B; \n      state.advance();\n      return true\n    }\n    if (ch === 0x66 ) {\n      state.lastIntValue = 0x0C; \n      state.advance();\n      return true\n    }\n    if (ch === 0x72 ) {\n      state.lastIntValue = 0x0D; \n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41  && ch <= 0x5A ) ||\n      (ch >= 0x61  && ch <= 0x7A )\n    )\n  }\n\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x75 )) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C ) && state.eat(0x75 ) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        state.switchU &&\n        state.eat(0x7B ) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D ) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F )) {\n        state.lastIntValue = 0x2F; \n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63  && (!state.switchN || ch !== 0x6B )) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31  && ch <= 0x39 ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30  && ch <= 0x39 )\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50  || ch === 0x70 )\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B ) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D )\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64  ||\n      ch === 0x44  ||\n      ch === 0x73  ||\n      ch === 0x53  ||\n      ch === 0x77  ||\n      ch === 0x57 \n    )\n  }\n\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D )) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F \n  }\n\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B )) {\n      state.eat(0x5E );\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D )) {\n        return true\n      }\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D ) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        var ch$1 = state.current();\n        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 )) {\n      state.lastIntValue = 0x08; \n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D )) {\n      state.lastIntValue = 0x2D; \n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 )) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 )) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x39 \n  }\n\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30  && ch <= 0x39 ) ||\n      (ch >= 0x41  && ch <= 0x46 ) ||\n      (ch >= 0x61  && ch <= 0x66 )\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41  && ch <= 0x46 ) {\n      return 10 + (ch - 0x41 )\n    }\n    if (ch >= 0x61  && ch <= 0x66 ) {\n      return 10 + (ch - 0x61 )\n    }\n    return ch - 0x30 \n  }\n\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; \n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x37 \n  }\n\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n\n  var pp$9 = Parser.prototype;\n\n\n  pp$9.next = function() {\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 )\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: \n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: \n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: \n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { \n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { \n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    case 46: \n      return this.readToken_dot()\n\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n    case 63: ++this.pos; return this.finishToken(types.question)\n\n    case 96: \n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: \n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } \n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } \n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } \n      }\n\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: \n      return this.readNumber(false)\n\n    case 34: case 39: \n      return this.readString(code)\n\n\n    case 47: \n      return this.readToken_slash()\n\n    case 37: case 42: \n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: \n      return this.readToken_pipe_amp(code)\n\n    case 94: \n      return this.readToken_caret()\n\n    case 43: case 45: \n      return this.readToken_plus_min(code)\n\n    case 60: case 62: \n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: \n      return this.readToken_eq_excl(code)\n\n    case 126: \n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n\n  pp$9.readInt = function(radix, len) {\n    var start = this.pos, total = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n      if (code >= 97) { val = code - 97 + 10; } \n      else if (code >= 65) { val = code - 65 + 10; } \n      else if (code >= 48 && code <= 57) { val = code - 48; } \n      else { val = Infinity; }\n      if (val >= radix) { break }\n      ++this.pos;\n      total = total * radix + val;\n    }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; \n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = typeof BigInt !== \"undefined\" ? BigInt(this.input.slice(start, this.pos)) : null;\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var str$1 = this.input.slice(start, this.pos);\n      var val$1 = typeof BigInt !== \"undefined\" ? BigInt(str$1) : null;\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (next === 46 && !octal) { \n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { \n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } \n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var str = this.input.slice(start, this.pos);\n    var val = octal ? parseInt(str, 8) : parseFloat(str);\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { \n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { \n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" \n    case 114: return \"\\r\" \n    case 120: return String.fromCharCode(this.readHexChar(2)) \n    case 117: return codePointToString$1(this.readCodePoint()) \n    case 116: return \"\\t\" \n    case 98: return \"\\b\" \n    case 118: return \"\\u000b\" \n    case 102: return \"\\f\" \n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } \n    case 10: \n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { \n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) \n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n\n  var version = \"7.1.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { \n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); \n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n\n},{}],4:[function(require,module,exports){\nfunction setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  const mockMethod = () => kernel;\n  const methods = [\n    'setWarnVarUsage',\n    'setArgumentTypes',\n    'setTactic',\n    'setOptimizeFloatMemory',\n    'setDebug',\n    'setLoopMaxIterations',\n    'setConstantTypes',\n    'setFunctions',\n    'setNativeFunctions',\n    'setInjectedNative',\n    'setPipeline',\n    'setPrecision',\n    'setOutputToTexture',\n    'setImmutable',\n    'setStrictIntegers',\n    'setDynamicOutput',\n    'setHardcodeConstants',\n    'setDynamicArguments',\n    'setUseLegacyEncoder',\n    'setWarnVarUsage',\n    'addSubKernel',\n  ];\n  for (let i = 0; i < methods.length; i++) {\n    kernel[methods[i]] = mockMethod;\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  const halfHeight = height / 2 | 0; \n  const bytesPerRow = width * 4;\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n\n},{}],5:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};\n},{\"./utils\":114}],6:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass CPUFunctionNode extends FunctionNode {\n  astFunction(ast, retArr) {\n\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      retArr.push(') {\\n');\n    }\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          retArr.push('user_' + idtNode.name);\n        }\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      this.astGeneric(declarations[i], retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'value.value[]': \n        if (this.removeIstanbulCoverage) {\n          return retArr;\n        }\n        retArr.push(`${mNode.object.object.name}.${mNode.object.property.name}[${mNode.property.value}]`);\n        return retArr;\n      case 'value.value[][]': \n        if (this.removeIstanbulCoverage) {\n          return retArr;\n        }\n        retArr.push(`${mNode.object.object.object.name}.${mNode.object.object.property.name}[${mNode.object.property.value}][${mNode.property.value}]`);\n        return retArr;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const arrLen = arrNode.elements.length;\n\n    retArr.push('new Float32Array([');\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push('])');\n\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};\n},{\"../function-node\":10}],7:[function(require,module,exports){\nconst { utils } = require('../../utils');\n\nfunction constantsToString(constants, types) {\n  const results = [];\n  for (const name in types) {\n    if (!types.hasOwnProperty(name)) continue;\n    const type = types[name];\n    const constant = constants[name];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n        results.push(`${name}:${constant}`);\n        break;\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\n        break;\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants: incomingConstants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`,\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},',\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`,\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    });\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};\n},{\"../../utils\":114}],8:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`Looking up native function return type not supported on ${this.name}`);\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return 'cpu' + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this._prependedString = [];\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = [];\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  build() {\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      });\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\n  ${ this.injectedNative || '' }\n  const _this = this;\n  ${ this._processConstants() }\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._prependedString.join('') }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n  }\n\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLCanvas':\n        case 'HTMLImage':\n        case 'HTMLVideo':\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLCanvas':\n        case 'HTMLImage':\n        case 'HTMLVideo':\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _mediaTo2DArray(media) {\n    const canvas = this.canvas;\n    const width = media.width > 0 ? media.width : media.videoWidth;\n    const height = media.height > 0 ? media.height : media.videoHeight;\n    if (canvas.width < width) {\n      canvas.width = width;\n    }\n    if (canvas.height < height) {\n      canvas.height = height;\n    }\n    const ctx = this.context;\n    ctx.drawImage(media, 0, 0, width, height);\n    const pixelsData = ctx.getImageData(0, 0, width, height).data;\n    const imageArray = new Array(height);\n    let index = 0;\n    for (let y = height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; \n        pixel[1] = pixelsData[index++] / 255; \n        pixel[2] = pixelsData[index++] / 255; \n        pixel[3] = pixelsData[index++] / 255; \n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return this._resultKernel1DLoop(kernelString) + this._kernelOutput();\n      case 2:\n        return this._resultKernel2DLoop(kernelString) + this._kernelOutput();\n      case 3:\n        return this._resultKernel3DLoop(kernelString) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultKernel1DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultKernel3DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n\n  prependString(value) {\n    if (this._kernelString) throw new Error('Kernel already built');\n    this._prependedString.push(value);\n  }\n\n  hasPrependString(value) {\n    return this._prependedString.indexOf(value) > -1;\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../kernel\":36,\"./function-node\":6,\"./kernel-string\":7}],9:[function(require,module,exports){\nclass FunctionBuilder {\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n      onIstanbulCoverageVariable,\n      removeIstanbulCoverage,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i];\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerImplyArgumentBitRatio = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, returnType) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(null, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerImplyArgumentBitRatio,\n      onFunctionCall,\n      onIstanbulCoverageVariable: onIstanbulCoverageVariable ? (name) => onIstanbulCoverageVariable(name, kernel) : null,\n      removeIstanbulCoverage,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n        onNestedFunction,\n        onIstanbulCoverageVariable: onIstanbulCoverageVariable ? (name) => onIstanbulCoverageVariable(name, kernel) : null,\n        removeIstanbulCoverage,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      if (retList.indexOf(functionName) === -1) {\n        retList.push(functionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); \n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          if (this.lookupChain[i].ast === ast) {\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    return null;\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      }\n    }\n    const node = this._getFunction(functionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error('argument not found');\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error('argument bit ratio not found');\n    }\n    return bitRatio;\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    const node = this._getFunction(functionName);\n    if (this._isNativeFunction(calleeFunctionName)) return null;\n    const calleeNode = this._getFunction(calleeFunctionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`);\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`);\n    }\n    if (!calleeNode.argumentBitRatios) {\n      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);\n    }\n    const calleeBitRatio = calleeNode.argumentBitRatios[i];\n    if (typeof calleeBitRatio === 'number') {\n      if (calleeBitRatio !== bitRatio) {\n        throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`);\n      }\n      return calleeBitRatio;\n    }\n    calleeNode.argumentBitRatios[i] = bitRatio;\n    return bitRatio;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};\n},{}],10:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\nclass FunctionNode {\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerImplyArgumentBitRatio = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.onIstanbulCoverageVariable = null;\n    this.removeIstanbulCoverage = false;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        if (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, inForLoopInit, inForLoopTest } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (inForLoopInit && inForLoopTest) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      declaration.valueType = valueType;\n      declaration.dependencies = dependencies;\n      declaration.isSafe = this.isSafeDependencies(dependencies);\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i]);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast) {\n        return identifier.declaration;\n      }\n    }\n    return null;\n  }\n\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = this.astKey(ast);\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            if (this.getVariableSignature(ast.callee, true) === 'this.color') {\n              return null;\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'LogicalExpression':\n          return 'Boolean';\n        case 'BinaryExpression':\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              const type = this.getVariableType(ast);\n              if (!type) {\n                throw this.astErrorOutput(`Unable to find identifier valueType`, ast);\n              }\n              return type;\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'fn()[][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'g':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'b':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'a':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        case 'SequenceExpression':\n          return this.getType(ast.expressions[ast.expressions.length - 1]);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'asin',\n      'atan',\n      'atan2',\n      'ceil',\n      'cos',\n      'exp',\n      'floor',\n      'log',\n      'log2',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sqrt',\n      'tan',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'ConditionalExpression':\n        this.getDependencies(ast.test, dependencies, isNotSafe);\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        case 'SequenceExpression':\n          return this.getDependencies(ast.expressions, dependencies, isNotSafe);\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast, returnRawValue) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        }\n      } else if (ast.name) {\n        signature.unshift(returnRawValue ? ast.name : 'value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift(returnRawValue ? ast.callee.name + '()' : 'fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    if (returnRawValue) {\n      return signatureString;\n    }\n\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.value[]', \n      'value.value[][]', \n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[this.astKey(ast)] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  isIstanbulAST(ast) {\n    const variableSignature = this.getVariableSignature(ast);\n    return variableSignature === 'value.value[]' || variableSignature === 'value.value[][]';\n  }\n  astSequenceExpression(sNode, retArr) {\n    const { expressions } = sNode;\n    const sequenceResult = [];\n    for (let i = 0; i < expressions.length; i++) {\n      const expression = expressions[i];\n      if (this.removeIstanbulCoverage) {\n        if (expression.type === 'UpdateExpression' && this.isIstanbulAST(expression.argument)) {\n          continue;\n        }\n      }\n      const expressionResult = [];\n      this.astGeneric(expression, expressionResult);\n      sequenceResult.push(expressionResult.join(''));\n    }\n    if (sequenceResult.length > 1) {\n      retArr.push('(', sequenceResult.join(','), ')');\n    } else {\n      retArr.push(sequenceResult[0]);\n    }\n    return retArr;\n  }\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  astUpdateExpression(uNode, retArr) {\n    if (this.removeIstanbulCoverage) {\n      const signature = this.getVariableSignature(uNode.argument);\n      if (this.isIstanbulAST(uNode.argument)) {\n        return retArr;\n      }\n    }\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        case 'value.value[]': \n          if (this.removeIstanbulCoverage) {\n            return { signature: variableSignature };\n          }\n          if (this.onIstanbulCoverageVariable) {\n            this.onIstanbulCoverageVariable(ast.object.object.name);\n            return {\n              signature: variableSignature\n            };\n          }\n          case 'value.value[][]': \n            if (this.removeIstanbulCoverage) {\n              return { signature: variableSignature };\n            }\n            if (this.onIstanbulCoverageVariable) {\n              this.onIstanbulCoverageVariable(ast.object.object.object.name);\n              return {\n                signature: variableSignature\n              };\n            }\n            default:\n              throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  astKey(ast, separator = ',') {\n    if (!ast.start || !ast.end) throw new Error('AST start and end needed');\n    return `${ast.start}${separator}${ast.end}`;\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLCanvas': 'Array(4)',\n  'HTMLImage': 'Array(4)',\n  'HTMLVideo': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};\n},{\"../utils\":114,\"./function-tracer\":11,\"acorn\":1}],11:[function(require,module,exports){\nconst { utils } = require('../utils');\n\nfunction last(array) {\n  return array.length > 0 ? array[array.length - 1] : null;\n}\n\nconst states = {\n  trackIdentifiers: 'trackIdentifiers',\n  memberExpression: 'memberExpression',\n  inForLoopInit: 'inForLoopInit'\n};\n\nclass FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.functionContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.trackedIdentifiers = null;\n    this.states = [];\n    this.newFunctionContext();\n    this.scan(ast);\n  }\n\n  isState(state) {\n    return this.states[this.states.length - 1] === state;\n  }\n\n  hasState(state) {\n    return this.states.indexOf(state) > -1;\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.isState(state)) {\n      this.states.pop();\n    } else {\n      throw new Error(`Cannot pop the non-active state \"${state}\"`);\n    }\n  }\n\n  get currentFunctionContext() {\n    return last(this.functionContexts);\n  }\n\n  get currentContext() {\n    return last(this.runningContexts);\n  }\n\n  newFunctionContext() {\n    const newContext = { '@contextType': 'function' };\n    this.contexts.push(newContext);\n    this.functionContexts.push(newContext);\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({ '@contextType': 'const/let' }, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    const { currentFunctionContext } = this;\n    for (const p in currentFunctionContext) {\n      if (!currentFunctionContext.hasOwnProperty(p) || newContext.hasOwnProperty(p)) continue;\n      newContext[p] = currentFunctionContext[p];\n    }\n    this.runningContexts.pop();\n    return newContext;\n  }\n\n  useFunctionContext(run) {\n    const functionContext = last(this.functionContexts);\n    this.runningContexts.push(functionContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  getIdentifiers(run) {\n    const trackedIdentifiers = this.trackedIdentifiers = [];\n    this.pushState(states.trackIdentifiers);\n    run();\n    this.trackedIdentifiers = null;\n    this.popState(states.trackIdentifiers);\n    return trackedIdentifiers;\n  }\n\n  getDeclaration(name) {\n    const { currentContext, currentFunctionContext } = this;\n    return currentContext[name] || currentFunctionContext[name] || null;\n  }\n\n  scan(ast) {\n    if (!ast) return;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.useFunctionContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n        if (ast.operator === '++') {\n          const declaration = this.getDeclaration(ast.argument.name);\n          if (declaration) {\n            declaration.suggestedType = 'Integer';\n          }\n        }\n        this.scan(ast.argument);\n        break;\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        if (ast.kind === 'var') {\n          this.useFunctionContext(() => {\n            ast.declarations = utils.normalizeDeclarations(ast);\n            this.scan(ast.declarations);\n          });\n        } else {\n          ast.declarations = utils.normalizeDeclarations(ast);\n          this.scan(ast.declarations);\n        }\n        break;\n      case 'VariableDeclarator': {\n        const { currentContext } = this;\n        const inForLoopInit = this.hasState(states.inForLoopInit);\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          inForLoopInit,\n          inForLoopTest: null,\n          assignable: currentContext === this.currentFunctionContext || (!inForLoopInit && !currentContext.hasOwnProperty(ast.id.name)),\n          suggestedType: null,\n          valueType: null,\n          dependencies: null,\n          isSafe: null,\n        };\n        if (!currentContext[ast.id.name]) {\n          currentContext[ast.id.name] = declaration;\n        }\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      }\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement': {\n        let testIdentifiers;\n        const context = this.newContext(() => {\n          this.pushState(states.inForLoopInit);\n          this.scan(ast.init);\n          this.popState(states.inForLoopInit);\n\n          testIdentifiers = this.getIdentifiers(() => {\n            this.scan(ast.test);\n          });\n\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n\n        if (testIdentifiers) {\n          for (const p in context) {\n            if (p === '@contextType') continue;\n            if (testIdentifiers.indexOf(p) > -1) {\n              context[p].inForLoopTest = true;\n            }\n          }\n        }\n        break;\n      }\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier': {\n        if (this.isState(states.trackIdentifiers)) {\n          this.trackedIdentifiers.push(ast.name);\n        }\n        this.identifiers.push({\n          context: this.currentContext,\n          declaration: this.getDeclaration(ast.name),\n          ast,\n        });\n        break;\n      }\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.pushState(states.memberExpression);\n        this.scan(ast.object);\n        this.scan(ast.property);\n        this.popState(states.memberExpression);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'SequenceExpression':\n        this.scan(ast.expressions);\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n\n      case 'ThisExpression':\n      case 'Literal':\n      case 'DebuggerStatement':\n      case 'EmptyStatement':\n      case 'BreakStatement':\n      case 'ContinueStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};\n},{\"../utils\":114}],12:[function(require,module,exports){\nconst { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  if (!originKernel.built) {\n    originKernel.build.apply(originKernel, args);\n  }\n  args = args ? Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'boolean':\n        return new Boolean(arg);\n      case 'number':\n        return new Number(arg);\n      default:\n        return arg;\n    }\n  }) : null;\n  const uploadedValues = [];\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\n      if (argumentName) {\n        return argumentName;\n      }\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\n      if (constantName) {\n        return constantName;\n      }\n      return null;\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n    tactic,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    tactic,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, args);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('    /** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\n  });\n  result.push('    /** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    if (kernel.renderKernels) {\n      const results = kernel.renderKernels();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName) }\n      },`);\n      const { subKernels, mappedTextures } = kernel;\n      for (let i = 0; i < subKernels.length; i++) {\n        const texture = mappedTextures[i];\n        const subKernel = subKernels[i];\n        const subKernelResult = results[subKernel.property];\n        const subKernelTextureName = context.getContextVariableName(texture.texture);\n        result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName) }\n      },`);\n      }\n      result.push(`    };`);\n    } else {\n      const rendered = kernel.renderOutput();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n        texture: ${ textureName },\n        type: '${ rendered.type }',\n        toArray: ${ getToArrayString(rendered, textureName) }\n      };`);\n    }\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`  innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${  kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (property === 'context') {\n        return null;\n      }\n      if (property === '_framebuffer') {\n        return '_framebuffer';\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  let _framebuffer;\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\n\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\n  if (argument === null) return null;\n  if (kernelValues === null) return null;\n  switch (typeof argument) {\n    case 'boolean':\n    case 'number':\n      return null;\n  }\n  if (\n    typeof HTMLImageElement !== 'undefined' &&\n    argument instanceof HTMLImageElement\n  ) {\n    for (let i = 0; i < kernelValues.length; i++) {\n      const kernelValue = kernelValues[i];\n      if (kernelValue.type !== 'HTMLImageArray' && kernelValue) continue;\n      if (kernelValue.uploadValue !== argument) continue;\n      const variableIndex = values[i].indexOf(argument);\n      if (variableIndex === -1) continue;\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\n      context.insertVariable(variableName, argument);\n      return variableName;\n    }\n  }\n\n  for (let i = 0; i < kernelValues.length; i++) {\n    const kernelValue = kernelValues[i];\n    if (argument !== kernelValue.uploadValue) continue;\n    const variable = `uploadValue_${kernelValue.name}`;\n    context.insertVariable(variable, kernelValue);\n    return variable;\n  }\n  return null;\n}\n\nmodule.exports = {\n  glKernelString\n};\n},{\"../../utils\":114,\"gl-wiretap\":3}],13:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number',\n      tactic: 'speed',\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.switchingKernels = null;\n  }\n\n  checkTextureSize() {\n    const { features } = this.constructor;\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\n    }\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n          }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  getFloatTacticDeclaration() {\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    return `precision ${variablePrecision} float;\\n`;\n  }\n\n  getIntTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic, true)} int;\\n`;\n  }\n\n  getSampler2DTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\\n`;\n  }\n\n  getSampler2DArrayTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DArray;\\n`;\n  }\n\n  renderTexture() {\n    return this.texture.clone();\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].clone();\n    }\n    return result;\n  }\n\n  resetSwitchingKernels() {\n    const existingValue = this.switchingKernels;\n    this.switchingKernels = null;\n    return existingValue;\n  }\n\n  setOutput(output) {\n    const newOutput = this.toKernelOutput(output);\n    if (this.program) {\n      if (!this.dynamicOutput) {\n        throw new Error('Resizing a kernel with dynamicOutput: false is not possible');\n      }\n      const newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];\n      const newTexSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, newThreadDim);\n      const oldTexSize = this.texSize;\n      if (oldTexSize) {\n        const oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);\n        const newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);\n        if (oldPrecision !== newPrecision) {\n          if (this.debug) {\n            console.warn('Precision requirement changed, asking GPU instance to recompile');\n          }\n          this.switchKernels({\n            type: 'outputPrecisionMismatch',\n            precision: newPrecision,\n            needed: output\n          });\n          return;\n        }\n      }\n      this.output = newOutput;\n      this.threadDim = newThreadDim;\n      this.texSize = newTexSize;\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      if (this.texture) {\n        this.texture.delete();\n      }\n      this.texture = null;\n      if (this.mappedTextures) {\n        for (let i = 0; i < this.mappedTextures.length; i++) {\n          this.mappedTextures[i].delete();\n        }\n      }\n      this.mappedTextures = null;\n    } else {\n      this.output = newOutput;\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n  switchKernels(reason) {\n    if (this.switchingKernels) {\n      this.switchingKernels.push(reason);\n    } else {\n      this.switchingKernels = [reason];\n    }\n  }\n  getVariablePrecisionString(textureSize = this.texSize, tactic = this.tactic, isInt = false) {\n    if (!tactic) {\n      const low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];\n      const medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];\n      const high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];\n      const requiredSize = Math.log2(textureSize[0] * textureSize[1]);\n      if (requiredSize <= low.rangeMax) {\n        return 'lowp';\n      } else if (requiredSize <= medium.rangeMax) {\n        return 'mediump';\n      } else if (requiredSize <= high.rangeMax) {\n        return 'highp';\n      } else {\n        throw new Error(`The required size exceeds that of the ability of your system`);\n      }\n    }\n    switch (tactic) {\n      case 'speed':\n        return 'lowp';\n      case 'balanced':\n        return 'mediump';\n      case 'precision':\n        return 'highp';\n      default:\n        throw new Error(`Unknown tactic \"${tactic}\" use \"speed\", \"balanced\", \"precision\", or empty for auto`);\n    }\n  }\n\n  updateTextureArgumentRefs(kernelValue, arg) {\n    if (this.texture.texture === arg.texture) {\n      const { prevArg } = kernelValue;\n      if (prevArg) {\n        if (prevArg.texture._refs === 1) {\n          this.texture.delete();\n          this.texture = prevArg.clone();\n        }\n        prevArg.delete();\n      }\n      kernelValue.prevArg = arg.clone();\n    } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n      const { mappedTextures } = this;\n      for (let i = 0; i < mappedTextures.length; i++) {\n        const mappedTexture = mappedTextures[i];\n        if (mappedTexture.texture === arg.texture) {\n          const { prevArg } = kernelValue;\n          if (prevArg) {\n            if (prevArg.texture._refs === 1) {\n              mappedTexture.delete();\n              mappedTextures[i] = prevArg.clone();\n            }\n            prevArg.delete();\n          }\n          kernelValue.prevArg = arg.clone();\n          return;\n        }\n      }\n    }\n  }\n\n  initCanvas() {}\n}\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel\n};\n},{\"../../utils\":114,\"../kernel\":36,\"./texture/array-2-float\":16,\"./texture/array-2-float-2d\":14,\"./texture/array-2-float-3d\":15,\"./texture/array-3-float\":19,\"./texture/array-3-float-2d\":17,\"./texture/array-3-float-3d\":18,\"./texture/array-4-float\":22,\"./texture/array-4-float-2d\":20,\"./texture/array-4-float-3d\":21,\"./texture/float\":25,\"./texture/float-2d\":23,\"./texture/float-3d\":24,\"./texture/graphical\":26,\"./texture/memory-optimized\":30,\"./texture/memory-optimized-2d\":28,\"./texture/memory-optimized-3d\":29,\"./texture/unsigned\":33,\"./texture/unsigned-2d\":31,\"./texture/unsigned-3d\":32}],14:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],15:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],16:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};\n},{\"../../../utils\":114,\"./float\":25}],17:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],18:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],19:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};\n},{\"../../../utils\":114,\"./float\":25}],20:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],21:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],22:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};\n},{\"../../../utils\":114,\"./float\":25}],23:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};\n},{\"../../../utils\":114,\"./float\":25}],24:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};\n},{\"../../../utils\":114,\"./float\":25}],25:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureFloat extends GLTexture {\n  get textureType() {\n    return this.context.FLOAT;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const { context: gl, size } = this;\n    if (!this._framebuffer) {\n      this._framebuffer = gl.createFramebuffer();\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(size[0] * size[1] * 4);\n    gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};\n},{\"../../../utils\":114,\"./index\":27}],26:[function(require,module,exports){\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};\n},{\"./unsigned\":33}],27:[function(require,module,exports){\nconst { Texture } = require('../../../texture');\n\nclass GLTexture extends Texture {\n  get textureType() {\n    throw new Error(`\"textureType\" not implemented on ${ this.name }`);\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  beforeMutate() {\n    if (this.texture._refs > 1) {\n      this.cloneTexture();\n    }\n  }\n\n  cloneTexture() {\n    this.texture._refs--;\n    const { context: gl, size, texture, kernel } = this;\n    if (kernel.debug) {\n      console.warn('cloning internal texture');\n    }\n    const existingFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n    if (!this._framebuffer) {\n      this._framebuffer = gl.createFramebuffer();\n    }\n    this._framebuffer.width = size[0];\n    this._framebuffer.height = size[1];\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);\n    target._refs = 1;\n    this.texture = target;\n    if (existingFramebuffer) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, existingFramebuffer);\n    }\n  }\n\n  delete() {\n    super.delete();\n    if (this.texture._refs === 0 && this._framebuffer) {\n      this.context.deleteFramebuffer(this._framebuffer);\n      this._framebuffer = null;\n    }\n  }\n}\n\nfunction selectTexture(gl, texture) {\n  gl.activeTexture(gl.TEXTURE31); \n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n}\n\nmodule.exports = { GLTexture };\n},{\"../../../texture\":113}],28:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};\n},{\"../../../utils\":114,\"./float\":25}],29:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};\n},{\"../../../utils\":114,\"./float\":25}],30:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};\n},{\"../../../utils\":114,\"./float\":25}],31:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],32:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],33:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureUnsigned extends GLTexture {\n  get textureType() {\n    return this.context.UNSIGNED_BYTE;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};\n},{\"../../../utils\":114,\"./index\":27}],34:[function(require,module,exports){\nconst getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { \n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n        WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    return getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n    return this;\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};\n},{\"../gl/kernel-string\":12,\"../web-gl/kernel\":70,\"gl\":2}],35:[function(require,module,exports){\nclass KernelValue {\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n      tactic,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.tactic = tactic;\n    this.id = `${this.origin}_${name}`;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n    this.forceUploadEachRun = null;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};\n},{}],36:[function(require,module,exports){\nconst { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n    this.forceUploadKernelConstants = null;\n\n\n    this.source = source;\n\n    this.output = null;\n\n    this.debug = false;\n\n    this.graphical = false;\n\n    this.loopMaxIterations = 0;\n\n    this.constants = null;\n\n    this.constantTypes = null;\n\n    this.constantBitRatios = null;\n\n    this.dynamicArguments = false;\n\n    this.dynamicOutput = false;\n\n    this.canvas = null;\n\n    this.context = null;\n\n    this.checkContext = null;\n\n    this.gpu = null;\n\n    this.functions = null;\n\n    this.nativeFunctions = null;\n\n    this.injectedNative = null;\n\n    this.subKernels = null;\n\n    this.validate = true;\n\n    this.immutable = false;\n\n    this.pipeline = false;\n\n    this.precision = null;\n\n    this.tactic = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.onIstanbulCoverageVariable = null;\n    this.removeIstanbulCoverage = false;\n    this.built = false;\n    this.signature = null;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); \n            continue;\n          }\n          break;\n        case 'functions':\n          this.functions = [];\n          for (let i = 0; i < settings.functions.length; i++) {\n            this.addFunction(settings.functions[i]);\n          }\n          continue;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n        case 'removeIstanbulCoverage':\n          if (settings[p] !== null) {\n            this[p] = settings[p];\n          }\n          continue;\n        case 'nativeFunctions':\n          if (!settings.nativeFunctions) continue;\n          this.nativeFunctions = [];\n          for (let i = 0; i < settings.nativeFunctions.length; i++) {\n            const s = settings.nativeFunctions[i];\n            const { name, source } = s;\n            this.addNativeFunction(name, source, s);\n          }\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  addFunction(source, settings = {}) {\n    if (source.name && source.source && source.argumentTypes && 'returnType' in source) {\n      this.functions.push(source);\n    } else if ('settings' in source && 'source' in source) {\n      this.functions.push(this.functionToIGPUFunction(source.source, source.settings));\n    } else if (typeof source === 'string' || typeof source === 'function') {\n      this.functions.push(this.functionToIGPUFunction(source, settings));\n    } else {\n      throw new Error(`function not properly defined`);\n    }\n    return this;\n  }\n\n  addNativeFunction(name, source, settings = {}) {\n    const { argumentTypes, argumentNames } = settings.argumentTypes ?\n      splitArgumentTypes(settings.argumentTypes) :\n      this.constructor.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.constructor.nativeFunctionReturnType(source)\n    });\n    return this;\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  toKernelOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          return [output.x, output.y, output.z];\n        } else {\n          return [output.x, output.y];\n        }\n      } else {\n        return [output.x];\n      }\n    } else {\n      return output;\n    }\n  }\n\n  setOutput(output) {\n    this.output = this.toKernelOutput(output);\n    return this;\n  }\n\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  setFunctions(functions) {\n    for (let i = 0; i < functions.length; i++) {\n      this.addFunction(functions[i]);\n    }\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    for (let i = 0; i < nativeFunctions.length; i++) {\n      const settings = nativeFunctions[i];\n      const { name, source } = settings;\n      this.addNativeFunction(name, source, settings);\n    }\n    return this;\n  }\n\n  setInjectedNative(injectedNative) {\n    this.injectedNative = injectedNative;\n    return this;\n  }\n\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  setImmutable(flag) {\n    utils.warnDeprecated('method', 'setImmutable');\n    return this;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  setWarnVarUsage(flag) {\n    utils.warnDeprecated('method', 'setWarnVarUsage');\n    return this;\n  }\n\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        if (!argumentTypes.hasOwnProperty(p)) continue;\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  setTactic(tactic) {\n    this.tactic = tactic;\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  getPixels(flip) {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  prependString(value) {\n    throw new Error(`\"prependString\" called on ${ this.constructor.name }`);\n  }\n\n  hasPrependString(value) {\n    throw new Error(`\"hasPrependString\" called on ${ this.constructor.name }`);\n  }\n\n  toJSON() {\n    return {\n      settings: {\n        output: this.output,\n        pipeline: this.pipeline,\n        argumentNames: this.argumentNames,\n        argumentsTypes: this.argumentTypes,\n        constants: this.constants,\n        pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n        returnType: this.returnType,\n      }\n    };\n  }\n\n  buildSignature(args) {\n    const Constructor = this.constructor;\n    this.signature = Constructor.getSignature(this, Constructor.getArgumentTypes(this, args));\n  }\n\n  static getArgumentTypes(kernel, args) {\n    const argumentTypes = new Array(args.length);\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const type = kernel.argumentTypes[i];\n      if (arg.type) {\n        argumentTypes[i] = arg.type;\n      } else {\n        switch (type) {\n          case 'Number':\n          case 'Integer':\n          case 'Float':\n          case 'ArrayTexture(1)':\n            argumentTypes[i] = utils.getVariableType(arg);\n            break;\n          default:\n            argumentTypes[i] = type;\n        }\n      }\n    }\n    return argumentTypes;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    throw new Error(`\"getSignature\" not implemented on ${ this.name }`);\n    return argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '';\n  }\n\n  functionToIGPUFunction(source, settings = {}) {\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      name: utils.getFunctionNameFromString(sourceString) || null,\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  }\n}\n\nfunction splitArgumentTypes(argumentTypesObject) {\n  const argumentNames = Object.keys(argumentTypesObject);\n  const argumentTypes = [];\n  for (let i = 0; i < argumentNames.length; i++) {\n    const argumentName = argumentNames[i];\n    argumentTypes.push(argumentTypesObject[argumentName]);\n  }\n  return { argumentTypes, argumentNames };\n}\n\nmodule.exports = {\n  Kernel\n};\n},{\"../input\":110,\"../utils\":114}],37:[function(require,module,exports){\nconst fragmentShader = `__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nvec4 round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float num1, float num2) {\n  if (num2 == 0.0) {\n    return 0.0;\n  }\n  bool isPositive = num1 >= 0.0;\n  num1 = abs(num1);\n  num2 = abs(num2);\n  for (int i = 0; i < LOOP_MAX; i++) {\n    if (num1 < num2) break;\n    num1 = num1 - num2;\n  }\n  return isPositive ? num1 : -num1;\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],38:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    const consequentType = this.getType(ast.consequent);\n    const alternateType = this.getType(ast.alternate);\n    if (consequentType === null && alternateType === null) {\n      retArr.push('if (');\n      this.astGeneric(ast.test, retArr);\n      retArr.push(') {');\n      this.astGeneric(ast.consequent, retArr);\n      retArr.push(';');\n      retArr.push('} else {');\n      this.astGeneric(ast.alternate, retArr);\n      retArr.push(';');\n      retArr.push('}');\n      return retArr;\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n\n        if (type === 'sampler2D' || type === 'sampler2DArray') {\n          retArr.push(`${type} user_${argumentName},ivec2 user_${argumentName}Size,ivec3 user_${argumentName}Dim`);\n        } else {\n          retArr.push(`${type} user_${argumentName}`);\n        }\n      }\n    }\n\n    retArr.push(') {\\n');\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = this.astKey(ast);\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('div_with_int_check(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': 'modulo',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    if (idtNode.name === 'Infinity') {\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\n        retArr.push(`bool(user_${idtNode.name})`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    } else {\n      retArr.push(`user_${idtNode.name}`);\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      const { declarations } = forNode.init;\n      if (declarations.length > 1) {\n        isSafe = false;\n      }\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      const initString = initArr.join('');\n      const initNeedsSemiColon = initString[initString.length - 1] !== ';';\n      retArr.push(`for (${initString}${initNeedsSemiColon ? ';' : ''}${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), '\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  astAssignmentExpression(assNode, retArr) {\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const declarationSets = [];\n    let declarationSet = [];\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const actualType = this.getType(declaration.init);\n      let type = actualType;\n      if (type === 'LiteralInteger') {\n        if (info.suggestedType === 'Integer') {\n          type = 'Integer';\n        } else {\n          type = 'Number';\n        }\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer') {\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        }\n        lastType = type;\n        declarationResult.push(`user_${declaration.id.name}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          declarationSets.push(declarationSet.join(','));\n          declarationSet = [];\n          declarationResult.push(`${markupType} `);\n        }\n        lastType = type;\n        declarationResult.push(`user_${declaration.id.name}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else if (actualType === 'LiteralInteger' && type === 'Integer') {\n          this.castLiteralToInteger(init, declarationResult);\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      declarationSet.push(declarationResult.join(''));\n    }\n\n    if (declarationSet.length > 0) {\n      declarationSets.push(declarationSet.join(','));\n    }\n\n    result.push(declarationSets.join(';'));\n\n    retArr.push(result.join(''));\n    retArr.push(';');\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${this.astKey(ast, '_')}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ name }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case 'value.value[]':\n        case 'value.value[][]':\n          if (this.removeIstanbulCoverage) {\n            return retArr;\n          }\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    if (functionName === 'atan2') {\n      functionName = 'atan';\n    }\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Boolean':\n            this.astGeneric(argument, retArr);\n            continue;\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              if (argument.type === 'Identifier') {\n                retArr.push(`user_${argument.name}`);\n              } else if (argument.type === 'ArrayExpression') {\n                this.astGeneric(argument, retArr);\n              } else {\n                throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              }\n              continue;\n            }\n            break;\n          case 'HTMLCanvas':\n          case 'HTMLImage':\n          case 'HTMLImageArray':\n          case 'HTMLVideo':\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\n              retArr.push(`user_${argument.name},user_${argument.name}Size,user_${argument.name}Dim`);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const arrLen = arrNode.elements.length;\n\n    retArr.push('vec' + arrLen + '(');\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n  'HTMLVideo': 'sampler2D',\n  'HTMLCanvas': 'sampler2D',\n  'HTMLImage': 'sampler2D',\n  'HTMLImageArray': 'sampler2DArray',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};\n},{\"../function-node\":10}],39:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGLKernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGLKernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGLKernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType,\n  kernelValueMaps,\n};\n},{\"./kernel-value/boolean\":41,\"./kernel-value/dynamic-html-image\":42,\"./kernel-value/dynamic-html-video\":43,\"./kernel-value/dynamic-memory-optimized-number-texture\":44,\"./kernel-value/dynamic-number-texture\":45,\"./kernel-value/dynamic-single-array\":46,\"./kernel-value/dynamic-single-array1d-i\":47,\"./kernel-value/dynamic-single-array2d-i\":48,\"./kernel-value/dynamic-single-array3d-i\":49,\"./kernel-value/dynamic-single-input\":50,\"./kernel-value/dynamic-unsigned-array\":51,\"./kernel-value/dynamic-unsigned-input\":52,\"./kernel-value/float\":53,\"./kernel-value/html-image\":54,\"./kernel-value/html-video\":55,\"./kernel-value/integer\":57,\"./kernel-value/memory-optimized-number-texture\":58,\"./kernel-value/number-texture\":59,\"./kernel-value/single-array\":60,\"./kernel-value/single-array1d-i\":61,\"./kernel-value/single-array2\":62,\"./kernel-value/single-array2d-i\":63,\"./kernel-value/single-array3\":64,\"./kernel-value/single-array3d-i\":65,\"./kernel-value/single-array4\":66,\"./kernel-value/single-input\":67,\"./kernel-value/unsigned-array\":68,\"./kernel-value/unsigned-input\":69}],40:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\nconst { Input } = require('../../../input');\n\nclass WebGLKernelArray extends WebGLKernelValue {\n  checkSize(width, height) {\n    if (!this.kernel.validate) return;\n    const { maxTextureSize } = this.kernel.constructor.features;\n    if (width > maxTextureSize || height > maxTextureSize) {\n      if (width > height) {\n        throw new Error(`Argument texture width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else if (width < height) {\n        throw new Error(`Argument texture height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else {\n        throw new Error(`Argument texture height and width of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      }\n    }\n  }\n\n  setup() {\n    this.requestTexture();\n    this.setupTexture();\n    this.defineTexture();\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n  }\n\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  destroy() {\n    if (this.prevArg) {\n      this.prevArg.delete();\n    }\n    this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelArray\n};\n},{\"../../../input\":110,\"./index\":56}],41:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};\n},{\"../../../utils\":114,\"./index\":56}],42:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"./html-image\":54}],43:[function(require,module,exports){\nconst { WebGLKernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLVideo\n};\n},{\"./dynamic-html-image\":42}],44:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"./memory-optimized-number-texture\":58}],45:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.checkSize(value.size[0], value.size[1]);\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"./number-texture\":59}],46:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"./single-array\":60}],47:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"./single-array1d-i\":61}],48:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"./single-array2d-i\":63}],49:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"./single-array3d-i\":65}],50:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"./single-input\":67}],51:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"./unsigned-array\":68}],52:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"./unsigned-input\":69}],53:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};\n},{\"../../../utils\":114,\"./index\":56}],54:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputImage.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"./array\":40}],55:[function(require,module,exports){\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueHTMLVideo\n};\n},{\"./html-image\":54}],56:[function(require,module,exports){\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n    this.prevArg = null;\n  }\n\n  setup() {}\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n\n  getVariablePrecisionString() {\n    return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);\n  }\n\n  destroy() {}\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};\n},{\"../../kernel-value\":35}],57:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};\n},{\"../../../utils\":114,\"./index\":56}],58:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type }) must be from same context`);\n    }\n\n    const { context: gl, kernel } = this;\n    if (kernel.pipeline) {\n      kernel.updateTextureArgumentRefs(this, inputTexture);\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"./array\":40}],59:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      kernel.updateTextureArgumentRefs(this, inputTexture);\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"./array\":40}],60:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};\n},{\"../../../utils\":114,\"./array\":40}],61:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"./array\":40}],62:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2\n};\n},{\"../../../utils\":114,\"./index\":56}],63:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"./array\":40}],64:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3\n};\n},{\"../../../utils\":114,\"./index\":56}],65:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"./array\":40}],66:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray4\n};\n},{\"../../../utils\":114,\"./index\":56}],67:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(input.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};\n},{\"../../../utils\":114,\"./array\":40}],68:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"./array\":40}],69:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"./array\":40}],70:[function(require,module,exports){\nconst { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst mrud = require('../../plugins/math-random-uniformly-distributed');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [mrud];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n\n    this.maxTexSize = null;\n    this.onRequestSwitchKernel = null;\n    this.removeIstanbulCoverage = true;\n\n    this.mergeSettings(source.settings || settings);\n\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n    this.texture = null;\n    this.mappedTextures = null;\n    this.textureCache = [];\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      if (settings.pluginNames) { \n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n\n    const onRequestTexture = () => {\n      return this.createTexture();\n    };\n    const onRequestIndex = () => {\n      return textureIndexes++;\n    };\n    const onUpdateValueMismatch = (constructor) => {\n      this.switchKernels({\n        type: 'argumentMismatch',\n        needed: constructor\n      });\n    };\n    const onRequestContextHandle = () => {\n      return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n    };\n\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture,\n        onRequestIndex,\n        onUpdateValueMismatch,\n        onRequestContextHandle,\n      });\n      this.kernelArguments.push(kernelArgument);\n      kernelArgument.setup();\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  createTexture() {\n    const texture = this.context.createTexture();\n    this.textureCache.push(texture);\n    return texture;\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    this.forceUploadKernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n      kernelValue.setup();\n      if (kernelValue.forceUploadEachRun) {\n        this.forceUploadKernelConstants.push(kernelValue);\n      }\n    }\n  }\n\n  build() {\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    this._setupOutputTexture();\n    if (\n      this.subKernels !== null &&\n      this.subKernels.length > 0\n    ) {\n      this._setupSubOutputTextures();\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  setupReturnTypes(functionBuilder) {\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize, forceUploadKernelConstants, context: gl } = this;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\n      const constant = forceUploadKernelConstants[i];\n      constant.updateValue(this.constants[constant.name]);\n      if (this.switchingKernels) return;\n    }\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        this._setupOutputTexture();\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return this.texture.clone();\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    this._setupOutputTexture();\n\n    if (this.subKernels !== null) {\n      this._setupSubOutputTextures();\n      this.drawBuffers();\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n  }\n\n  getInternalFormat() {\n    return this.context.RGBA;\n  }\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n\n  _setupOutputTexture() {\n    const { context: gl, texSize } = this;\n    if (this.texture) {\n      this.texture.beforeMutate();\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = this.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const { context: gl } = this;\n    if (this.mappedTextures && this.mappedTextures.length > 0) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.beforeMutate();\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      INJECTED_NATIVE: this._getInjectedNative(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString(),\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getVertShaderArtifactMap(args) {\n    return {\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float div_with_int_check(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x)/int(y));\n  }\n  return x / y;\n}` :\n      '';\n  }\n\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getInjectedNative() {\n    return this.injectedNative || '';\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        if (!this.constants.hasOwnProperty(name)) continue;\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  getKernelResultDeclaration() {\n    switch (this.returnType) {\n      case 'Array(2)':\n        return 'vec2 kernelResult';\n      case 'Array(3)':\n        return 'vec3 kernelResult';\n      case 'Array(4)':\n        return 'vec4 kernelResult';\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        return 'float kernelResult';\n      default:\n        if (this.graphical) {\n          return 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n  }\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const { subKernels } = this;\n    if (subKernels !== null) {\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`,\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`,\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`,\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`,\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`,\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`,\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n  }\n\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n    if (this.texture) {\n      this.texture.delete();\n      const textureCacheIndex = this.textureCache.indexOf(this.texture.texture);\n      if (textureCacheIndex > -1) {\n        this.textureCache.splice(textureCacheIndex, 1);\n      }\n      this.texture = null;\n    }\n    if (this.mappedTextures && this.mappedTextures.length) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.delete();\n        const textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);\n        if (textureCacheIndex > -1) {\n          this.textureCache.splice(textureCacheIndex, 1);\n        }\n      }\n      this.mappedTextures = null;\n    }\n    if (this.kernelArguments) {\n      for (let i = 0; i < this.kernelArguments.length; i++) {\n        this.kernelArguments[i].destroy();\n      }\n    }\n    if (this.kernelConstants) {\n      for (let i = 0; i < this.kernelConstants.length; i++) {\n        this.kernelConstants[i].destroy();\n      }\n    }\n    while (this.textureCache.length > 0) {\n      const texture = this.textureCache.pop();\n      this.context.deleteTexture(texture);\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};\n},{\"../../plugins/math-random-uniformly-distributed\":112,\"../../utils\":114,\"../function-builder\":9,\"../gl/kernel\":13,\"../gl/kernel-string\":12,\"./fragment-shader\":37,\"./function-node\":38,\"./kernel-value-maps\":39,\"./vertex-shader\":71}],71:[function(require,module,exports){\nconst vertexShader = `__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],72:[function(require,module,exports){\nconst fragmentShader = `#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float num1, float num2) {\n  if (num2 == 0.0) {\n    return 0.0;\n  }\n  bool isPositive = num1 >= 0.0;\n  num1 = abs(num1);\n  num2 = abs(num2);\n  for (int i = 0; i < LOOP_MAX; i++) {\n    if (num1 < num2) break;\n    num1 = num1 - num2;\n  }\n  return isPositive ? num1 : -num1;\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],73:[function(require,module,exports){\nconst { WebGLFunctionNode } = require('../web-gl/function-node');\n\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\n        retArr.push(`bool(user_${idtNode.name})`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    } else {\n      retArr.push(`user_${idtNode.name}`);\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};\n},{\"../web-gl/function-node\":38}],74:[function(require,module,exports){\nconst { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHTMLImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHTMLImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGL2KernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGL2KernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGL2KernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  kernelValueMaps,\n  lookupKernelValueType\n};\n},{\"./kernel-value/boolean\":75,\"./kernel-value/dynamic-html-image\":77,\"./kernel-value/dynamic-html-image-array\":76,\"./kernel-value/dynamic-html-video\":78,\"./kernel-value/dynamic-memory-optimized-number-texture\":79,\"./kernel-value/dynamic-number-texture\":80,\"./kernel-value/dynamic-single-array\":81,\"./kernel-value/dynamic-single-array1d-i\":82,\"./kernel-value/dynamic-single-array2d-i\":83,\"./kernel-value/dynamic-single-array3d-i\":84,\"./kernel-value/dynamic-single-input\":85,\"./kernel-value/dynamic-unsigned-array\":86,\"./kernel-value/dynamic-unsigned-input\":87,\"./kernel-value/float\":88,\"./kernel-value/html-image\":90,\"./kernel-value/html-image-array\":89,\"./kernel-value/html-video\":91,\"./kernel-value/integer\":92,\"./kernel-value/memory-optimized-number-texture\":93,\"./kernel-value/number-texture\":94,\"./kernel-value/single-array\":95,\"./kernel-value/single-array1d-i\":96,\"./kernel-value/single-array2\":97,\"./kernel-value/single-array2d-i\":98,\"./kernel-value/single-array3\":99,\"./kernel-value/single-array3d-i\":100,\"./kernel-value/single-array4\":101,\"./kernel-value/single-input\":102,\"./kernel-value/unsigned-array\":103,\"./kernel-value/unsigned-input\":104}],75:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};\n},{\"../../web-gl/kernel-value/boolean\":41}],76:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { width, height } = images[0];\n    this.checkSize(width, height);\n    this.dimensions = [width, height, images.length];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImageArray\n};\n},{\"../../../utils\":114,\"./html-image-array\":89}],77:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-html-image\":42}],78:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLVideo\n};\n},{\"../../../utils\":114,\"./dynamic-html-image\":77}],79:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\":44}],80:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-number-texture\":45}],81:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array\":95}],82:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array1d-i\":96}],83:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array2d-i\":98}],84:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array3d-i\":100}],85:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-input\":102}],86:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-array\":51}],87:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-input\":52}],88:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/float\":53}],89:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('../../web-gl/kernel-value/array');\n\nclass WebGL2KernelValueHTMLImageArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.checkSize(value[0].width, value[0].height);\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImageArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/array\":40}],90:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/html-image\":54}],91:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImage } = require('./html-image');\n\nclass WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLVideo\n};\n},{\"../../../utils\":114,\"./html-image\":90}],92:[function(require,module,exports){\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    const variablePrecision = this.getVariablePrecisionString();\n    if (this.origin === 'constants') {\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};\n},{\"../../web-gl/kernel-value/integer\":57}],93:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/memory-optimized-number-texture\":58}],94:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/number-texture\":59}],95:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array\":60}],96:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array1d-i\":61}],97:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray2 } = require('../../web-gl/kernel-value/single-array2');\n\nclass WebGL2KernelValueSingleArray2 extends WebGLKernelValueSingleArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2\n};\n},{\"../../web-gl/kernel-value/single-array2\":62}],98:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array2d-i\":63}],99:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray3 } = require('../../web-gl/kernel-value/single-array3');\n\nclass WebGL2KernelValueSingleArray3 extends WebGLKernelValueSingleArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3\n};\n},{\"../../web-gl/kernel-value/single-array3\":64}],100:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array3d-i\":65}],101:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray4 } = require('../../web-gl/kernel-value/single-array4');\n\nclass WebGL2KernelValueSingleArray4 extends WebGLKernelValueSingleArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray4\n};\n},{\"../../web-gl/kernel-value/single-array4\":66}],102:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-input\":67}],103:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-array\":68}],104:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-input\":69}],105:[function(require,module,exports){\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\nlet features = null;\n\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      kernelMap: true,\n      isTextureFloat: true,\n      isDrawBuffers: true,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    return super.getIsIntegerDivisionAccurate();\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl2', settings);\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.R32F:\n        return gl.RED;\n      case gl.RG32F:\n        return gl.RG;\n      case gl.RGBA32F:\n        return gl.RGBA;\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n  getInternalFormat() {\n    const { context: gl, optimizeFloatMemory, pipeline, precision } = this;\n\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              return gl.RGBA32F;\n            } else {\n              return gl.R32F;\n            }\n            case 'Array(2)':\n              return gl.RG32F;\n            case 'Array(3)': \n            case 'Array(4)':\n              return gl.RGBA32F;\n            default:\n              throw new Error('Unhandled return type');\n        }\n      }\n      return gl.RGBA32F;\n    }\n    return gl.RGBA;\n  }\n\n  _setupOutputTexture() {\n    const { context: gl } = this;\n    if (this.texture) {\n      this.texture.beforeMutate();\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = gl.createTexture();\n    const { texSize } = this;\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const { context: gl } = this;\n    if (this.mappedTextures && this.mappedTextures.length > 0) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.beforeMutate();\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n      }\n      return;\n    }\n    const { texSize } = this;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      const format = this.getInternalFormat();\n      if (this.precision === 'single') {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  _getHeaderString() {\n    return '';\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    if (subKernels === null || subKernels.length < 1) {\n      return `in ${ variablePrecision } vec2 vTexCoord;\\n`;\n    } else {\n      return `out ${ variablePrecision } vec2 vTexCoord;\\n`;\n    }\n  }\n\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  getKernelString() {\n    const result = [];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        this.getKernelResultDeclaration(),\n        'layout(location = 0) out vec4 data0'\n      );\n      for (let i = 0; i < subKernels.length; i++) {\n        const subKernel = subKernels[i];\n        result.push(\n          subKernel.returnType === 'Integer' ?\n          `int subKernelResult_${ subKernel.name } = 0` :\n          `float subKernelResult_${ subKernel.name } = 0.0`,\n          `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n        );\n      }\n    } else {\n      result.push(\n        'out vec4 data0',\n        this.getKernelResultDeclaration()\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`,\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`,\n      );\n    }\n    return result;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../web-gl/kernel\":70,\"./fragment-shader\":72,\"./function-node\":73,\"./kernel-value-maps\":74,\"./vertex-shader\":106}],106:[function(require,module,exports){\nconst vertexShader = `#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],107:[function(require,module,exports){\nconst lib = require('./index');\nconst GPU = lib.GPU;\nfor (const p in lib) {\n  if (!lib.hasOwnProperty(p)) continue;\n  if (p === 'GPU') continue; \n  GPU[p] = lib[p];\n}\n\nif (typeof window !== 'undefined') {\n  bindTo(window);\n}\nif (typeof self !== 'undefined') {\n  bindTo(self);\n}\n\nfunction bindTo(target) {\n  if (target.GPU) return;\n  Object.defineProperty(target, 'GPU', {\n    get() {\n      return GPU;\n    }\n  });\n}\n\nmodule.exports = lib;\n},{\"./index\":109}],108:[function(require,module,exports){\nconst { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { Kernel } = require('./backend/kernel');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    this.injectedNative = null;\n    this.onIstanbulCoverageVariable = settings.onIstanbulCoverageVariable || null;\n    this.removeIstanbulCoverage = settings.hasOwnProperty('removeIstanbulCoverage') ? settings.removeIstanbulCoverage : null;\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;\n        const s = settings.nativeFunctions[p];\n        const { name, source } = s;\n        this.addNativeFunction(name, source, s);\n      }\n    }\n  }\n\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      this.kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      console.warn('Falling back to CPU');\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        injectedNative: kernelRun.injectedNative,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(reasons, args, kernel) {\n      if (kernel.debug) {\n        console.warn('Switching kernels');\n      }\n      let newOutput = null;\n      if (kernel.signature && !switchableKernels[kernel.signature]) {\n        switchableKernels[kernel.signature] = kernel;\n      }\n      if (kernel.dynamicOutput) {\n        for (let i = reasons.length - 1; i >= 0; i--) {\n          const reason = reasons[i];\n          if (reason.type === 'outputPrecisionMismatch') {\n            newOutput = reason.needed;\n          }\n        }\n      }\n\n      const Constructor = kernel.constructor;\n      const argumentTypes = Constructor.getArgumentTypes(kernel, args);\n      const signature = Constructor.getSignature(kernel, argumentTypes);\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        return existingKernel;\n      }\n\n      const newKernel = switchableKernels[signature] = new Constructor(source, {\n        argumentTypes,\n        constantTypes: kernel.constantTypes,\n        graphical: kernel.graphical,\n        loopMaxIterations: kernel.loopMaxIterations,\n        constants: kernel.constants,\n        dynamicOutput: kernel.dynamicOutput,\n        dynamicArgument: kernel.dynamicArguments,\n        context: kernel.context,\n        canvas: kernel.canvas,\n        output: newOutput || kernel.output,\n        precision: kernel.precision,\n        pipeline: kernel.pipeline,\n        immutable: kernel.immutable,\n        optimizeFloatMemory: kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernel.fixIntegerDivisionAccuracy,\n        functions: kernel.functions,\n        nativeFunctions: kernel.nativeFunctions,\n        injectedNative: kernel.injectedNative,\n        subKernels: kernel.subKernels,\n        strictIntegers: kernel.strictIntegers,\n        debug: kernel.debug,\n        gpu: kernel.gpu,\n        validate,\n        returnType: kernel.returnType,\n        onIstanbulCoverageVariable: kernel.onIstanbulCoverageVariable,\n        removeIstanbulCoverage: kernel.removeIstanbulCoverage,\n        tactic: kernel.tactic,\n        onRequestFallback,\n        onRequestSwitchKernel,\n      });\n      newKernel.build.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      return newKernel;\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      injectedNative: this.injectedNative,\n      onIstanbulCoverageVariable: this.onIstanbulCoverageVariable,\n      removeIstanbulCoverage: this.removeIstanbulCoverage,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernelRun = kernelRunShortcut(new this.Kernel(source, mergedSettings));\n\n    if (!this.canvas) {\n      this.canvas = kernelRun.canvas;\n    }\n\n    if (!this.context) {\n      this.context = kernelRun.context;\n    }\n\n    this.kernels.push(kernelRun);\n\n    return kernelRun;\n  }\n\n  createKernelMap() {\n    let fn;\n    let settings;\n    const argument2Type = typeof arguments[arguments.length - 2];\n    if (argument2Type === 'function' || argument2Type === 'string') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    return this.createKernel(fn, settingsCopy);\n  }\n\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  setFunctions(functions) {\n    this.functions = functions;\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    this.nativeFunctions = nativeFunctions;\n    return this;\n  }\n\n  addFunction(source, settings) {\n    this.functions.push({ source, settings });\n    return this;\n  }\n\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    this.nativeFunctions.push(Object.assign({ name, source }, settings));\n    return this;\n  }\n\n  injectNative(source) {\n    this.injectedNative = source;\n    return this;\n  }\n\n  destroy() {\n    return new Promise((resolve, reject) => {\n      if (!this.kernels) {\n        resolve();\n      }\n      setTimeout(() => {\n        try {\n          for (let i = 0; i < this.kernels.length; i++) {\n            this.kernels[i].destroy(true); \n          }\n          let firstKernel = this.kernels[0];\n          if (firstKernel) {\n            if (firstKernel.kernel) {\n              firstKernel = firstKernel.kernel;\n            }\n            if (firstKernel.constructor.destroyContext) {\n              firstKernel.constructor.destroyContext(this.context);\n            }\n          }\n        } catch (e) {\n          reject(e);\n        }\n        resolve();\n      }, 0);\n    });\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};\n},{\"./backend/cpu/kernel\":8,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/kernel\":70,\"./backend/web-gl2/kernel\":105,\"./kernel-run-shortcut\":111,\"./utils\":114,\"gpu-mock.js\":4}],109:[function(require,module,exports){\nconst { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelValueMaps: webGLKernelValueMaps } = require('./backend/web-gl/kernel-value-maps');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { kernelValueMaps: webGL2KernelValueMaps } = require('./backend/web-gl2/kernel-value-maps');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nconst { FunctionTracer } = require('./backend/function-tracer');\n\nconst mathRandom = require('./plugins/math-random-uniformly-distributed');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  webGL2KernelValueMaps,\n\n  WebGLFunctionNode,\n  WebGLKernel,\n  webGLKernelValueMaps,\n\n  GLKernel,\n  Kernel,\n  FunctionTracer,\n\n  plugins: {\n    mathRandom\n  }\n};\n},{\"./alias\":5,\"./backend/cpu/function-node\":6,\"./backend/cpu/kernel\":8,\"./backend/function-builder\":9,\"./backend/function-node\":10,\"./backend/function-tracer\":11,\"./backend/gl/kernel\":13,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/function-node\":38,\"./backend/web-gl/kernel\":70,\"./backend/web-gl/kernel-value-maps\":39,\"./backend/web-gl2/function-node\":73,\"./backend/web-gl2/kernel\":105,\"./backend/web-gl2/kernel-value-maps\":74,\"./gpu\":108,\"./input\":110,\"./plugins/math-random-uniformly-distributed\":112,\"./texture\":113,\"./utils\":114}],110:[function(require,module,exports){\nclass Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n},{\"./utils\":114}],111:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    run = function() {\n      let result = kernel.run.apply(kernel, arguments);\n      if (kernel.switchingKernels) {\n        const reasons = kernel.resetSwitchingKernels();\n        const newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);\n        shortcut.kernel = kernel = newKernel;\n        result = newKernel.run.apply(newKernel, arguments);\n      }\n      if (kernel.renderKernels) {\n        return kernel.renderKernels();\n      } else if (kernel.renderOutput) {\n        return kernel.renderOutput();\n      } else {\n        return result;\n      }\n    };\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  if (shortcut.kernel) {\n    shortcut.kernel = kernel;\n    return;\n  }\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          shortcut.kernel[property].apply(shortcut.kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        shortcut[property] = function() {\n          return shortcut.kernel[property].apply(shortcut.kernel, arguments);\n        };\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => shortcut.kernel[property]);\n      shortcut.__defineSetter__(property, (value) => {\n        shortcut.kernel[property] = value;\n      });\n    }\n  }\n  shortcut.kernel = kernel;\n}\nmodule.exports = {\n  kernelRunShortcut\n};\n},{\"./utils\":114}],112:[function(require,module,exports){\nconst source = `// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}`;\n\nconst name = 'math-random-uniformly-distributed';\n\nconst functionMatch = `Math.random()`;\n\nconst functionReplace = `nrand(vTexCoord)`;\n\nconst functionReturnType = 'Number';\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('randomSeed1', Math.random());\n  kernel.setUniform1f('randomSeed2', Math.random());\n};\n\nconst plugin = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};\n\nmodule.exports = plugin;\n},{}],113:[function(require,module,exports){\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n      kernel,\n      internalFormat,\n      textureFormat\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    if (!texture) throw new Error('settings property \"texture\" required.');\n    if (!kernel) throw new Error('settings property \"kernel\" required.');\n    this.texture = texture;\n    if (texture._refs) {\n      texture._refs++;\n    } else {\n      texture._refs = 1;\n    }\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = kernel;\n    this.type = type;\n    this._deleted = false;\n    this.internalFormat = internalFormat;\n    this.textureFormat = textureFormat;\n  }\n\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clone() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  delete() {\n    if (this._deleted) return;\n    this._deleted = true;\n    if (this.texture._refs) {\n      this.texture._refs--;\n      if (this.texture._refs) return;\n    }\n    return this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  Texture\n};\n},{}],114:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nconst utils = {\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  getFunctionNameFromString(funcStr) {\n    const result = FUNCTION_NAME.exec(funcStr);\n    if (!result || result.length === 0) return null;\n    return result[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); \n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value.length > 0 && value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n    switch (value.nodeName) {\n      case 'IMG':\n        return 'HTMLImage';\n      case 'CANVAS':\n        return 'HTMLImage';\n      case 'VIDEO':\n        return 'HTMLVideo';\n    }\n    if (value.hasOwnProperty('type')) {\n      return value.type;\n    }\n    return 'Unknown';\n  },\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  flipPixels: (pixels, width, height) => {\n    const halfHeight = height / 2 | 0; \n    const bytesPerRow = width * 4;\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n    let indent = 0;\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          indent += 2;\n          for (let i = 0; i < ast.body.length; i++) {\n            const flat = flatten(ast.body[i]);\n            if (flat) {\n              result.push(' '.repeat(indent) + flat, ';\\n');\n            }\n          }\n          indent -= 2;\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          const declarations = utils.normalizeDeclarations(ast)\n            .map(flatten)\n            .filter(r => r !== null);\n          if (declarations.length < 1) {\n            return '';\n          } else {\n            return `${ast.kind} ${declarations.join(',')}`;\n          }\n          case 'VariableDeclarator':\n            if (ast.init.object && ast.init.object.type === 'ThisExpression') {\n              const lookup = thisLookup(ast.init.property.name);\n              if (lookup) {\n                return `${ast.id.name} = ${flatten(ast.init)}`;\n              } else {\n                return null;\n              }\n            } else {\n              return `${ast.id.name} = ${flatten(ast.init)}`;\n            }\n            case 'CallExpression': {\n              if (ast.callee.property.name === 'subarray') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.type === 'ThisExpression') {\n                functionDependencies.push(findDependency('this', ast.callee.property.name));\n                return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else if (ast.callee.object.name) {\n                const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n                if (foundSource === null) {\n                  return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                } else {\n                  functionDependencies.push(foundSource);\n                  return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                }\n              } else if (ast.callee.object.type === 'MemberExpression') {\n                return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else {\n                throw new Error('unknown ast.callee');\n              }\n            }\n            case 'ReturnStatement':\n              return `return ${flatten(ast.argument)}`;\n            case 'BinaryExpression':\n              return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n            case 'UnaryExpression':\n              if (ast.prefix) {\n                return `${ast.operator} ${flatten(ast.argument)}`;\n              } else {\n                return `${flatten(ast.argument)} ${ast.operator}`;\n              }\n              case 'ExpressionStatement':\n                return `${flatten(ast.expression)}`;\n              case 'SequenceExpression':\n                return `(${flatten(ast.expressions)})`;\n              case 'ArrowFunctionExpression':\n                return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n              case 'Literal':\n                return ast.raw;\n              case 'Identifier':\n                return ast.name;\n              case 'MemberExpression':\n                if (ast.object.type === 'ThisExpression') {\n                  return thisLookup(ast.property.name);\n                }\n                if (ast.computed) {\n                  return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n                }\n                return flatten(ast.object) + '.' + flatten(ast.property);\n              case 'ThisExpression':\n                return 'this';\n              case 'NewExpression':\n                return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              case 'ForStatement':\n                return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n              case 'AssignmentExpression':\n                return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n              case 'UpdateExpression':\n                return `${flatten(ast.argument)}${ast.operator}`;\n              case 'IfStatement':\n                return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n              case 'ThrowStatement':\n                return `throw ${flatten(ast.argument)}`;\n              case 'ObjectPattern':\n                return ast.properties.map(flatten).join(', ');\n              case 'ArrayPattern':\n                return ast.elements.map(flatten).join(', ');\n              case 'DebuggerStatement':\n                return 'debugger;';\n              case 'ConditionalExpression':\n                return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n              case 'Property':\n                if (ast.kind === 'init') {\n                  return flatten(ast.key);\n                }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\\n');\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  normalizeDeclarations: (ast) => {\n    if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type \"VariableDeclaration\"');\n    const normalizedDeclarations = [];\n    for (let declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {\n      const declaration = ast.declarations[declarationIndex];\n      if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {\n        const { properties } = declaration.id;\n        for (let propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {\n          const property = properties[propertyIndex];\n          if (property.value.type === 'ObjectPattern' && property.value.properties) {\n            for (let subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {\n              const subProperty = property.value.properties[subPropertyIndex];\n              if (subProperty.type === 'Property') {\n                normalizedDeclarations.push({\n                  type: 'VariableDeclarator',\n                  id: {\n                    type: 'Identifier',\n                    name: subProperty.key.name\n                  },\n                  init: {\n                    type: 'MemberExpression',\n                    object: {\n                      type: 'MemberExpression',\n                      object: declaration.init,\n                      property: {\n                        type: 'Identifier',\n                        name: property.key.name\n                      },\n                      computed: false\n                    },\n                    property: {\n                      type: 'Identifier',\n                      name: subProperty.key.name\n                    },\n                    computed: false\n                  }\n                });\n              } else {\n                throw new Error('unexpected state');\n              }\n            }\n          } else if (property.value.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: property.value && property.value.name ? property.value.name : property.key.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Identifier',\n                  name: property.key.name\n                },\n                computed: false\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {\n        const { elements } = declaration.id;\n        for (let elementIndex = 0; elementIndex < elements.length; elementIndex++) {\n          const element = elements[elementIndex];\n          if (element.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: element.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Literal',\n                  value: elementIndex,\n                  raw: elementIndex.toString(),\n                  start: element.start,\n                  end: element.end\n                },\n                computed: true\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else {\n        normalizedDeclarations.push(declaration);\n      }\n    }\n    return normalizedDeclarations;\n  },\n\n  splitHTMLImageToRGB: (gpu, image) => {\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  splitRGBAToCanvases: (gpu, rgba, width, height) => {\n    const visualKernelR = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelR(rgba);\n\n    const visualKernelG = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelG(rgba);\n\n    const visualKernelB = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelB(rgba);\n\n    const visualKernelA = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelA(rgba);\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  },\n\n  getMinifySafeName: (fn) => {\n    try {\n      const ast = acorn.parse(`const value = ${fn.toString()}`);\n      const { init } = ast.body[0].declarations[0];\n      return init.body.name || init.body.body[0].argument.name;\n    } catch (e) {\n      throw new Error('Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }');\n    }\n  },\n};\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};\n},{\"./input\":110,\"./texture\":113,\"acorn\":1}]},{},[107])(107)\n});\n","const { GPU } = require('gpu.js');\n\nlet gpuInstance = null;\n\nfunction setup(value) {\n  gpuInstance = value;\n}\n\nfunction teardown() {\n  if (gpuInstance) {\n    gpuInstance.destroy();\n  }\n  gpuInstance = null;\n}\n\nfunction makeKernel(fn, settings) {\n  if (gpuInstance === null) {\n    setup(new GPU({ mode: 'gpu' }));\n  }\n  if (settings.hasOwnProperty('map')) {\n    return gpuInstance\n      .createKernelMap(settings.map, fn, settings)\n      .setPipeline(true);\n  }\n  return gpuInstance\n    .createKernel(fn, settings)\n    .setPipeline(true);\n}\n\nfunction makeDevKernel(fn, settings) {\n  if (settings && settings.map) {\n    throw new Error('map kernels are not supported by dev kernels');\n  }\n  const gpu = new GPU({ mode: 'dev' });\n  return gpu.createKernel(fn, settings);\n}\n\nfunction kernelInput(input, size) {\n  return GPU.input(input, size);\n}\n\nfunction release(texture) {\n  if (texture.delete) {\n    texture.delete();\n  }\n}\n\nfunction clone(texture) {\n  if (texture.clone) {\n    return texture.clone();\n  }\n  if (typeof texture[0] === 'number') {\n    return new Float32Array(texture);\n  } else if (typeof texture[0][0] === 'number') {\n    const result = [];\n    for (let y = 0; y < texture.length; y++) {\n      result.push(new Float32Array(texture[y]));\n    }\n    return result;\n  } else if (typeof texture[0][0][0] === 'number') {\n    const result = [];\n    for (let z = 0; z < texture.length; z++) {\n      const row = [];\n      result.push(row);\n      for (let y = 0; y < texture.length; y++) {\n        row.push(new Float32Array(texture[z][y]));\n      }\n    }\n    return result;\n  }\n\n  throw new Error('unrecognized argument');\n}\n\nmodule.exports = { setup, teardown, makeKernel, makeDevKernel, kernelInput, release, clone };\n","module.exports = function zeros(size) {\n  return new Float32Array(size);\n};\n","const zeros = require('./zeros');\n\nmodule.exports = function zeros2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = zeros(width);\n  }\n  return result;\n};\n","/**\n *\n * @param {Base} layer1\n * @param {Base} layer2\n */\nfunction checkSameSize(layer1, layer2) {\n  if (layer1.width !== layer2.width) {\n    throw new Error(\n      `Layer width mismatch of ${layer1.width} and ${\n        layer2.width\n      }`\n    );\n  }\n\n  if (layer1.height !== layer2.height) {\n    throw new Error(\n      `Layer height mismatch of ${layer1.height} and ${\n        layer2.height\n      }`\n    );\n  }\n}\n\nmodule.exports = {\n  checkSameSize\n};\n","const zeros2D = require('./zeros-2d');\n\nmodule.exports = function zeros3D(width, height, depth) {\n  const result = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = zeros2D(width, height);\n  }\n  return result;\n};\n","const { release, clone, makeKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nclass Base {\n  static get defaults() {\n    return {\n      width: 1,\n      height: 1,\n      depth: null,\n      weights: null,\n      deltas: null,\n      name: null,\n      praxisOpts: null,\n    };\n  }\n\n  constructor(settings) {\n    // size\n    this.width = null;\n    this.height = null;\n    this.depth = null;\n\n    // what matters :P\n    this.deltas = null;\n    this.weights = null;\n\n    this.praxis = null;\n    this.praxisOpts = null;\n\n    if (this.constructor !== Base) {\n      Object.assign(this, Base.defaults, settings);\n    }\n    Object.assign(this, this.constructor.defaults, settings);\n\n    // special settings\n    this.setupPraxis(settings);\n  }\n\n  setupPraxis(settings) {\n    if (!settings) return;\n    if (settings.hasOwnProperty('praxis')) {\n      if (typeof settings.praxis === 'function') {\n        this.praxis = settings.praxis(this, settings.praxisOpts);\n      } else {\n        this.praxis = settings.praxis;\n      }\n    }\n  }\n\n  /*\n  get weights() {\n    return this._weights;\n  }\n\n  set weights(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n      }\n    }\n    this._weights = value;\n  }\n\n  get deltas() {\n    return this._deltas;\n  }\n\n  set deltas(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n      }\n    }\n    this._deltas = value;\n  } */\n\n  validate() {\n    if (Number.isNaN(this.height)) {\n      throw new Error(`${this.constructor.name} layer height is not a number`);\n    }\n    if (Number.isNaN(this.width)) {\n      throw new Error(`${this.constructor.name} layer width is not a number`);\n    }\n    if (this.height < 1) {\n      throw new Error(`${this.constructor.name} layer height is less than 1`);\n    }\n    if (this.width < 1) {\n      throw new Error(`${this.constructor.name} layer width is less than 1`);\n    }\n  }\n\n  setupKernels() {\n    // console.log(`${this.constructor.name}-setupKernels is not yet implemented`)\n  }\n\n  reuseKernels(layer) {\n    if (layer.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.width} is not ${\n          this.width\n        }`\n      );\n    }\n    if (layer.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${\n          layer.height\n        } is not ${this.height}`\n      );\n    }\n    if (layer.hasOwnProperty('predictKernel')) {\n      this.predictKernel = layer.predictKernel;\n    }\n    if (layer.hasOwnProperty('compareKernel')) {\n      this.compareKernel = layer.compareKernel;\n    }\n    this.praxis = layer.praxis;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  // eslint-disable-next-line\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    const { weights } = this;\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    release(weights);\n    this.resetDeltas();\n  }\n\n  toArray() {\n    return this.weights.toArray();\n  }\n\n  toJSON() {\n    const jsonLayer = {};\n    const { defaults, name } = this.constructor;\n    if (this.constructor !== Base) {\n      Object.assign(defaults, Base.defaults, defaults);\n    }\n    const keys = Object.keys(defaults);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'deltas') continue;\n      if (key === 'name' && this[key] === null) continue;\n      jsonLayer[key] = this[key];\n    }\n    jsonLayer.type = name;\n    return jsonLayer;\n  }\n\n  resetDeltas() {\n    if (this.resetDeltasValue) {\n      release(this.deltas);\n      this.deltas = clone(this.resetDeltasValue);\n      return;\n    }\n    if (!this.resetDeltasKernel) {\n      const output = [this.width];\n      if (this.height) output.push(this.height);\n      if (this.depth) output.push(this.depth);\n      this.resetDeltasKernel = makeKernel(function() {\n        return 0;\n      }, { output });\n    }\n    release(this.deltas);\n    this.deltas = this.resetDeltasValue = this.resetDeltasKernel();\n  }\n}\n\nmodule.exports = {\n  Base\n};\n","const { Base } = require('./base');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nclass Activation extends Base {\n  constructor(inputLayer, settings) {\n    super();\n    this.inputLayer = inputLayer;\n\n    const { width, height, depth } = inputLayer;\n    this.predictKernel = null;\n    this.compareKernel = null;\n    this.width = width;\n    this.height = height;\n    this.validate();\n    if (depth > 0) {\n      this.depth = depth;\n      this.weights = zeros3D(width, height, depth);\n      this.deltas = zeros3D(width, height, depth);\n    } else {\n      this.weights = zeros2D(width, height);\n      this.deltas = zeros2D(width, height);\n    }\n    this.setupPraxis(settings);\n  }\n}\n\nmodule.exports = { Activation };\n","const { Base } = require('./base');\nconst { Activation } = require('./activation');\n\nclass Internal {}\nclass Filter extends Base {}\nclass Model extends Base {}\nclass Modifier extends Base {}\nclass Operator extends Base {}\n\nmodule.exports = { Activation, Internal, Filter, Model, Modifier, Operator };\n","const { makeKernel, release, clone } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { checkSameSize } = require('../utilities/layer-size');\nconst { Operator } = require('./types');\n\nfunction predict(inputWeights1, inputWeights2) {\n  return inputWeights1[this.thread.y][this.thread.x] + inputWeights2[this.thread.y][this.thread.x];\n}\n\nclass Add extends Operator {\n  constructor(inputLayer1, inputLayer2, settings) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.width = this.inputLayer1.width;\n    this.height = this.inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n    this.setupPraxis(settings);\n  }\n\n  validate() {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n  }\n\n  compare() {\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = clone(this.deltas);\n    this.inputLayer2.deltas = clone(this.deltas);\n  }\n}\n\nfunction add(inputLayer1, inputLayer2, settings) {\n  return new Add(inputLayer1, inputLayer2, settings);\n}\n\nmodule.exports = { Add, add, predict };\n","class Base {\n  static get defaults() {\n    return {};\n  }\n\n  constructor(layerTemplate, settings = {}) {\n    this.layerTemplate = layerTemplate;\n    this.width = layerTemplate.width || null;\n    this.height = layerTemplate.height || null;\n    this.depth = layerTemplate.depth || null;\n    Object.assign(this, this.constructor.defaults, settings);\n  }\n\n  setupKernels() {}\n\n  run() {}\n}\n\nmodule.exports = {\n  Base\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Base } = require('./base');\n\nfunction updateChange(value) {\n  return value;\n}\n\nfunction update(changes, weights, incomingWeights, inputDeltas) {\n  const lastChange = changes[this.thread.y][this.thread.x];\n  const inputDelta = inputDeltas[this.thread.y][0];\n  const weight = weights[this.thread.y][this.thread.x];\n  const incoming = incomingWeights[this.thread.x][0];\n\n  const change = this.constants.learningRate * inputDelta * incoming + this.constants.momentum * lastChange;\n  updateChange(change);\n  return weight + change;\n}\n\nclass ArthurDeviationWeights extends Base {\n  static get defaults() {\n    return {\n      learningRate: 0.3,\n      momentum: 0.1\n    };\n  }\n\n  constructor(layer, settings) {\n    super(layer, settings);\n    this.weightsLayer = null;\n    this.incomingLayer = null;\n    this.deltaLayer = null;\n\n    if (settings) {\n      if (settings.weightsLayer) {\n        this.weightsLayer = settings.weightsLayer\n      }\n      if (settings.incomingLayer) {\n        this.incomingLayer = settings.incomingLayer;\n      }\n      if (settings.deltaLayer) {\n        this.deltaLayer = settings.deltaLayer;\n      }\n    }\n\n    this.changes = zeros2D(layer.width, layer.height);\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(\n      this.changes,\n      this.weightsLayer.weights,\n      this.incomingLayer.weights,\n      this.deltaLayer.deltas\n    );\n    this.changes = output.changes;\n    return output.result;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      map: {\n        changes: updateChange\n      },\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.learningRate,\n        momentum: this.momentum\n      }\n    });\n  }\n}\n\nfunction arthurDeviationWeights(layer, settings) {\n  return new ArthurDeviationWeights(layer, settings);\n}\n\nmodule.exports = {\n  ArthurDeviationWeights,\n  arthurDeviationWeights,\n  update,\n  updateChange,\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst { Base } = require('./base');\n\nfunction update(weights, deltas) {\n  return weights[this.thread.y][this.thread.x] + this.constants.learningRate * deltas[this.thread.y][this.thread.x];\n}\n\nclass ArthurDeviationBiases extends Base {\n  static get defaults() {\n    return {\n      learningRate: 0.3\n    };\n  }\n\n  constructor(layer, settings) {\n    super(layer, settings);\n    this.kernel = null;\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(layer.weights, layer.deltas);\n    return output;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.learningRate\n      }\n    });\n  }\n}\n\nfunction arthurDeviationBiases(layer, settings) {\n  return new ArthurDeviationBiases(layer, settings);\n}\n\nmodule.exports = {\n  ArthurDeviationBiases,\n  arthurDeviationBiases,\n  update,\n};\n","module.exports = function randomWeight() {\n  return Math.random() * 0.4 - 0.2;\n}\n","const randomWeight = require('./random-weight');\n\nmodule.exports = function randos(size) {\n  const array = new Float32Array(size);\n  for (let i = 0; i < size; i++) {\n    array[i] = randomWeight();\n  }\n  return array;\n};\n","const randos = require('./randos');\n\nmodule.exports = function randos2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = randos(width);\n  }\n  return result;\n}\n","const { Model } = require('./types');\nconst randos2D = require('../utilities/randos-2d');\nconst zeros2D = require('../utilities/zeros-2d');\n\nclass Random extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = randos2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nfunction random(settings) {\n  return new Random(settings);\n}\n\nmodule.exports = {\n  Random,\n  random\n};\n","const { makeKernel, release } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Operator } = require('./types');\n\nfunction predict(weights1, weights2) {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += weights1[this.thread.y][i] * weights2[i][this.thread.x];\n  }\n  return sum;\n}\n\nfunction compareFromX(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i];\n  }\n  return sum;\n}\n\nfunction compareFromY(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y];\n  }\n  return sum;\n}\n\nclass Multiply extends Operator {\n  constructor(inputLayer1, inputLayer2, settings = {}) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.compareKernel1 = null;\n    this.compareKernel2 = null;\n\n    this.width = inputLayer2.width;\n    this.height = inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n\n    if (settings && settings.name) {\n      this.name = settings.name;\n    }\n    this.setupPraxis(settings);\n  }\n\n  validate() {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.height\n        }`\n      );\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      constants: {\n        size: this.inputLayer2.height,\n      },\n    });\n    this.compareKernel1 = makeKernel(compareFromX, {\n      output: [this.inputLayer1.width, this.inputLayer1.height],\n      constants: {\n        size: this.inputLayer2.width,\n      },\n    });\n    this.compareKernel2 = makeKernel(compareFromY, {\n      output: [this.inputLayer2.width, this.inputLayer2.height],\n      constants: {\n        size: this.inputLayer1.height,\n      },\n    });\n  }\n\n  reuseKernels(layer) {\n    super.reuseKernels(layer);\n    this.compareKernel1 = layer.compareKernel1;\n    this.compareKernel2 = layer.compareKernel2;\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n  }\n\n  compare() {\n    const inputLayer1Deltas = this.inputLayer1.deltas;\n    const inputLayer2Deltas = this.inputLayer2.deltas;\n\n    const newDeltas1 = this.compareKernel1(\n      this.deltas,\n      this.inputLayer1.deltas,\n      this.inputLayer2.weights\n    );\n    const newDeltas2 = this.compareKernel2(\n      this.deltas,\n      this.inputLayer2.deltas,\n      this.inputLayer1.weights\n    );\n\n    this.inputLayer2.deltas = newDeltas2;\n    this.inputLayer1.deltas = newDeltas1;\n\n    release(inputLayer1Deltas);\n    release(inputLayer2Deltas);\n  }\n}\n\nfunction multiply(inputLayer1, inputLayer2, settings) {\n  return new Multiply(inputLayer1, inputLayer2, settings);\n}\n\nmodule.exports = { Multiply, multiply, predict, compareFromX, compareFromY };\n","const { Activation } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/sigmoid');\n\nfunction predict2D(inputs) {\n  return 1 / (1 + Math.exp(-inputs[this.thread.y][this.thread.x]));\n}\n\nfunction predict3D(inputs) {\n  return 1 / (1 + Math.exp(-inputs[this.thread.z][this.thread.y][this.thread.x]));\n}\n\nfunction compare2D(weights, deltas) {\n  const weight = weights[this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nfunction compare3D(weights, deltas) {\n  const weight = weights[this.thread.z][this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.z][this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nclass Sigmoid extends Activation {\n  setupKernels() {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction sigmoid(inputLayer, settings) {\n  return new Sigmoid(inputLayer, settings);\n}\n\nmodule.exports = { Sigmoid, sigmoid, predict2D, predict3D, compare2D, compare3D };\n","const { arthurDeviationWeights } = require('../praxis/arthur-deviation-weights');\nconst { arthurDeviationBiases } = require('../praxis/arthur-deviation-biases');\nconst { add } = require('./add');\nconst { random } = require('./random');\nconst { multiply } = require('./multiply');\nconst { sigmoid } = require('./sigmoid');\n\nfunction noopPraxis() {\n  return { run: (layer) => layer.weights };\n}\n\nfunction arthurFeedForward(settings, inputLayer) {\n  const { height } = settings;\n  function weightsPraxis(layer, settings) {\n    return arthurDeviationWeights(layer, settings);\n  }\n  function biasesPraxis(layer, settings) {\n    return arthurDeviationBiases(layer, settings);\n  }\n  const weightsLayer = random({\n    name: 'weights',\n    height,\n    width: inputLayer.height,\n    praxis: weightsPraxis,\n  });\n\n  const biasesLayer = random({\n    name: 'biases',\n    height,\n    praxis: biasesPraxis,\n  });\n\n  const multiplyLayer = multiply(weightsLayer, inputLayer, { praxis: noopPraxis });\n  const addLayer = add(multiplyLayer, biasesLayer, { praxis: noopPraxis });\n  const sigmoidLayer = sigmoid(addLayer, { praxis: noopPraxis });\n\n  weightsLayer.praxis.weightsLayer = weightsLayer;\n  weightsLayer.praxis.incomingLayer = inputLayer;\n  weightsLayer.praxis.deltaLayer = sigmoidLayer;\n  return sigmoidLayer;\n}\n\nmodule.exports = {\n  arthurFeedForward\n};\n","function setStride(layer, settings) {\n  const { defaults } = layer.constructor;\n\n  if (settings.hasOwnProperty('stride')) {\n    layer.strideX = settings.stride;\n    layer.strideY = settings.stride;\n  } else {\n    if (settings.hasOwnProperty('strideX')) {\n      layer.strideX = settings.strideX;\n    } else {\n      layer.strideX = defaults.stride;\n    }\n\n    if (settings.hasOwnProperty('strideY')) {\n      layer.strideY = settings.strideY;\n    } else {\n      layer.strideY = defaults.stride;\n    }\n  }\n}\n\nfunction setPadding(layer, settings) {\n  const { defaults } = layer.constructor;\n\n  if (settings.hasOwnProperty('padding')) {\n    layer.paddingX = settings.padding;\n    layer.paddingY = settings.padding;\n  } else {\n    if (settings.hasOwnProperty('paddingX')) {\n      layer.paddingX = settings.paddingX;\n    } else {\n      layer.paddingX = defaults.padding;\n    }\n\n    if (settings.hasOwnProperty('paddingY')) {\n      layer.paddingY = settings.paddingY;\n    } else {\n      layer.paddingY = defaults.padding;\n    }\n  }\n}\n\nmodule.exports = { setStride, setPadding };\n","const rondos2D = require('./randos-2d');\n\nmodule.exports = function randos3D(width, height, depth) {\n  const result = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = rondos2D(width, height);\n  }\n  return result;\n}\n","module.exports = function values(size, value) {\n  return new Float32Array(size).fill(value);\n}","const { makeKernel, release, clone } = require('../utilities/kernel');\nconst { setStride, setPadding } = require('../utilities/layer-setup');\nconst { Filter } = require('./types');\nconst randos = require('../utilities/randos');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros3D = require('../utilities/zeros-3d');\nconst values = require('../utilities/values');\n\nfunction predict(inputs, filters, biases) {\n  const startFilterX = this.constants.paddingX - (this.thread.x * this.constants.strideX);\n  const startInputX = (this.thread.x * this.constants.strideX) - this.constants.paddingX;\n  const endFilterX = Math.min(this.constants.filterWidth, startFilterX + this.constants.inputWidth);\n\n  const startFilterY = this.constants.paddingY - (this.thread.y * this.constants.strideY);\n  const startInputY = (this.thread.y * this.constants.strideY) - this.constants.paddingY;\n  const endFilterY = Math.min(this.constants.filterHeight, startFilterY + this.constants.inputHeight);\n\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let filterY = Math.max(0, startFilterY), inputY = Math.max(0, startInputY); filterY < endFilterY; filterY++, inputY++) {\n      for (let filterX = Math.max(0, startFilterX), inputX = Math.max(0, startInputX); filterX < endFilterX; filterX++, inputX++) {\n        sum += filters[z][filterY][filterX] * inputs[z][inputY][inputX];\n      }\n    }\n  }\n  return sum + biases[this.thread.z];\n}\n\nfunction compareFilterDeltas(filterDeltas, inputs, deltas) {\n  const startDeltaX = Math.max(0, Math.ceil((this.constants.paddingX - this.thread.x) / this.constants.strideX));\n  const startInputX = startDeltaX * this.constants.strideX + this.thread.x - this.constants.paddingX;\n  const endDeltaX = Math.min(this.constants.deltaWidth, Math.floor(((this.constants.inputWidth - 1) - this.thread.x + this.constants.paddingX) / this.constants.strideX) + 1);\n\n  const startDeltaY = Math.max(0, Math.ceil((this.constants.paddingY - this.thread.y) / this.constants.strideY));\n  const startInputY = startDeltaY * this.constants.strideY + this.thread.y - this.constants.paddingY;\n  const endDeltaY = Math.min(this.constants.deltaHeight, Math.floor(((this.constants.inputHeight - 1) - this.thread.y + this.constants.paddingY) / this.constants.strideY) + 1);\n\n  let sum = filterDeltas[this.thread.z][this.thread.y][this.thread.x];\n  for (let deltaY = startDeltaY, inputY = startInputY; deltaY < endDeltaY; deltaY++, inputY += this.constants.strideY) {\n    for (let deltaX = startDeltaX, inputX = startInputX; deltaX < endDeltaX; deltaX++, inputX += this.constants.strideX) {\n      sum += inputs[this.thread.z][inputY][inputX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nfunction compareInputDeltas(inputDeltas, filters, deltas) {\n  const x = this.thread.x + this.constants.paddingX;\n  const startDeltaX = x < this.constants.filterWidth ? 0 : Math.floor((x - this.constants.filterWidth + this.constants.strideX) / this.constants.strideX);\n  const startFilterX = x - startDeltaX * this.constants.strideX;\n  const endDeltaX = Math.min(startDeltaX + Math.floor(startFilterX / this.constants.strideX) + 1, this.constants.deltaWidth);\n\n  const y = this.thread.y + this.constants.paddingY;\n  const startDeltaY = y < this.constants.filterHeight ? 0 : Math.floor((y - this.constants.filterHeight + this.constants.strideY) / this.constants.strideY);\n  const startFilterY = y - startDeltaY * this.constants.strideY;\n  const endDeltaY = Math.min(startDeltaY + Math.floor(startFilterY / this.constants.strideY) + 1, this.constants.deltaHeight);\n\n  let sum = inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n  let deltaY = startDeltaY;\n  for (let filterY = startFilterY; deltaY < endDeltaY; filterY -= this.constants.strideY, deltaY++) {\n    let deltaX = startDeltaX;\n    for (let filterX = startFilterX; deltaX < endDeltaX; filterX -= this.constants.strideX, deltaX++) {\n      sum += filters[this.thread.z][filterY][filterX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nfunction compareBiases(biasDeltas, deltas) {\n  let sum = 0;\n  for (let y = 0; y < this.constants.deltaHeight; y++) {\n    for (let x = 0; x < this.constants.deltaWidth; x++) {\n      sum += deltas[this.thread.z][y][x];\n    }\n  }\n  return biasDeltas[this.thread.z][this.thread.y][this.thread.x] + sum;\n}\n\nclass Convolution extends Filter {\n  static get defaults() {\n    return {\n      stride: 0,\n      padding: 0,\n      bias: 0.1,\n      filterCount: 1,\n      filterWidth: 0,\n      filterHeight: 0,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n\n    this.stride = null;\n    this.strideX = null;\n    this.strideY = null;\n    setStride(this, settings);\n\n    this.padding = null;\n    this.paddingX = null;\n    this.paddingY = null;\n    setPadding(this, settings);\n\n    this.filterCount = settings.filterCount;\n    this.filterWidth = settings.filterWidth;\n    this.filterHeight = settings.filterHeight;\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    );\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n    this.depth = this.filterCount;\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.biases = values(this.depth, this.bias);\n    this.biasDeltas = randos(this.depth);\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount);\n\n    this.learnFilters = null;\n    this.learnInputs = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n    });\n\n    this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n      constants: {\n        deltasWidth: this.width,\n        deltasHeight: this.height,\n        deltasDepth: this.depth,\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n    });\n\n    this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n      constants: {\n        filterCount: this.filterCount,\n      },\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n    });\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [1, 1, this.depth],\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n      },\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare() {\n    const { filterDeltas, biasDeltas } = this;\n    this.filterDeltas = this.compareFilterDeltasKernel(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(filterDeltas);\n    this.biasDeltas = this.compareBiasesKernel(biasDeltas, this.deltas);\n    release(biasDeltas);\n    release(this.deltas);\n    this.deltas = this.compareInputDeltasKernel(this.filters, this.inputLayer.deltas);\n\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = clone(this.deltas);\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    // TODO: handle filters\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    release(this.weights);\n    release(this.deltas);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n  }\n}\n\nfunction convolution(settings, inputLayer) {\n  return new Convolution(settings, inputLayer);\n}\n\nmodule.exports = {\n  Convolution,\n  convolution,\n  predict,\n  compareFilterDeltas,\n  compareInputDeltas,\n  compareBiases\n};\n","const { Filter } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\n\nfunction setDropout(dropout) {\n  return dropout;\n}\nfunction trainingPredict(inputs) {\n  if (setDropout(Math.random()) < this.constants.probability) {\n    return 0;\n  }\n  return inputs[this.thread.y][this.thread.x];\n}\n\nfunction predict(inputs) {\n  return inputs[this.thread.y][this.thread.x] * this.constants.probability;\n}\n\nfunction compare(dropouts, deltas) {\n  if (dropouts[this.thread.y][this.thread.x] === 0) {\n    return 0;\n  }\n  return deltas[this.thread.y][this.thread.x];\n}\n\nclass Dropout extends Filter {\n  static get defaults() {\n    return {\n      width: 1,\n      height: 1,\n      depth: null,\n      probability: 0.5\n    };\n  }\n\n  constructor(inputLayer, settings) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.height = inputLayer.height;\n    this.width = inputLayer.width;\n    this.dropouts = null;\n    this.validate();\n  }\n\n  setupKernels(isTraining) {\n    const output = [this.width, this.height];\n\n    if (isTraining) {\n      this.predictKernel = makeKernel(trainingPredict, { output, map: { dropouts: setDropout } });\n      this.compareKernel = makeKernel(compare, { output });\n    } else {\n      this.predictKernel = makeKernel(predict, { output });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    release(this.dropouts);\n    const { result, dropouts } = this.predictKernel(this.inputLayer.weights);\n    this.weights = result;\n    this.dropouts = dropouts;\n  }\n\n  compare() {\n    release(this.deltas);\n    this.deltas = this.compareKernel(this.dropouts, this.inputLayer.deltas);\n  }\n}\n\nfunction dropout(settings, inputLayer) {\n  return new Dropout(settings, inputLayer);\n}\n\nmodule.exports = { Dropout, dropout, setDropout, trainingPredict, predict, compare };\n","const { random } = require('./random');\nconst { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { sigmoid } = require('./sigmoid');\n\nfunction feedForward(settings, input) {\n  const { height, praxisOpts } = settings;\n  const weights = random({ name: 'weights', height, width: input.height, praxisOpts });\n  const biases = random({ name: 'biases', height, praxisOpts });\n  return sigmoid(add(multiply(weights, input, { praxisOpts }), biases, { praxisOpts }), { praxisOpts });\n}\n\nmodule.exports = {\n  feedForward\n};\n","const { Filter } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst values = require('../utilities/values');\nconst randos2D = require('../utilities/randos-2d');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nfunction predict(inputs, filters, biases) {\n  let output = 0;\n  let i = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      output += inputs[y][x] * filters[this.thread.x][i];\n      i++;\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nfunction predict3D(inputs, filters, biases) {\n  let output = 0;\n  let i = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        output += inputs[z][y][x] * filters[this.thread.x][i];\n        i++;\n      }\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nfunction compareInputDeltas(inputDeltas, deltas, filters) {\n  let sum = 0;\n  const filterX = this.thread.x + (this.thread.y * this.output.x);\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.y][this.thread.x];\n}\n\nfunction compareInputDeltas3D(inputDeltas, deltas, filters) {\n  let sum = 0;\n  const filterX = this.thread.x + (this.thread.y * this.output.x);\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n}\n\nfunction compareBiases(biases, deltas) {\n  return biases[this.thread.x] + deltas[this.thread.y][this.thread.x];\n}\n\nfunction compareFilterDeltas(filterDeltas, inputWeights, deltas) {\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[this.thread.y][this.thread.x] * deltas[this.constants.deltaY][this.constants.deltaX]);\n}\n\nfunction compareFilterDeltas3D(filterDeltas, inputWeights, deltas) {\n  const inputZ = Math.floor(this.thread.x / (this.constants.inputWidth * this.constants.inputHeight));\n  const inputY = Math.floor((this.thread.x - inputZ * this.constants.inputWidth * this.constants.inputHeight) / this.constants.inputWidth);\n  const inputX = this.thread.x - this.constants.inputWidth * (inputY + this.constants.inputHeight * inputZ);\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[inputZ][inputY][inputX] * deltas[0][this.thread.y]);\n}\n\nclass FullyConnected extends Filter {\n  static get defaults() {\n    return {\n      bias: 0.1,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n    this.compareFilterDeltasKernel = null;\n    this.compareInputDeltasKernel = null;\n    this.compareBiasesKernel = null;\n\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n\n    this.biases = values(this.height, this.bias);\n    this.biasDeltas = zeros(this.height);\n\n    this.filters = randos2D(connectionCount, this.height);\n    this.filterDeltas = zeros2D(connectionCount, this.height);\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height);\n      this.deltas = zeros3D(this.width, this.height);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  validate() {\n    super.validate();\n    if (this.depth > 0) throw new Error('depth not supported');\n  }\n\n  setupKernels() {\n    const { inputLayer } = this;\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n    if (inputLayer.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n          inputDepth: inputLayer.depth,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas3D, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas3D, {\n        output: [inputLayer.width, inputLayer.height, inputLayer.depth],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n        output: [inputLayer.width, inputLayer.height],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    }\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare() {\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = this.compareInputDeltasKernel(\n      inputLayerDeltas,\n      this.deltas,\n      this.filters\n    );\n    release(inputLayerDeltas);\n\n    const { biasDeltas, filterDeltas } = this;\n    // TODO: handle biasDeltas learn\n    this.biasDeltas = this.compareBiasesKernel(this.biases, this.deltas);\n\n    // TODO: handle filterDeltas learn\n    this.filterDeltas = this.compareFilterDeltasKernel(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(biasDeltas);\n    release(filterDeltas);\n  }\n}\n\nfunction fullyConnected(settings, inputLayer) {\n  return new FullyConnected(settings, inputLayer);\n}\n\nmodule.exports = { FullyConnected, fullyConnected, predict, predict3D, compareInputDeltas, compareInputDeltas3D, compareBiases, compareFilterDeltas, compareFilterDeltas3D };\n","const { makeKernel, release } = require('../utilities/kernel');\nconst { Modifier } = require('./types');\n\nfunction predict(weights) {\n  return -weights[this.thread.y][this.thread.x];\n}\n\nclass Negative extends Modifier {\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    const { weights } = this;\n    this.weights = this.predictKernel(this.inputLayer.weights);\n    release(weights);\n  }\n}\n\nfunction negative(settings, inputLayer) {\n  return new Negative(settings, inputLayer);\n}\n\nmodule.exports = { Negative, negative, predict };\n","const { makeKernel, release } = require('../utilities/kernel');\nconst { Operator } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { checkSameSize } = require('../utilities/layer-size');\n\nfunction predict(weights, inputLayerWeights) {\n  return (\n    weights[this.thread.y][this.thread.x] *\n    inputLayerWeights[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare(weights, deltas) {\n  return (\n    weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nclass MultiplyElement extends Operator {\n  constructor(inputLayer1, inputLayer2) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n\n    this.width = inputLayer1.width;\n    this.height = inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  validate() {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    const { weights } = this;\n    this.weights = this.predictKernel(weights, this.inputLayer.weights);\n    release(weights);\n  }\n\n  compare() {\n    const { deltas } = this;\n    this.deltas = this.compareKernel(this.weights, deltas);\n    release(deltas);\n  }\n}\n\nfunction multiplyElement(inputLayer1, inputLayer2) {\n  return new MultiplyElement(inputLayer1, inputLayer2);\n}\n\nmodule.exports = { MultiplyElement, multiplyElement };\n","module.exports = function ones(size) {\n  return new Float32Array(size).fill(1);\n}\n","const ones = require('./ones');\n\nmodule.exports = function ones2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = ones(width);\n  }\n  return result;\n}\n","const ones2D = require('../utilities/ones-2d');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Model } = require('./types');\n\nclass Ones extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = ones2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n}\n\nfunction ones(settings) {\n  return new Ones(settings);\n}\n\nmodule.exports = {\n  Ones,\n  ones\n};\n","const { Activation } = require('./activation');\nconst { makeKernel } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/tanh');\nconst { release } = require('../utilities/kernel');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, errors) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    errors[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare3D(weights, errors) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    errors[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass Tanh extends Activation {\n  setupKernels() {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate]\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate]\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction tanh(inputLayer, settings) {\n  return new Tanh(inputLayer, settings);\n}\n\nmodule.exports = { Tanh, tanh, predict2D, predict3D, compare2D, compare3D };\n","const zeros2D = require('../utilities/zeros-2d');\nconst { Model } = require('./types');\n\nclass Zeros extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nfunction zeros(settings) {\n  return new Zeros(settings);\n}\n\nmodule.exports = {\n  Zeros,\n  zeros\n};\n","const { add } = require('./add');\nconst { negative } = require('./negative');\nconst { multiply } = require('./multiply');\nconst { multiplyElement } = require('./multiply-element');\nconst { ones } = require('./ones');\nconst { sigmoid } = require('./sigmoid');\nconst { random } = require('./random');\nconst { tanh } = require('./tanh');\nconst { zeros } = require('./zeros');\n\nfunction gru(settings, recurrentInput, input) {\n  const { height } = settings;\n  const updateGateWeights = random({ height, width: input.height });\n  const updateGatePeepholes = random({ width: height, height });\n  const updateGateBias = zeros({ height });\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(updateGateWeights, input),\n        multiply(updateGatePeepholes, recurrentInput)\n      ),\n      updateGateBias\n    )\n  );\n\n  const resetGateWeights = random({ height, width: input.height });\n  const resetGatePeepholes = random({ width: height, height });\n  const resetGateBias = zeros({ height });\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(resetGateWeights, input),\n        multiply(resetGatePeepholes, recurrentInput)\n      ),\n      resetGateBias\n    )\n  );\n\n  const cellWeights = random({ height, width: input.height });\n  const cellPeepholes = random({ width: height, height });\n  const cellBias = zeros({ height });\n  const cell = tanh(\n    add(\n      add(\n        multiply(cellWeights, input),\n        multiply(cellPeepholes, multiplyElement(resetGate, recurrentInput))\n      ),\n      cellBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(ones(updateGate.rows, updateGate.columns), negative(updateGate)),\n      cell\n    ),\n    multiplyElement(recurrentInput, updateGate)\n  );\n}\n\nmodule.exports = {\n  gru\n};\n","const { Model } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { makeKernel, release, kernelInput } = require('../utilities/kernel');\n\nclass Input extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = null;\n    this.reshapeInput = null;\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels() {\n    if (this.width === 1) {\n      this.predict = this.predict1D;\n      this.reshapeInput = makeKernel(function(value) {\n        return value[this.thread.y];\n      }, {\n        output: [1, this.height]\n      });\n    } else {\n      this.reshapeInput = (inputs) => inputs;\n    }\n  }\n\n  predict(inputs) {\n    if (inputs.length === this.height * this.width) {\n      release(this.weights);\n      this.weights = kernelInput(inputs, [this.width, this.height]);\n    } else if (\n      inputs.length === this.height &&\n      inputs[0].length === this.width\n    ) {\n      this.weights = inputs;\n    } else {\n      throw new Error('Inputs are not of sized correctly');\n    }\n  }\n\n  predict1D(inputs) {\n    if (this.weights) release(this.weights);\n    this.weights = this.reshapeInput(inputs);\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  toJSON() {\n    const jsonLayer = {};\n    const { defaults, name } = this.constructor;\n    const keys = Object.keys(defaults);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n\n      if (key === 'deltas' || key === 'weights') continue;\n      jsonLayer[key] = this[key];\n    }\n    jsonLayer.type = name;\n    return jsonLayer;\n  }\n}\n\nfunction input(settings) {\n  return new Input(settings);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n","const { Activation } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/leaky-relu');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare3D(weights, deltas) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass LeakyRelu extends Activation {\n  setupKernels() {\n    const { width, height, depth } = this.inputLayer;\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    const { deltas } = this;\n    this.deltas = this.compareKernel(this.weights, deltas);\n    release(deltas);\n  }\n}\n\nfunction leakyRelu(inputLayer, settings) {\n  return new LeakyRelu(inputLayer, settings);\n}\n\nmodule.exports = { LeakyRelu, leakyRelu, predict2D, predict3D, compare2D, compare3D };\n","const { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { multiplyElement } = require('./multiply-element');\nconst { random } = require('./random');\nconst { sigmoid } = require('./sigmoid');\nconst { tanh } = require('./tanh');\nconst { zeros } = require('./zeros');\n\nfunction lstm(settings, recurrentInput, input) {\n  const { height } = settings;\n  const inputGateWeights = random({ height, width: input.height });\n  const inputGatePeepholes = random({ width: height, height });\n  const inputGateBias = zeros({ height });\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(inputGateWeights, input),\n        multiply(inputGatePeepholes, recurrentInput)\n      ),\n      inputGateBias\n    )\n  );\n\n  const forgetGateWeights = random({ height, width: input.height });\n  const forgetGatePeepholes = random({ width: height, height });\n  const forgetGateBias = zeros({ height });\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(forgetGateWeights, input),\n        multiply(forgetGatePeepholes, recurrentInput)\n      ),\n      forgetGateBias\n    )\n  );\n\n  const outputGateWeights = random({ height, width: input.height });\n  const outputGatePeepholes = random({ width: height, height });\n  const outputGateBias = zeros({ height });\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(outputGateWeights, input),\n        multiply(outputGatePeepholes, recurrentInput)\n      ),\n      outputGateBias\n    )\n  );\n\n  const memoryWeights = random({ height, width: input.height });\n  const memoryPeepholes = random({ width: height, height });\n  const memoryBias = zeros({ height });\n  const memory = tanh(\n    add(\n      add(\n        multiply(memoryWeights, input),\n        multiply(memoryPeepholes, recurrentInput)\n      ),\n      memoryBias\n    )\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, input); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, memory); // what do we write to cell\n  const cell = add(retainCell, writeCell); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell));\n}\n\nmodule.exports = {\n  lstm\n};\n","const { makeKernel, release, clone } = require('../utilities/kernel');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\nconst { Filter } = require('./types');\n\nfunction compare1D(weights, targetValues) {\n  // return targetValues[this.thread.x] - weights[this.thread.y][this.thread.x];\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x];\n}\n\nfunction compare2D(weights, targetValues) {\n  // return targetValues[this.thread.y][this.thread.x] - weights[this.thread.y][this.thread.x];\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.y][this.thread.x];\n}\n\nclass Target extends Filter {\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.width = inputLayer.width;\n    this.height = inputLayer.height;\n    this.depth = inputLayer.depth;\n    this.validate();\n    if (this.depth > 0) {\n      throw new Error('Target layer not implemented for depth');\n    } else if (this.height > 1) {\n      this.weights = zeros2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n      this.errors = zeros2D(this.width, this.height);\n    } else {\n      this.weights = zeros(this.width);\n      this.deltas = zeros(this.width);\n      this.errors = zeros(this.width);\n    }\n  }\n\n  setupKernels() {\n    const compareFn = this.width === 1 ? compare1D : compare2D;\n    this.compareKernel = makeKernel(compareFn, {\n      output: [this.width, this.height]\n    });\n  }\n\n  predict() {\n    // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights);\n  }\n\n  compare(targetValues) {\n    // this is where weights attach to deltas\n    // deltas will be zero on learn, so save it in error for comparing to mse later\n    release(this.deltas);\n    release(this.errors);\n    release(this.inputLayer.deltas);\n    this.deltas = this.compareKernel(this.weights, targetValues);\n    this.inputLayer.deltas = clone(this.deltas);\n    this.errors = clone(this.deltas);\n  }\n\n  setupPraxis() {}\n\n  learn() {\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights);\n    this.resetDeltas();\n  }\n}\n\nfunction target(settings, inputLayer) {\n  return new Target(settings, inputLayer);\n}\n\nmodule.exports = {\n  Target,\n  target\n};\n","const { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { random } = require('./random');\nconst { target } = require('./target');\nconst { zeros } = require('./zeros');\n\nfunction output(settings, inputLayer) {\n  const { height } = settings;\n  const outputGate = random({ height, width: inputLayer.height, name: 'outputGate' });\n  const output = zeros({ height, name: 'output' });\n  const outputGateConnector = multiply(outputGate, inputLayer, { name: 'outputGateConnected' });\n  return target({ name: 'target', ...settings }, add(outputGateConnector, output));\n}\n\nmodule.exports = {\n  output\n};\n","const { Filter } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst { setPadding, setStride } = require('../utilities/layer-setup');\nconst zeros3D = require('../utilities/zeros-3d');\nconst randos3D = require('../utilities/randos-3d');\n\nfunction setSwitchY(value) {\n  return value;\n}\n\nfunction setSwitchX(value) {\n  return value;\n}\n\nfunction predict(inputs) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.inputWidth -\n      this.constants.paddingX\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.inputHeight -\n      this.constants.paddingY\n  );\n  let largestValue = -Infinity;\n  let largestX = -1;\n  let largestY = -1;\n\n  // convolve centered at this particular location\n  for (let filterY = 0; filterY < this.constants.filterHeight; filterY++) {\n    // coordinates in the original input array coordinates\n    const inputY = filterY + y;\n    for (let filterX = 0; filterX < this.constants.filterWidth; filterX++) {\n      const inputX = filterX + x;\n      if (\n        inputY >= 0 &&\n        inputY < this.constants.inputHeight &&\n        inputX >= 0 &&\n        inputX < this.constants.inputWidth\n      ) {\n        const input = inputs[this.thread.z][inputY][inputX];\n        if (input > largestValue) {\n          largestValue = input;\n          largestY = inputY;\n          largestX = inputX;\n        }\n      }\n    }\n  }\n  setSwitchY(largestY);\n  setSwitchX(largestX);\n  return largestValue;\n}\n\nfunction compare(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[deltasY][deltasX];\n      const switchYValue = switchY[deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction compare3D(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[this.thread.z][deltasY][deltasX];\n      const switchYValue = switchY[this.thread.z][deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[this.thread.z][deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nclass Pool extends Filter {\n  static get defaults() {\n    return {\n      padding: 0,\n      bias: 0,\n      filterWidth: 0,\n      filterHeight: 0,\n      filterCount: 0,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n\n    this.stride = null;\n    this.strideX = null;\n    this.strideY = null;\n    setStride(this, settings);\n\n    this.padding = null;\n    this.paddingX = null;\n    this.paddingY = null;\n    setPadding(this, settings);\n\n    this.filterCount = settings.filterCount;\n    this.filterWidth = settings.filterWidth;\n    this.filterHeight = settings.filterHeight;\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    );\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n    // TODO: handle 1 depth?\n    this.depth = this.filterCount;\n\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount);\n\n    this.learnFilters = null;\n    this.learnInputs = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height, this.depth],\n      map: {\n        switchX: setSwitchX,\n        switchY: setSwitchY,\n      },\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterHeight: this.filterHeight,\n        filterWidth: this.filterWidth,\n      },\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.inputLayer.width, this.inputLayer.height, this.inputLayer.depth],\n      constants: {\n        outputWidth: this.width,\n        outputHeight: this.height,\n        outputDepth: this.depth,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n      },\n    });\n  }\n\n  predict() {\n    const { switchX, switchY, weights: prevWeights } = this;\n    release(this.switchX);\n    release(this.switchY);\n    const weights = this.predictKernel(this.inputLayer.weights);\n    this.switchX = weights.switchX;\n    this.switchY = weights.switchY;\n    this.weights = weights.result;\n    release(prevWeights);\n    return this.weights;\n  }\n\n  compare() {\n    debugger;\n    const depth = this.inputLayer.deltas.length;\n    const height = this.inputLayer.deltas[0].length;\n    const width = this.inputLayer.deltas[0][0].length;\n    const type = typeof this.inputLayer.deltas[0][0][0];\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = this.compareKernel(\n      this.deltas,\n      this.switchX,\n      this.switchY\n    );\n    release(inputLayerDeltas);\n    debugger;\n    if (depth !== this.inputLayer.deltas.length) debugger;\n    if (height !== this.inputLayer.deltas[0].length) debugger;\n    if (width !== this.inputLayer.deltas[0][0].length) debugger;\n    if (type !== typeof this.inputLayer.deltas[0][0][0]) debugger;\n  }\n}\n\nfunction pool(settings, inputLayer) {\n  return new Pool(settings, inputLayer);\n}\n\nmodule.exports = { Pool, pool, predict, compare, compare3D };\n","const { Activation } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/relu');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare3D(weights, deltas) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass Relu extends Activation {\n  setupKernels() {\n    const { width, height, depth } = this.inputLayer;\n    if (depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction relu(inputLayer, settings) {\n  return new Relu(inputLayer, settings);\n}\n\nmodule.exports = { Relu, relu, predict2D, compare2D, predict3D, compare3D };\n","const { relu } = require('./relu');\nconst { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { random } = require('./random');\nconst { zeros } = require('./zeros');\n\nfunction recurrent(settings, input, recurrentInput) {\n  const { height } = settings;\n\n  recurrentInput.setDimensions(1, height);\n\n  // wxh\n  const weight = random({ name: 'weight', height, width: input.height });\n  // whh\n  const transition = random({ name: 'transition', height, width: height });\n  // bhh\n  const bias = zeros({ name: 'bias', height });\n\n  return relu(\n    add(\n      add(multiply(weight, input), multiply(transition, recurrentInput)),\n      bias\n    )\n  );\n}\n\nmodule.exports = {\n  recurrent\n};\n","const { Base } = require('./base');\n\nclass Regression extends Base {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n  }\n\n  predict() {\n    this.weights = this.inputs;\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(inputs, targets) {\n  return inputs[this.thread.x] - targets[this.thread.x];\n}\n\n// TODO: handle `loss += 0.5*dy*dy;` total and sum in learn\nfunction regression(settings, inputLayer) {\n  return new Regression(settings, inputLayer);\n}\n\nmodule.exports = {\n  Regression,\n  regression,\n  learn\n};\n","const { makeKernel, release, clone } = require('../utilities/kernel');\nconst { Filter } = require('./types');\nconst randos = require('../utilities/randos');\nconst randos2D = require('../utilities/randos-2d');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nfunction getMaxValue(inputs) {\n  let maxInput = -Infinity;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    const input = inputs[x];\n    if (input > maxInput) {\n      maxInput = input;\n    }\n  }\n  return maxInput;\n}\n\nfunction getMaxValue2D(inputs) {\n  let maxInput = -Infinity;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      const input = inputs[y][x];\n      if (input > maxInput) {\n        maxInput = input;\n      }\n    }\n  }\n  return maxInput;\n}\n\nfunction getMaxValue3D(inputs) {\n  let maxInput = -Infinity;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        const input = inputs[z][y][x];\n        if (input > maxInput) {\n          maxInput = input;\n        }\n      }\n    }\n  }\n  return maxInput;\n}\n\nfunction getSum(inputs) {\n  let sum = 0;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    sum += inputs[x];\n  }\n  return sum;\n}\n\nfunction getSum2D(inputs) {\n  let sum = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      sum += inputs[y][x];\n    }\n  }\n  return sum;\n}\n\nfunction getSum3D(inputs) {\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        sum += inputs[z][y][x];\n      }\n    }\n  }\n  return sum;\n}\n\nfunction getExponentials(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.x] - maxInput[0]\n  );\n}\n\nfunction getExponentials2D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nfunction getExponentials3D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nfunction predict(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.x] / exponentialsSum[0]\n  );\n}\n\nfunction predict2D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nfunction predict3D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.z][this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nfunction compare(target, exponentials) {\n  let indicator = 0;\n  if (this.thread.x === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.x]);\n}\n\nfunction compare2D(target, exponentials) {\n  let indicator = 0;\n  const index = this.thread.x + (this.thread.y * this.output.x);\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.y][this.thread.x]);\n}\n\nfunction compare3D(target, exponentials) {\n  let indicator = 0;\n  const index = this.thread.x\n    + (this.thread.y * this.output.x)\n    + (this.thread.z * this.output.x * this.output.y);\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction loss(exponentials) {\n  return -Math.log();\n}\n\n// TODO: handle: `return -Math.log(this.es[y]);` in learn\n\nclass SoftMax extends Filter {\n  constructor(inputLayer) {\n    super();\n    this.width = inputLayer.width;\n    this.height = inputLayer.height;\n    this.depth = inputLayer.depth;\n    this.getExponentialsKernel = null;\n    this.getMaxValueKernel = null;\n    this.getSumKernel = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    } else {\n      this.weights = randos(this.width);\n      this.deltas = zeros(this.width);\n    }\n  }\n\n  setupKernels() {\n    const { width, height, depth } = this;\n    if (depth > 0) {\n      this.getExponentialsKernel = makeKernel(getExponentials3D, {\n        output: [width, height, depth],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n      });\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n      });\n    } else {\n      this.getExponentialsKernel = makeKernel(getExponentials, {\n        output: [width, height],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n      });\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n      });\n    }\n  }\n\n  predict() {\n    const maxValue = this.getMaxValueKernel(this.inputLayer.weights);\n    const exponentials = this.getExponentialsKernel(\n      this.inputLayer.weights,\n      maxValue\n    );\n    const exponentialsSum = this.getSumKernel(exponentials);\n    this.weights = this.predictKernel(exponentials, exponentialsSum);\n  }\n\n  compare(targetValues) {\n    const { deltas, errors } = this;\n    this.errors = this.compareKernel(targetValues[0], deltas);\n    this.deltas = clone(this.errors);\n    release(deltas);\n    release(errors);\n\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = clone(this.deltas);\n    release(inputLayerDeltas);\n  }\n}\n\nfunction softMax(settings, inputLayer) {\n  return new SoftMax(settings, inputLayer);\n}\n\nmodule.exports = {\n  SoftMax, softMax,\n  getMaxValue, getMaxValue2D, getMaxValue3D,\n  getSum, getSum2D, getSum3D,\n  getExponentials, getExponentials2D, getExponentials3D,\n  predict, predict2D, predict3D,\n  compare, compare2D, compare3D,\n  loss\n};\n","const { Base } = require('./base');\n\nclass SVM extends Base {\n  predict() {\n    this.weights = this.inputs;\n    this.validate();\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(target) {\n  // if(y === i) { continue; }\n  // var ydiff = -yscore + x.w[i] + margin;\n  // if(ydiff > 0) {\n  //   // violating dimension, apply loss\n  //   x.dw[i] += 1;\n  //   x.dw[y] -= 1;\n  //   loss += ydiff;\n  // }\n}\n\nfunction svm(settings, inputLayer) {\n  return new SVM(settings, inputLayer);\n}\n\nmodule.exports = {\n  SVM,\n  svm\n};\n","const { Modifier } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\n\nfunction predict(array) {\n  return array[this.thread.x][this.thread.y];\n}\n\nconst compare = predict;\n\nclass Transpose extends Modifier {\n  constructor(inputLayer) {\n    super();\n    this.inputLayer = inputLayer;\n    this.width = this.inputLayer.height;\n    this.height = this.inputLayer.width;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.height, this.width],\n    });\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    const { weights } = this;\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    release(this.inputLayer.deltas);\n    // TODO: needs switched to this.compareKernel?\n    this.inputLayer.deltas = this.predictKernel(this.deltas);\n  }\n}\n\nfunction transpose(inputLayer) {\n  return new Transpose(inputLayer);\n}\n\nmodule.exports = {\n  Transpose,\n  transpose,\n};\n","const { Add, add } = require('./add');\nconst { arthurFeedForward } = require('./arthur-feed-forward');\nconst { Base } = require('./base');\nconst { Convolution, convolution } = require('./convolution');\nconst { Dropout, dropout } = require('./dropout');\nconst { feedForward } = require('./feed-forward');\nconst { FullyConnected, fullyConnected } = require('./fully-connected');\nconst { gru } = require('./gru');\nconst { Input, input } = require('./input');\nconst { LeakyRelu, leakyRelu } = require('./leaky-relu');\nconst { lstm } = require('./lstm');\nconst { Multiply, multiply } = require('./multiply');\nconst { MultiplyElement, multiplyElement } = require('./multiply-element');\nconst { Negative, negative } = require('./negative');\nconst { Ones, ones } = require('./ones');\nconst { output } = require('./output');\nconst { Pool, pool } = require('./pool');\nconst { Random, random } = require('./random');\nconst { recurrent } = require('./recurrent');\nconst { Regression, regression } = require('./regression');\nconst { Relu, relu } = require('./relu');\nconst { Sigmoid, sigmoid } = require('./sigmoid');\nconst { SoftMax, softMax } = require('./soft-max');\nconst { SVM, svm } = require('./svm');\nconst { Tanh, tanh } = require('./tanh');\nconst { Target, target } = require('./target');\nconst { Transpose, transpose } = require('./transpose');\nconst { Zeros, zeros } = require('./zeros');\n\n/**\n * @description Layer API, to make it easier to use layers for the world\n */\nmodule.exports = {\n  Add,\n  add,\n  arthurFeedForward,\n  Base,\n  Convolution,\n  convolution,\n  Dropout,\n  dropout,\n  feedForward,\n  FullyConnected,\n  fullyConnected,\n  gru,\n  Input,\n  input,\n  LeakyRelu,\n  leakyRelu,\n  lstm,\n  Multiply,\n  multiply,\n  MultiplyElement,\n  multiplyElement,\n  Negative,\n  negative,\n  Ones,\n  ones,\n  output,\n  Pool,\n  pool,\n  Random,\n  random,\n  recurrent,\n  Regression,\n  regression,\n  Relu,\n  relu,\n  Sigmoid,\n  sigmoid,\n  SoftMax,\n  softMax,\n  SVM,\n  svm,\n  Tanh,\n  tanh,\n  Target,\n  target,\n  Transpose,\n  transpose,\n  Zeros,\n  zeros,\n};\n","/**\n *\n * @param {*} input\n * @param {brain.NeuralNetwork} net\n * @returns {*}\n */\nmodule.exports = function likely(input, net) {\n  const output = net.run(input);\n  let maxProp = null;\n  let maxValue = -1;\n\n  Object.keys(output).forEach(key => {\n    const value = output[key];\n    if (value > maxValue) {\n      maxProp = key;\n      maxValue = value;\n    }\n  });\n\n  return maxProp;\n};\n","/* Functions for turning sparse hashes into arrays and vice versa */\nclass lookup {\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} hashes\n   * @returns {Object}\n   */\n  static toTable(hashes) {\n    const hash = hashes.reduce((memo, hash) => {\n      return Object.assign(memo, hash);\n    }, {});\n\n    return lookup.toHash(hash);\n  }\n\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} objects2D\n   * @returns {Object}\n   */\n  static toTable2D(objects2D) {\n    const table = {};\n    let valueIndex = 0;\n    for (let i = 0; i < objects2D.length; i++) {\n      const objects = objects2D[i];\n      for (let j = 0; j < objects.length; j++) {\n        const object = objects[j];\n        for (const p in object) {\n          if (object.hasOwnProperty(p) && !table.hasOwnProperty(p)) {\n            table[p] = valueIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  static toInputTable(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      for (let p in data[dataIndex].input) {\n        if (!table.hasOwnProperty(p)) {\n          table[p] = tableIndex++;\n        }\n      }\n    }\n    return table;\n  }\n\n  static toInputTable2D(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const input = data[dataIndex].input;\n      for (let i = 0; i < input.length; i++) {\n        const object = input[i];\n        for (let p in object) {\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  static toOutputTable(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      for (let p in data[dataIndex].output) {\n        if (!table.hasOwnProperty(p)) {\n          table[p] = tableIndex++;\n        }\n      }\n    }\n    return table;\n  }\n\n  static toOutputTable2D(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const output = data[dataIndex].output;\n      for (let i = 0; i < output.length; i++) {\n        const object = output[i];\n        for (let p in object) {\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  /**\n   * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\n   * @param {Object} hash\n   * @returns {Object}\n   */\n  static toHash(hash) {\n    let lookup = {};\n    let index = 0;\n    for (let i in hash) {\n      lookup[i] = index++;\n    }\n    return lookup;\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\n   * @param {*} lookup\n   * @param {*} object\n   * @param {*} arrayLength\n   * @returns {Float32Array}\n   */\n  static toArray(lookup, object, arrayLength) {\n    const result = new Float32Array(arrayLength);\n    for (let p in lookup) {\n      result[lookup[p]] = object.hasOwnProperty(p) ? object[p] : 0;\n    }\n    return result;\n  }\n\n  static toArrayShort(lookup, object) {\n    const result = [];\n    for (let p in lookup) {\n      if (!object.hasOwnProperty(p)) break;\n      result[lookup[p]] = object[p];\n    }\n    return Float32Array.from(result);\n  }\n\n  static toArrays(lookup, objects, arrayLength) {\n    const result = [];\n    for (let i = 0; i < objects.length; i++) {\n      result.push(this.toArray(lookup, objects[i], arrayLength));\n    }\n    return result;\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\n   * @param {Object} lookup\n   * @param {Array} array\n   * @returns {Object}\n   */\n  static toObject(lookup, array) {\n    const object = {};\n    for (let p in lookup) {\n      object[p] = array[lookup[p]];\n    }\n    return object;\n  }\n\n  static toObjectPartial(lookup, array, offset = 0, limit = 0) {\n    const object = {};\n    let i = 0;\n    for (let p in lookup) {\n      if (offset > 0) {\n        if (i++ < offset) continue;\n      }\n      if (limit > 0) {\n        if (i++ >= limit) continue;\n      }\n      object[p] = array[lookup[p] - offset];\n    }\n    return object;\n  }\n\n  /**\n   *\n   * @param {Array} array\n   * @returns {*}\n   */\n  static lookupFromArray(array) {\n    let lookup = {};\n    let z = 0;\n    let i = array.length;\n    while (i-- > 0) {\n      lookup[array[i]] = z++;\n    }\n    return lookup;\n  }\n\n  static dataShape(data) {\n    const shape = [];\n\n    if (data.input) {\n      shape.push('datum');\n      data = data.input;\n    } else if (Array.isArray(data)) {\n      if (data[0].input) {\n        shape.push('array', 'datum');\n        data = data[0].input;\n      } else {\n        shape.push('array');\n        data = data[0];\n      }\n    }\n\n    let p;\n    while (data) {\n      for (p in data) { break; }\n      if (!data.hasOwnProperty(p)) break;\n      if (Array.isArray(data) || data.buffer instanceof ArrayBuffer) {\n        shape.push('array');\n        data = data[p];\n      } else if (typeof data === 'object') {\n        shape.push('object');\n        data = data[p];\n      } else {\n        throw new Error('unhandled signature');\n      }\n    }\n    shape.push(typeof data);\n    return shape;\n  }\n\n  static addKeys(value, table) {\n    if (Array.isArray(value)) return;\n    table = table || {};\n    let i = Object.keys(table).length;\n    for (const p in value) {\n      if (!value.hasOwnProperty(p)) continue;\n      if (table.hasOwnProperty(p)) continue;\n      table[p] = i++;\n    }\n    return table;\n  }\n}\n\nmodule.exports = lookup;\n","// TODO: implement and test\nclass Adam {}\n\nfunction adam() {\n  // gradient = grad_fun(theta)\n  //\n  //           # Update moment estimates\n  // moment1 = beta1 * moment1 + (1 - beta1) * gradient\n  // moment2 = beta2 * moment2 + (1 - beta2) * np.square(gradient)\n  //\n  //           # Yield adapted gradient\n  // theta = ( theta - alpha * (1 - beta2**t)**0.5 / (1 - beta1**t) *\n  //   moment1 / (epsilon + np.sqrt(moment2)) )\n  // yield theta\n  // t += 1\n  // adam update\n  // gsumi[j] = gsumi[j] * this.beta1 + (1- this.beta1) * gij; // update biased first moment estimate\n  // xsumi[j] = xsumi[j] * this.beta2 + (1-this.beta2) * gij * gij; // update biased second moment estimate\n  // var biasCorr1 = gsumi[j] * (1 - Math.pow(this.beta1, this.k)); // correct bias first moment estimate\n  // var biasCorr2 = xsumi[j] * (1 - Math.pow(this.beta2, this.k)); // correct bias second moment estimate\n  // var dx =  - this.learning_rate * biasCorr1 / (Math.sqrt(biasCorr2) + this.eps);\n  // p[j] += dx;\n}\n\nmodule.exports = {\n  Adam, adam\n};\n","const { makeKernel, release } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\n\nconst { Base } = require('./base');\n\nfunction getMomentum(delta, decay, previousMomentum) {\n  return previousMomentum * decay + (1 - decay) * delta * delta;\n}\n\nfunction clipByValue(value, max, min) {\n  if (value > max) {\n    return max;\n  }\n  if (value < min) {\n    return min;\n  }\n  return value;\n}\n\n/**\n * @description Momentum Root Mean Square Propagation Function\n * @returns {number}\n */\nfunction update(\n  weights,\n  deltas,\n  previousMomenta\n) {\n  const delta = deltas[this.thread.y][this.thread.x];\n  const clippedDelta = clipByValue(\n    delta,\n    this.constants.clipValue,\n    -this.constants.clipValue\n  );\n  const weight = weights[this.thread.y][this.thread.x];\n  const previousMomentum = previousMomenta[this.thread.y][this.thread.x];\n  const momentum = getMomentum(\n    delta,\n    this.constants.decayRate,\n    previousMomentum\n  );\n  return (\n    weight +\n    (-this.constants.learningRate * clippedDelta) /\n      Math.sqrt(momentum + this.constants.smoothEps) -\n    this.constants.regularizationStrength * weight\n  );\n}\n\nfunction isClippedByValue(value, max, min) {\n  if (value > max) {\n    return 1;\n  }\n  if (value < min) {\n    return 1;\n  }\n  return 0;\n}\n\nclass MomentumRootMeanSquaredPropagation extends Base {\n  static get defaults() {\n    return {\n      decayRate: 0.999,\n      regularizationStrength: 0.0001,\n      learningRate: 0.01,\n      smoothEps: 1e-8,\n      clipValue: 5\n    };\n  }\n\n  constructor(layerTemplate, settings = {}) {\n    super(layerTemplate, settings);\n    this.momenta = zeros2D(layerTemplate.width, layerTemplate.height);\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const { momenta, result } = this.kernel(layer.weights, layer.deltas, this.momenta);\n    release(this.momenta);\n    this.momenta = momenta;\n    return result;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        clipValue: this.clipValue,\n        decayRate: this.decayRate,\n        learningRate: this.learningRate,\n        regularizationStrength: this.regularizationStrength,\n        smoothEps: this.smoothEps,\n      },\n      functions: [clipByValue],\n      map: {\n        momenta: getMomentum,\n      },\n    });\n  }\n}\n\nfunction momentumRootMeanSquaredPropagation(layer, settings) {\n  return new MomentumRootMeanSquaredPropagation(layer, settings);\n}\n\n/**\n * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\n * @type {MomentumRootMeanSquaredPropagation}\n */\nconst MRmsProp = MomentumRootMeanSquaredPropagation;\nconst mRmsProp = momentumRootMeanSquaredPropagation;\n\nmodule.exports = {\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp,\n  getMomentum, clipByValue, isClippedByValue\n};\n","const { Adam, adam } = require('./adam');\nconst { ArthurDeviationBiases, arthurDeviationBiases } = require('./arthur-deviation-biases');\nconst { ArthurDeviationWeights, arthurDeviationWeights } = require('./arthur-deviation-weights');\nconst {\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp\n} = require('./momentum-root-mean-squared-propagation');\n\nmodule.exports = {\n  Adam, adam,\n  ArthurDeviationBiases, arthurDeviationBiases,\n  ArthurDeviationWeights, arthurDeviationWeights,\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp,\n};\n","module.exports = function mse2d(errors) {\n  // mean squared error 2d\n  let sum = 0;\n  for (let y = 0; y < this.constants.height; y++) {\n    for (let x = 0; x < this.constants.width; x++) {\n      sum += errors[y][x] ** 2;\n    }\n  }\n  return sum / this.constants.length;\n};\n","const layer = require('../layer');\n\nmodule.exports = function layerFromJSON(jsonLayer) {\n  if (!layer.hasOwnProperty(jsonLayer.type)) return null;\n  const Layer = layer[jsonLayer.type];\n\n  // eslint-disable-next-line\n  const realLayer = Reflect.construct(Layer, arguments)\n\n  Object.keys(jsonLayer).forEach(p => {\n    if (p !== 'type') {\n      realLayer[p] = jsonLayer[p];\n    }\n  });\n\n  return realLayer;\n}\n","module.exports = function traverseLayersFrom(layer, cb) {\n  if (layer.hasOwnProperty('inputLayer')) {\n    traverseLayersFrom(layer.inputLayer, cb);\n  } else {\n    if (layer.hasOwnProperty('inputLayer1')) {\n      traverseLayersFrom(layer.inputLayer1, cb);\n    }\n    if (layer.hasOwnProperty('inputLayer2')) {\n      traverseLayersFrom(layer.inputLayer2, cb);\n    }\n  }\n  cb(layer);\n}\n","const traverseLayersFrom = require('./traverse-layers-from');\n\nmodule.exports = function flattenLayers(layers) {\n  const result = layers.slice(0);\n  for (let i = 0; i < result.length; i++) {\n    let offset = 0;\n    traverseLayersFrom(result[i], layer => {\n      if (result.indexOf(layer) === -1) {\n        result.splice(i + offset, 0, layer);\n        offset++;\n      }\n    });\n  }\n  return result;\n}\n","const lookup = require('./lookup');\nconst mse2d = require('./utilities/mse-2d');\nconst layerFromJSON = require('./utilities/layer-from-json');\nconst praxis = require('./praxis');\nconst flattenLayers = require('./utilities/flatten-layers');\nconst { makeKernel, release } = require('./utilities/kernel');\n\nclass FeedForward {\n  static get trainDefaults() {\n    return {\n      iterations: 20000,\n      errorThresh: 0.005,\n      log: false,\n      logPeriod: 10,\n      learningRate: 0.3,\n      callback: null,\n      callbackPeriod: 10,\n      errorCheckInterval: 100,\n      reinforce: false,\n    };\n  }\n\n  static get defaults() {\n    return {\n      learningRate: 0.3,\n      binaryThresh: 0.5,\n      hiddenLayers: null,\n      inputLayer: null,\n      outputLayer: null,\n      praxisOpts: null,\n      praxis: (layer, settings) => praxis.momentumRootMeanSquaredPropagation(layer, layer.praxisOpts || settings),\n    };\n  }\n\n  /**\n   *\n   * @param options\n   * @private\n   */\n  static _validateTrainingOptions(options) {\n    const validations = {\n      iterations: val => typeof val === 'number' && val > 0,\n      errorThresh: val => typeof val === 'number' && val > 0 && val < 1,\n      log: val => typeof val === 'function' || typeof val === 'boolean',\n      logPeriod: val => typeof val === 'number' && val > 0,\n      learningRate: val => typeof val === 'number' && val > 0 && val < 1,\n      callback: val => typeof val === 'function' || val === null,\n      callbackPeriod: val => typeof val === 'number' && val > 0,\n      timeout: val => typeof val === 'number' && val > 0,\n    };\n    Object.keys(FeedForward.trainDefaults).forEach(key => {\n      if (validations.hasOwnProperty(key) && !validations[key](options[key])) {\n        throw new Error(\n          `[${key}, ${\n            options[key]\n          }] is out of normal training range, your network will probably not train.`\n        );\n      }\n    });\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  _setLogMethod(log) {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      // eslint-disable-next-line\n      this.trainOpts.log = console.log\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param opts\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number)\n   */\n  _updateTrainingOptions(opts) {\n    Object.keys(this.constructor.trainDefaults).forEach(opt => {\n      this.trainOpts[opt] = opts.hasOwnProperty(opt)\n        ? opts[opt]\n        : this.trainOpts[opt];\n    });\n    this.constructor._validateTrainingOptions(this.trainOpts);\n    this._setLogMethod(opts.log || this.trainOpts.log);\n  }\n\n  static get structure() {\n    return {\n      layers: null,\n      _inputLayer: null,\n      _outputLayer: null,\n    };\n  }\n\n  /**\n   *\n   * @param {object} options\n   * @constructor\n   */\n  constructor(options = {}) {\n    this.layers = null;\n    this.inputLayer = null;\n    this.hiddenLayers = null;\n    this.outputLayer = null;\n    this.praxisOpts = null;\n    this.praxis = null;\n    Object.assign(this, this.constructor.defaults, options);\n    this.trainOpts = {};\n    this._updateTrainingOptions(\n      Object.assign({}, this.constructor.trainDefaults, options)\n    );\n    Object.assign(this, this.constructor.structure);\n    this._inputLayer = null;\n    this._hiddenLayers = null;\n    this._outputLayer = null;\n  }\n\n  _connectLayers() {\n    const layers = [];\n    this._inputLayer = this.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(this._inputLayer);\n    this._outputLayer = this.outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      hiddenLayers.length\n    );\n    layers.push(this._inputLayer);\n    layers.push(...hiddenLayers);\n    layers.push(this._outputLayer);\n    this.layers = flattenLayers(layers);\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    this._hiddenLayers = [];\n    const hiddenLayers = [];\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, i);\n      hiddenLayers.push(hiddenLayer);\n      this._hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n    }\n    return hiddenLayers;\n  }\n\n  initialize() {\n    this._connectLayers();\n    this.initializeLayers(this.layers);\n  }\n\n  initializeLayers(layers) {\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      // TODO: optimize for when training or just running\n      layer.setupKernels(true);\n      if (layer.hasOwnProperty('praxis') && layer.praxis === null) {\n        layer.praxis = this.praxis(layer, layer.praxisOpts || this.praxisOpts);\n      }\n    }\n\n    this._getMSE = makeKernel(mse2d, {\n      output: [1],\n      constants: {\n        width: this._outputLayer.width,\n        height: this._outputLayer.height,\n        length: this._outputLayer.width * this._outputLayer.height,\n      }\n    });\n    this._addMSE = makeKernel(function(value1, value2) {\n      return value1[0] + value2[0];\n    }, {\n      output: [1]\n    });\n    this._divideMSESum = makeKernel(function(length, mseSum) {\n      const value = mseSum[0];\n      if (value > 0) {\n        return value / length;\n      }\n      return 0;\n    }, {\n      output: [1]\n    });\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input);\n    }\n\n    let output = this.runInput(input);\n\n    if (output.toArray) {\n      output = output.toArray();\n    }\n\n    if (this.outputLookup) {\n      output = lookup.toHash(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  runInput(input) {\n    this.layers[0].predict(input);\n    for (let i = 1; i < this.layers.length; i++) {\n      this.layers[i].predict();\n    }\n    return this.layers[this.layers.length - 1].weights;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    let status;\n    let endTime;\n    ({ data, status, endTime } = this._prepTraining(data, options));\n\n    while (this._trainingTick(data, status, endTime));\n    return status;\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param {Number} endTime\n   */\n  _trainingTick(data, status, endTime) {\n    if (\n      status.iterations >= this.trainOpts.iterations ||\n      status.error <= this.trainOpts.errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (\n      this.trainOpts.log &&\n      status.iterations % this.trainOpts.logPeriod === 0\n    ) {\n      status.error = this._calculateTrainingError(data);\n      this.trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      );\n    } else if (status.iterations % this.trainOpts.errorCheckInterval === 0) {\n      status.error = this._calculateTrainingError(data);\n    } else {\n      this._trainPatterns(data);\n    }\n\n    if (\n      this.trainOpts.callback &&\n      status.iterations % this.trainOpts.callbackPeriod === 0\n    ) {\n      this.trainOpts.callback(Object.assign(status));\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  _prepTraining(data, options) {\n    this._updateTrainingOptions(options);\n    if (this.trainOpts.callback && this.trainOpts.callbackPeriod !== this.trainOpts.errorCheckInterval) {\n      console.warn(`options.callbackPeriod with value of ${ this.trainOpts.callbackPeriod } does not match options.errorCheckInterval with value of ${ this.trainOpts.errorCheckInterval }, if logging error, it will repeat.  These values may need to match`);\n    }\n    const formattedData = this._formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    if (!options.reinforce) {\n      this.initialize();\n    }\n\n    const transferredData = new Array(formattedData.length);\n    const transferInput = makeKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      output: [formattedData[0].input.length]\n    });\n    const transferOutput = makeKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      output: [formattedData[0].output.length]\n    });\n\n    for (let i = 0; i < formattedData.length; i++) {\n      const formattedDatum = formattedData[i];\n      transferredData[i] = {\n        input: transferInput(formattedDatum.input),\n        output: transferOutput(formattedDatum.output),\n      };\n    }\n\n    return {\n      data: transferredData,\n      status,\n      endTime,\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  // _calculateTrainingError(data) {\n  //   let sum = 0;\n  //   for (let i = 0; i < data.length; ++i) {\n  //     sum += this._trainPattern(data[i].input, data[i].output, true);\n  //   }\n  //   return sum / data.length;\n  // }\n  _calculateTrainingError(data) {\n    let sum = new Float32Array([0]);\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this._trainPattern(data[i].input, data[i].output, true);\n      sum = this._addMSE(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this._divideMSESum(data.length, sum);\n    release(sum);\n    if (result.toArray) {\n      const resultArray = result.toArray();\n      release(result);\n      return resultArray[0];\n    }\n    return result;\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false);\n    }\n  }\n\n  /**\n   *\n   * @param input\n   * @param target\n   * @param {Boolean} logErrorRate\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return this._getMSE(this._outputLayer.errors);\n    }\n    return null;\n  }\n\n  _calculateDeltas(target) {\n    for (let i = this.layers.length - 1; i > -1; i--) {\n      this.layers[i].compare(target);\n    }\n  }\n\n  /**\n   *\n   */\n  adjustWeights() {\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].learn(\n        this.layers[i - 1],\n        this.layers[i + 1],\n        this.trainOpts.learningRate\n      );\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  _formatData(data) {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = [];\n      tmp.push(data);\n      data = tmp;\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    const inputDatumCheck = data[0].input;\n    if (!Array.isArray(inputDatumCheck) && !(inputDatumCheck instanceof Float32Array)) {\n      if (!this.inputLookup) {\n        this.inputLookup = lookup.buildLookup(data.map(value => value.input));\n      }\n      data = data.map(datumParam => {\n        const array = lookup.toArray(this.inputLookup, datumParam.input);\n        return Object.assign({}, datumParam, { input: array });\n      }, this);\n    }\n\n    const outputDatumCheck = data[0].output;\n    if (!Array.isArray(outputDatumCheck) && !(outputDatumCheck instanceof Float32Array)) {\n      if (!this.outputLookup) {\n        this.outputLookup = lookup.buildLookup(data.map(value => value.output));\n      }\n      data = data.map(datumParam => {\n        const array = lookup.toArray(this.outputLookup, datumParam.output);\n        return Object.assign({}, datumParam, { output: array });\n      }, this);\n    }\n    return data;\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test() {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`);\n  }\n\n  /**\n   *\n   */\n  toJSON() {\n    if (!this.layers) {\n      this.initialize();\n    }\n    const jsonLayers = [];\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      const jsonLayer = layer.toJSON();\n      if (layer.hasOwnProperty('inputLayer')) {\n        jsonLayer.inputLayerIndex = this.layers.indexOf(layer.inputLayer);\n      } else if (\n        layer.hasOwnProperty('inputLayer1') &&\n        layer.hasOwnProperty('inputLayer2')\n      ) {\n        jsonLayer.inputLayer1Index = this.layers.indexOf(layer.inputLayer1);\n        jsonLayer.inputLayer2Index = this.layers.indexOf(layer.inputLayer2);\n      }\n      jsonLayers.push(jsonLayer);\n    }\n\n    return {\n      type: this.constructor.name,\n      sizes: [this._inputLayer.height]\n        .concat(this._hiddenLayers.map(l => l.height))\n        .concat([this._outputLayer.height]),\n      layers: jsonLayers,\n    };\n  }\n\n  /**\n   *\n   * @param json\n   * @param [getLayer]\n   * @returns {FeedForward}\n   */\n  static fromJSON(json, getLayer) {\n    const jsonLayers = json.layers;\n    const layers = [];\n    const inputLayer = layerFromJSON(jsonLayers[0]) || getLayer(jsonLayers[0]);\n    layers.push(inputLayer);\n\n    for (let i = 1; i < jsonLayers.length; i++) {\n      const jsonLayer = jsonLayers[i];\n      if (jsonLayer.hasOwnProperty('inputLayerIndex')) {\n        const inputLayer1 = layers[jsonLayer.inputLayerIndex];\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer1) ||\n            getLayer(jsonLayer, inputLayer1)\n        );\n      } else {\n        if (!jsonLayer.hasOwnProperty('inputLayer1Index'))\n          throw new Error('inputLayer1Index not defined');\n        if (!jsonLayer.hasOwnProperty('inputLayer2Index'))\n          throw new Error('inputLayer2Index not defined');\n        const inputLayer1 = layers[jsonLayer.inputLayer1Index];\n        const inputLayer2 = layers[jsonLayer.inputLayer2Index];\n\n        if (inputLayer1 === undefined)\n          throw new Error(\n            `layer of index ${jsonLayer.inputLayer1Index} not found`\n          );\n        if (inputLayer2 === undefined)\n          throw new Error(\n            `layer of index ${jsonLayer.inputLayer2Index} not found`\n          );\n\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer) ||\n            getLayer(jsonLayer, inputLayer1, inputLayer2)\n        );\n      }\n    }\n\n    const net = new FeedForward(json);\n    net.layers = layers;\n    return net;\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  /**\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\n   * @param opts training options\n   * @returns {TrainStream|*}\n   */\n  createTrainStream() {\n    throw new Error(\n      `${this.constructor.name}-createTrainStream is not yet implemented`\n    );\n  }\n}\n\nmodule.exports = {\n  FeedForward\n};\n","//private variables\nlet thawing = false;\nlet thaws = [];\n\n/**\n * thaw an array of items\n * @param {Array} items\n * @param {Object} [options]\n * @constructor\n */\nexport default class Thaw {\n  /**\n   *\n   * @type {{each: null, done: null}}\n   */\n  static get defaultSettings() {\n    return {\n      each: null,\n      done: null\n    };\n  }\n\n  /**\n   * returns if Thaw.js is thawing\n   * @returns {boolean}\n   */\n  static get isThawing() {\n    return thawing;\n  }\n\n  /**\n   * Stops all Thaw instances\n   */\n  static stopAll() {\n    for(let i = 0;i< thaws.length; i++) {\n      thaws[i].stop();\n    }\n  }\n\n  constructor(items, options = {}) {\n    const { each, done } = {...this.constructor.defaultSettings, ...options};\n    this.items = items;\n    this.i = 0;\n    this.options = options;\n    const tick = this.tick = () => {\n      if (this.i < 0) return;\n\n      this.timeout = setTimeout(tick, 0);\n\n      if (thawing) return;\n      const item = items[this.i];\n      if (this.i >= items.length) {\n        if (done !== null) {\n          thawing = true;\n          done(item, this.i);\n          thawing = false;\n        }\n\n        this.i = -1;\n        clearTimeout(this.timeout);\n        return;\n      }\n      if (each !== null) {\n        thawing = true;\n        each(item, this.i);\n        thawing = false;\n      } else if (item !== undefined) {\n        item();\n      }\n      this.i++;\n    };\n\n    thaws.push(this);\n    if (!options.delay) {\n      tick();\n    }\n  }\n\n  /**\n   * readies thaw to continue\n   * @returns {boolean} if had to get ready\n   */\n  makeReady() {\n    if (this.i < 0) {\n      this.i = this.items.length;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n   * @param item\n   * @returns {Thaw}\n   */\n  add(item) {\n    const doTick = this.makeReady();\n\n    this.items.push(item);\n\n    if (doTick) {\n      this.tick();\n    }\n    return this;\n  }\n\n  /**\n   * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n   * @param item\n   * @returns {Thaw}\n   */\n  insert(item) {\n    const doTick = this.makeReady();\n\n    this.items.splice(this.i, 0, item);\n\n    if (doTick) {\n      this.tick();\n    }\n\n    return this;\n  }\n\n  /**\n   * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n   * @param {Array} items\n   * @returns {Thaw}\n   */\n  addArray(items) {\n    const doTick = this.makeReady();\n\n    this.items = this.items.concat(items);\n\n    if (doTick) {\n      this.tick();\n    }\n\n    return this;\n  }\n\n  /**\n   * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n   * @param {Array} items\n   * @returns {Thaw}\n   */\n  insertArray(items) {\n    const doTick = this.makeReady();\n    const left = this.items;\n    const middle = items;\n    const right = this.items.splice(this.i, (this.items.length - this.i) + 1);\n\n    this.items = left.concat(middle, right);\n\n    if (doTick) {\n      this.tick();\n    }\n    return this;\n  }\n\n  /**\n   * Stops this instance of Thaw\n   * @returns {Thaw}\n   */\n  stop() {\n    this.i = -1;\n    clearTimeout(this.timeout);\n    if (this.options.done) {\n      this.options.done();\n    }\n    return this;\n  }\n}\n\n/**\n * simple thaw\n * @param {Array} items\n * @param {Object} [options]\n * @returns Thaw\n */\nexport function thaw(items, options = {}) {\n  return new Thaw(items, options);\n}","import Thaw from './';\n\n/**\n *\n * @param {Object} [options]\n * @param {Number} [count]\n * @constructor\n */\nexport default class Block {\n  constructor(options, count) {\n    this.index = 0;\n    this.thaws = [];\n    this.count = count || 200;\n    this.options = options;\n  }\n\n  /**\n   * add an item to the end of items\n   * @param item\n   * @returns {Block}\n   */\n  add(item) {\n    const next = this._next();\n    next.add(item);\n\n    return this;\n  }\n\n  /**\n   * add an Array to the end of items\n   * @param items\n   * @returns {Block}\n   */\n  addArray(items) {\n    const next = this._next();\n    next.addArray(items);\n\n    return this;\n  }\n\n  /**\n   * insert an item into items @ current position\n   * @param item\n   * @returns {Block}\n   */\n  insert(item) {\n    const next = this._next();\n    next.insert(item);\n\n    return this;\n  }\n\n  /**\n   * insert and array into items @ current position\n   * @param items\n   * @returns {Block}\n   */\n  insertArray(items) {\n    const next = this._next();\n    next.insertArray(items);\n\n    return this;\n  }\n\n  /**\n   * Stops all thaws in this block\n   * @returns {Block}\n   */\n  stop() {\n    for (let i = 0;i < this.thaws.length;i++) {\n      this.thaws[i].stop();\n    }\n    return this;\n  }\n\n  /**\n   * Get next available in block\n   * @returns {*}\n   * @private\n   */\n  _next() {\n    let thaw = null;\n    const thaws = this.thaws;\n\n    if (thaws.length < this.count) {\n      thaws.push(thaw = new Thaw([], this.options));\n    } else {\n      thaw = thaws[this.index];\n    }\n    this.index++;\n    if (this.index >= this.count) {\n      this.index = 0;\n    }\n\n    return thaw;\n  }\n};","const activation = require('./activation');\nconst CrossValidate = require('./cross-validate');\nconst layer = require('./layer');\nconst layerTypes = require('./layer/types');\nconst likely = require('./likely');\nconst lookup = require('./lookup');\nconst praxis = require('./praxis');\nconst { FeedForward } = require('./feed-forward');\nconst NeuralNetwork = require('./neural-network');\nconst NeuralNetworkGPU = require('./neural-network-gpu');\nconst TrainStream = require('./train-stream');\nconst { Recurrent } = require('./recurrent');\nconst RNNTimeStep = require('./recurrent/rnn-time-step');\nconst LSTMTimeStep = require('./recurrent/lstm-time-step');\nconst GRUTimeStep = require('./recurrent/gru-time-step');\nconst RNN = require('./recurrent/rnn');\nconst LSTM = require('./recurrent/lstm');\nconst GRU = require('./recurrent/gru');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst ones = require('./utilities/ones');\nconst random = require('./utilities/random');\nconst randomWeight = require('./utilities/random-weight');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst DataFormatter = require('./utilities/data-formatter');\nconst zeros = require('./utilities/zeros');\nconst toSVG = require('./utilities/to-svg');\n\nconst brain = {\n  activation,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n    toSVG,\n  },\n};\n\nif (typeof window !== 'undefined') {\n  window.brain = brain //eslint-disable-line\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = brain;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('events').EventEmitter;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","const { Writable } = require('stream');\n\n/**\n *\n * @param opts\n * @returns {TrainStream}\n * @constructor\n */\nclass TrainStream extends Writable {\n  constructor(options) {\n    super({\n      objectMode: true\n    });\n\n    options = options || {};\n\n    // require the neuralNetwork\n    if (!options.neuralNetwork) {\n      throw new Error('no neural network specified');\n    }\n\n    const { neuralNetwork } = options;\n    this.neuralNetwork = neuralNetwork;\n    this.dataFormatDetermined = false;\n    this.i = 0; // keep track of internal iterations\n    this.size = 0;\n    this.count = 0;\n    this.sum = 0;\n    this.floodCallback = options.floodCallback;\n    this.doneTrainingCallback = options.doneTrainingCallback;\n\n    // inherit trainOpts settings from neuralNetwork\n    neuralNetwork.updateTrainingOptions(options);\n    const { trainOpts } = neuralNetwork;\n    this.iterations = trainOpts.iterations;\n    this.errorThresh = trainOpts.errorThresh;\n    this.log = trainOpts.log;\n    this.logPeriod = trainOpts.logPeriod;\n    this.callbackPeriod = trainOpts.callbackPeriod;\n    this.callback = trainOpts.callback;\n\n    this.on('finish', this.finishStreamIteration.bind(this));\n  }\n\n  endInputs() {\n    this.write(false);\n  }\n\n  /**\n   * _write expects data to be in the form of a datum. ie. {input: {a: 1 b: 0}, output: {z: 0}}\n   * @param chunk\n   * @param enc\n   * @param next\n   * @returns {*}\n   * @private\n   */\n  _write(chunk, enc, next) {\n    if (!chunk) {\n      // check for the end of one iteration of the stream\n      this.emit('finish');\n      return next();\n    }\n\n    if (!this.dataFormatDetermined) {\n      this.size++;\n      this.neuralNetwork.addFormat(chunk);\n      this.firstDatum = this.firstDatum || chunk;\n      return next();\n    }\n\n    this.count++;\n\n    const data = this.neuralNetwork.formatData(chunk);\n    this.sum += this.neuralNetwork.trainPattern(data[0], true);\n\n    // tell the Readable Stream that we are ready for more data\n    next();\n  }\n\n  /**\n   *\n   * @returns {*}\n   */\n  finishStreamIteration() {\n    if (this.dataFormatDetermined && this.size !== this.count) {\n      this.log('This iteration\\'s data length was different from the first.');\n    }\n\n    if (!this.dataFormatDetermined) {\n      const data = this.neuralNetwork.formatData(this.firstDatum);\n      this.neuralNetwork.verifyIsInitialized(data);\n      this.dataFormatDetermined = true;\n\n      if (typeof this.floodCallback === 'function') {\n        this.floodCallback();\n      }\n      return;\n    }\n\n    const error = this.sum / this.size;\n\n    if (this.log && (this.i % this.logPeriod === 0)) {\n      this.log(`iterations: ${ this.i}, training error: ${ error }`);\n    }\n    if (this.callback && (this.i % this.callbackPeriod === 0)) {\n      this.callback({\n        error: error,\n        iterations: this.i\n      });\n    }\n\n    this.sum = 0;\n    this.count = 0;\n    // update the iterations\n    this.i++;\n\n    // do a check here to see if we need the stream again\n    if (this.i < this.iterations && error > this.errorThresh) {\n      if (typeof this.floodCallback === 'function') {\n        return this.floodCallback();\n      }\n    } else {\n      // done training\n      if (typeof this.doneTrainingCallback === 'function') {\n        return this.doneTrainingCallback({\n          error: error,\n          iterations: this.i\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = TrainStream;\n","/**\n *\n * @param values\n * @returns {*}\n */\nmodule.exports = function toArray(values) {\n  if (Array.isArray(values)) {\n    return values;\n  }\n  return new Float32Array(Object.values(values));\n};\n","const toArray = require('./to-array');\n/**\n *\n * @param values\n * @returns {number}\n */\nmodule.exports = function max(values) {\n  return Math.max(...toArray(values));\n}\n","module.exports = function mse(errors) {\n  // mean squared error\n  let sum = 0;\n  for (let i = 0; i < errors.length; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / errors.length;\n};\n","/**\n *\n * @param start\n * @param end\n * @returns {Array}\n */\nmodule.exports = function range(start, end) {\n  const result = [];\n  for (; start < end; start++) {\n    result.push(start);\n  }\n  return result;\n}\n","function LookupTable(data, prop) {\n  this.length = 0;\n  if (prop) {\n    this.prop = prop;\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      const object = datum[prop];\n      for (let p in object) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  } else if (Array.isArray(data[0])) {\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const array = data[i];\n      for (let j = 0; j < array.length; j++) {\n        const object = array[j];\n        for (let p in object) {\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    }\n  } else {\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const object = data[i];\n      for (let p in object) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  }\n}\n\nmodule.exports = LookupTable;\n","function arraysToFloat32Arrays(arrays) {\n  const result = [];\n  for (let i = 0; i < arrays.length; i++) {\n    result.push(Float32Array.from(arrays[i]));\n  }\n  return result;\n}\nfunction arrayToFloat32Arrays(array) {\n  const result = [];\n  for (let i = 0; i < array.length; i++) {\n    result.push(Float32Array.from([array[i]]));\n  }\n  return result;\n}\nfunction arrayToFloat32Array(array) {\n  return Float32Array.from(array)\n}\nfunction objectsToFloat32Arrays(objects, table, length) {\n  const results = [];\n  for (let i = 0; i < objects.length; i++) {\n    const object = objects[i];\n    const result = new Float32Array(length);\n    for (let p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[table[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\nfunction objectToFloat32Arrays(object) {\n  const result = [];\n  for (let p in object) {\n    result.push(Float32Array.from([object[p]]));\n  }\n  return result;\n}\nfunction objectToFloat32Array(object, table, length) {\n  const result = new Float32Array(length);\n  for (let p in object) {\n    if (object.hasOwnProperty(p)) {\n      result[table[p]] = object[p];\n    }\n  }\n  return result;\n}\n\nmodule.exports = {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  arrayToFloat32Array,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array,\n};\n","const Thaw = require('thaw.js').default;\nconst lookup = require('./lookup');\nconst TrainStream = require('./train-stream');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst zeros = require('./utilities/zeros');\nconst LookupTable = require('./utilities/lookup-table');\nconst { arrayToFloat32Array } = require('./utilities/cast');\n\n/**\n * @param {object} options\n * @constructor\n */\nclass NeuralNetwork {\n  static get trainDefaults() {\n    return {\n      iterations: 20000,    // the maximum times to iterate the training data\n      errorThresh: 0.005,   // the acceptable error percentage from training data\n      log: false,           // true to use console.log, when a function is supplied it is used\n      logPeriod: 10,        // iterations between logging out\n      learningRate: 0.3,    // multiply's against the input and the delta then adds to momentum\n      momentum: 0.1,        // multiply's against the specified \"change\" then adds to learning rate for change\n      callback: null,       // a periodic call back that can be triggered while training\n      callbackPeriod: 10,   // the number of iterations through the training data between callback calls\n      timeout: Infinity,    // the max number of milliseconds to train for\n      praxis: null,\n      beta1: 0.9,\n      beta2: 0.999,\n      epsilon: 1e-8,\n    };\n  }\n\n  static get defaults() {\n    return {\n      leakyReluAlpha: 0.01,\n      binaryThresh: 0.5,\n      hiddenLayers: null,     // array of ints for the sizes of the hidden layers in the network\n      activation: 'sigmoid'  // Supported activation types ['sigmoid', 'relu', 'leaky-relu', 'tanh']\n    };\n  }\n\n  constructor(options = {}) {\n    Object.assign(this, this.constructor.defaults, options);\n    this.trainOpts = {};\n    this.updateTrainingOptions(Object.assign({}, this.constructor.trainDefaults, options));\n\n    this.sizes = null;\n    this.outputLayer = null;\n    this.biases = null; // weights for bias nodes\n    this.weights = null;\n    this.outputs = null;\n\n    // state for training\n    this.deltas = null;\n    this.changes = null; // for momentum\n    this.errors = null;\n    this.errorCheckInterval = 1;\n    if (!this.constructor.prototype.hasOwnProperty('runInput')) {\n      this.runInput = null;\n    }\n    if (!this.constructor.prototype.hasOwnProperty('calculateDeltas')) {\n      this.calculateDeltas = null;\n    }\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n\n    if (options.inputSize && options.hiddenLayers && options.outputSize) {\n      this.sizes = [options.inputSize]\n        .concat(options.hiddenLayers)\n        .concat([options.outputSize]);\n    }\n  }\n\n  /**\n   *\n   * Expects this.sizes to have been set\n   */\n  initialize() {\n    if (!this.sizes) throw new Error ('Sizes must be set before initializing');\n\n    this.outputLayer = this.sizes.length - 1;\n    this.biases = []; // weights for bias nodes\n    this.weights = [];\n    this.outputs = [];\n\n    // state for training\n    this.deltas = [];\n    this.changes = []; // for momentum\n    this.errors = [];\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      let size = this.sizes[layer];\n      this.deltas[layer] = zeros(size);\n      this.errors[layer] = zeros(size);\n      this.outputs[layer] = zeros(size);\n\n      if (layer > 0) {\n        this.biases[layer] = randos(size);\n        this.weights[layer] = new Array(size);\n        this.changes[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          let prevSize = this.sizes[layer - 1];\n          this.weights[layer][node] = randos(prevSize);\n          this.changes[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.setActivation();\n    if (this.trainOpts.praxis === 'adam') {\n      this._setupAdam();\n    }\n  }\n\n  /**\n   *\n   * @param activation supported inputs: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  setActivation(activation) {\n    this.activation = activation ? activation : this.activation;\n    switch (this.activation) {\n      case 'sigmoid':\n        this.runInput = this.runInput || this._runInputSigmoid;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasSigmoid;\n        break;\n      case 'relu':\n        this.runInput = this.runInput || this._runInputRelu;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasRelu;\n        break;\n      case 'leaky-relu':\n        this.runInput = this.runInput || this._runInputLeakyRelu;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        this.runInput = this.runInput || this._runInputTanh;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasTanh;\n        break;\n      default:\n        throw new Error('unknown activation ' + this.activation + ', The activation should be one of [\\'sigmoid\\', \\'relu\\', \\'leaky-relu\\', \\'tanh\\']');\n    }\n  }\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable(){\n    if(!this.runInput){\n      console.error('Activation function has not been initialized, did you run train()?');\n      return false;\n    }\n\n    const checkFns = [\n      'sizes',\n      'outputLayer',\n      'biases',\n      'weights',\n      'outputs',\n      'deltas',\n      'changes',\n      'errors',\n    ].filter(c => this[c] === null);\n\n    if(checkFns.length > 0){\n      console.error(`Some settings have not been initialized correctly, did you run train()? Found issues with: ${checkFns.join(', ')}`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n\n    let output = this.runInput(input).slice(0);\n\n    if (this.outputLookup) {\n      output = lookup.toObject(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  /**\n   * trains via sigmoid\n   * @param input\n   * @returns {*}\n   */\n  _runInputSigmoid(input) {\n    this.outputs[0] = input;  // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeLayer = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeLayer; node++) {\n        let weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //sigmoid\n        activeOutputs[node] = 1 / (1 + Math.exp(-sum));\n      }\n      output = input = this.outputs[layer];\n    }\n    return output;\n  }\n\n  _runInputRelu(input) {\n    this.outputs[0] = input;  // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        let weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //relu\n        currentOutputs[node] = (sum < 0 ? 0 : sum);\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  _runInputLeakyRelu(input) {\n    this.outputs[0] = input;  // set output state of input layer\n    let alpha = this.leakyReluAlpha;\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        let weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //leaky relu\n        currentOutputs[node] = (sum < 0 ? 0 : alpha * sum);\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  _runInputTanh(input) {\n    this.outputs[0] = input;  // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        let weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //tanh\n        currentOutputs[node] = Math.tanh(sum);\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (this.sizes) return;\n\n    this.sizes = [];\n    this.sizes.push(data[0].input.length);\n    if (!this.hiddenLayers) {\n      this.sizes.push(Math.max(3, Math.floor(data[0].input.length / 2)));\n    } else {\n      this.hiddenLayers.forEach(size => {\n        this.sizes.push(size);\n      });\n    }\n    this.sizes.push(data[0].output.length);\n\n    this.initialize();\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options) {\n    const trainDefaults = this.constructor.trainDefaults;\n    for (const p in trainDefaults) {\n      if (!trainDefaults.hasOwnProperty(p)) continue;\n      this.trainOpts[p] = options.hasOwnProperty(p)\n        ? options[p]\n        : trainDefaults[p];\n    }\n    this.validateTrainingOptions(this.trainOpts);\n    this.setLogMethod(options.log || this.trainOpts.log);\n    this.activation = options.activation || this.activation;\n  }\n\n  /**\n   *\n   * @param options\n   */\n  validateTrainingOptions(options) {\n    const validations = {\n      iterations: (val) => { return typeof val === 'number' && val > 0; },\n      errorThresh: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\n      log: (val) => { return typeof val === 'function' || typeof val === 'boolean'; },\n      logPeriod: (val) => { return typeof val === 'number' && val > 0; },\n      learningRate: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\n      momentum: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\n      callback: (val) => { return typeof val === 'function' || val === null },\n      callbackPeriod: (val) => { return typeof val === 'number' && val > 0; },\n      timeout: (val) => { return typeof val === 'number' && val > 0 }\n    };\n    for (const p in validations) {\n      if (!validations.hasOwnProperty(p)) continue;\n      if (!options.hasOwnProperty(p)) continue;\n      if (!validations[p](options[p])) {\n        throw new Error(`[${p}, ${options[p]}] is out of normal training range, your network will probably not train.`);\n      }\n    }\n  }\n\n  /**\n   *\n   *  Gets JSON of trainOpts object\n   *    NOTE: Activation is stored directly on JSON object and not in the training options\n   */\n  getTrainOptsJSON() {\n    return Object.keys(this.constructor.trainDefaults)\n      .reduce((opts, opt) => {\n        if (opt === 'timeout' && this.trainOpts[opt] === Infinity) return opts;\n        if (opt === 'callback') return opts;\n        if (this.trainOpts[opt]) opts[opt] = this.trainOpts[opt];\n        if (opt === 'log') opts.log = typeof opts.log === 'function';\n        return opts;\n      }, {});\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  setLogMethod(log) {\n    if (typeof log === 'function'){\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = this.logTrainingStatus;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param status\n   * log training status\n   */\n  logTrainingStatus(status) {\n    console.log(`iterations: ${status.iterations}, training error: ${status.error}`);\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  calculateTrainingError(data) {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this.trainPattern(data[i], true);\n    }\n    return sum / data.length;\n  }\n\n  /**\n   * @param data\n   */\n  trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this.trainPattern(data[i]);\n    }\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param endTime\n   */\n  trainingTick(data, status, endTime) {\n    const {\n      callback,\n      callbackPeriod,\n      errorThresh,\n      iterations,\n      log,\n      logPeriod,\n    } = this.trainOpts;\n\n    if (status.iterations >= iterations || status.error <= errorThresh || Date.now() >= endTime) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (log && (status.iterations % logPeriod === 0)) {\n      status.error = this.calculateTrainingError(data);\n      log(status);\n    } else {\n      if (status.iterations % this.errorCheckInterval === 0) {\n        status.error = this.calculateTrainingError(data);\n      } else {\n        this.trainPatterns(data);\n      }\n    }\n\n    if (callback && (status.iterations % callbackPeriod === 0)) {\n      callback({\n        iterations: status.iterations,\n        error: status.error\n      });\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return {object} { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(data);\n\n    return {\n      data,\n      status,\n      endTime,\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {object} {error: number, iterations: number}\n   */\n  train(data, options = {}) {\n    let status, endTime;\n    ({ data, status, endTime } = this.prepTraining(data, options));\n\n    while (this.trainingTick(data, status, endTime));\n    return status;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {Promise}\n   * @resolves {{error: number, iterations: number}}\n   * @rejects {{trainError: string, status: {error: number, iterations: number}}\n   */\n  trainAsync(data, options = {}) {\n    let status, endTime;\n    ({ data, status, endTime } = this.prepTraining(data, options));\n\n    return new Promise((resolve, reject) => {\n      try {\n        const thawedTrain = new Thaw(new Array(this.trainOpts.iterations), {\n          delay: true,\n          each: () => this.trainingTick(data, status, endTime) || thawedTrain.stop(),\n          done: () => resolve(status)\n        });\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject({trainError, status});\n      }\n    });\n  }\n\n  /**\n   *\n   * @param {object} value\n   * @param {boolean} [logErrorRate]\n   */\n  trainPattern(value, logErrorRate) {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if  (logErrorRate) {\n      return mse(this.errors[this.outputLayer]);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasSigmoid(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const activeSize = this.sizes[layer];\n      const activeOutput = this.outputs[layer];\n      const activeError = this.errors[layer];\n      const activeDeltas = this.deltas[layer];\n      const nextLayer = this.weights[layer + 1];\n\n      for (let node = 0; node < activeSize; node++) {\n        let output = activeOutput[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          let deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * nextLayer[k][node];\n          }\n        }\n        activeError[node] = error;\n        activeDeltas[node] = error * output * (1 - output);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasRelu(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextWeights = this.weights[layer + 1];\n      const nextDeltas = this.deltas[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        let output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : 0;\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasLeakyRelu(target) {\n    let alpha = this.leakyReluAlpha;\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        let output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : alpha * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasTanh(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        let output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = (1 - output * output) * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * Changes weights of networks\n   */\n  adjustWeights() {\n    const { learningRate, momentum } = this.trainOpts;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      let incoming = this.outputs[layer - 1];\n      const activeSize = this.sizes[layer];\n      const activeDelta = this.deltas[layer];\n      const activeChanges = this.changes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n\n      for (let node = 0; node < activeSize; node++) {\n        let delta = activeDelta[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          let change = activeChanges[node][k];\n\n          change = (learningRate * delta * incoming[k])\n            + (momentum * change);\n\n          activeChanges[node][k] = change;\n          activeWeights[node][k] += change;\n        }\n        activeBiases[node] += learningRate * delta;\n      }\n    }\n  }\n\n  _setupAdam() {\n    this.biasChangesLow = [];\n    this.biasChangesHigh = [];\n    this.changesLow = [];\n    this.changesHigh = [];\n    this.iterations = 0;\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      let size = this.sizes[layer];\n      if (layer > 0) {\n        this.biasChangesLow[layer] = zeros(size);\n        this.biasChangesHigh[layer] = zeros(size);\n        this.changesLow[layer] = new Array(size);\n        this.changesHigh[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          let prevSize = this.sizes[layer - 1];\n          this.changesLow[layer][node] = zeros(prevSize);\n          this.changesHigh[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.adjustWeights = this._adjustWeightsAdam;\n  }\n\n  _adjustWeightsAdam() {\n    this.iterations++;\n\n    const { iterations } = this;\n    const {\n      beta1,\n      beta2,\n      epsilon,\n      learningRate\n    } = this.trainOpts;\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const currentSize = this.sizes[layer];\n      const currentDeltas = this.deltas[layer];\n      const currentChangesLow = this.changesLow[layer];\n      const currentChangesHigh = this.changesHigh[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentBiasChangesLow = this.biasChangesLow[layer];\n      const currentBiasChangesHigh = this.biasChangesHigh[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const delta = currentDeltas[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          const gradient = delta * incoming[k];\n          const changeLow = currentChangesLow[node][k] * beta1 + (1 - beta1) * gradient;\n          const changeHigh = currentChangesHigh[node][k] * beta2 + (1 - beta2) * gradient * gradient;\n\n          const momentumCorrection = changeLow / (1 - Math.pow(beta1, iterations));\n          const gradientCorrection = changeHigh / (1 - Math.pow(beta2, iterations));\n\n          currentChangesLow[node][k] = changeLow;\n          currentChangesHigh[node][k] = changeHigh;\n          currentWeights[node][k] += learningRate * momentumCorrection / (Math.sqrt(gradientCorrection) + epsilon);\n        }\n\n        const biasGradient = currentDeltas[node];\n        const biasChangeLow = currentBiasChangesLow[node] * beta1 + (1 - beta1) * biasGradient;\n        const biasChangeHigh = currentBiasChangesHigh[node] * beta2 + (1 - beta2) * biasGradient * biasGradient;\n\n        const biasMomentumCorrection = currentBiasChangesLow[node] / (1 - Math.pow(beta1, iterations));\n        const biasGradientCorrection = currentBiasChangesHigh[node] / (1 - Math.pow(beta2, iterations));\n\n        currentBiasChangesLow[node] = biasChangeLow;\n        currentBiasChangesHigh[node] = biasChangeHigh;\n        currentBiases[node] += learningRate * biasMomentumCorrection / (Math.sqrt(biasGradientCorrection) + epsilon);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    if (!Array.isArray(data)) { // turn stream datum into array\n      data = [data];\n    }\n\n    if (!Array.isArray(data[0].input)) {\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      } else {\n        const inputLookup = new LookupTable(data, 'input');\n        this.inputLookup = inputLookup.table;\n        this.inputLookupLength = inputLookup.length;\n      }\n    }\n\n    if (!Array.isArray(data[0].output)) {\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      } else {\n        const lookup = new LookupTable(data, 'output');\n        this.outputLookup = lookup.table;\n        this.outputLookupLength = lookup.length;\n      }\n    }\n\n    if (typeof this._formatInput === 'undefined') {\n      this._formatInput = getTypedArrayFn(data[0].input, this.inputLookup);\n      this._formatOutput = getTypedArrayFn(data[0].output, this.outputLookup);\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    if (this._formatInput && this._formatOutput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: this._formatInput(data[i].input),\n          output: this._formatOutput(data[i].output),\n        });\n      }\n      return result;\n    } else if (this._formatInput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: this._formatInput(data[i].input),\n          output: data[i].output\n        });\n      }\n      return result;\n    } else if (this._formatOutput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: data[i].input,\n          output: this._formatOutput(data[i].output)\n        });\n      }\n      return result;\n    }\n    return data;\n  }\n\n  addFormat(data) {\n    this.inputLookup = lookup.addKeys(data.input, this.inputLookup);\n    if (this.inputLookup) {\n      this.inputLookupLength = Object.keys(this.inputLookup).length;\n    }\n    this.outputLookup = lookup.addKeys(data.output, this.outputLookup);\n    if (this.outputLookup) {\n      this.outputLookupLength = Object.keys(this.outputLookup).length;\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array,\n   *  }\n   * }\n   */\n  test(data) {\n    data = this.formatData(data);\n    // for binary classification problems with one output node\n    const isBinary = data[0].output.length === 1;\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n\n    if (isBinary) {\n      let falsePos = 0;\n      let falseNeg = 0;\n      let truePos = 0;\n      let trueNeg = 0;\n\n      for (let i = 0; i < data.length; i++) {\n        const output = this.runInput(data[i].input);\n        const target = data[i].output;\n        const actual = output[0] > this.binaryThresh ? 1 : 0;\n        const expected = target[0];\n\n        if (actual !== expected) {\n          const misclass = data[i];\n          misclasses.push({\n            input: misclass.input,\n            output: misclass.output,\n            actual,\n            expected\n          });\n        }\n\n        if (actual === 0 && expected === 0) {\n          trueNeg++;\n        } else if (actual === 1 && expected === 1) {\n          truePos++;\n        } else if (actual === 0 && expected === 1) {\n          falseNeg++;\n        } else if (actual === 1 && expected === 0) {\n          falsePos++;\n        }\n\n        errorSum += mse(output.map((value, i) => {\n          return target[i] - value;\n        }));\n      }\n\n      return {\n        error: errorSum / data.length,\n        misclasses: misclasses,\n        total: data.length,\n        trueNeg: trueNeg,\n        truePos: truePos,\n        falseNeg: falseNeg,\n        falsePos: falsePos,\n        precision: truePos > 0 ? truePos / (truePos + falsePos) : 0,\n        recall: truePos > 0 ? truePos / (truePos + falseNeg) : 0,\n        accuracy: (trueNeg + truePos) / data.length\n      };\n    }\n\n    for (let i = 0; i < data.length; i++) {\n      const output = this.runInput(data[i].input);\n      const target = data[i].output;\n      const actual = output.indexOf(max(output));\n      const expected = target.indexOf(max(target));\n\n      if (actual !== expected) {\n        const misclass = data[i];\n        misclasses.push({\n          input: misclass.input,\n          output: misclass.output,\n          actual,\n          expected\n        });\n      }\n\n      errorSum += mse(output.map((value, i) => {\n        return target[i] - value;\n      }));\n    }\n    return {\n      error: errorSum / data.length,\n      misclasses: misclasses,\n      total: data.length\n    };\n  }\n\n  /**\n   *\n   * @returns\n   *  {\n   *    layers: [\n   *      {\n   *        x: {},\n   *        y: {}\n   *      },\n   *      {\n   *        '0': {\n   *          bias: -0.98771313,\n   *          weights: {\n   *            x: 0.8374838,\n   *            y: 1.245858\n   *          },\n   *        '1': {\n   *          bias: 3.48192004,\n   *          weights: {\n   *            x: 1.7825821,\n   *            y: -2.67899\n   *          }\n   *        }\n   *      },\n   *      {\n   *        f: {\n   *          bias: 0.27205739,\n   *          weights: {\n   *            '0': 1.3161821,\n   *            '1': 2.00436\n   *          }\n   *        }\n   *      }\n   *    ]\n   *  }\n   */\n  toJSON() {\n    if (this.sizes === null) {\n      this.initialize();\n    }\n    const layers = [];\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      layers[layer] = {};\n\n      let nodes;\n      // turn any internal arrays back into hashes for readable json\n      if (layer === 0 && this.inputLookup) {\n        nodes = Object.keys(this.inputLookup);\n      } else if (this.outputLookup && layer === this.outputLayer) {\n        nodes = Object.keys(this.outputLookup);\n      } else {\n        nodes = range(0, this.sizes[layer]);\n      }\n\n      for (let j = 0; j < nodes.length; j++) {\n        const node = nodes[j];\n        layers[layer][node] = {};\n\n        if (layer > 0) {\n          layers[layer][node].bias = this.biases[layer][j];\n          layers[layer][node].weights = {};\n          for (let k in layers[layer - 1]) {\n            let index = k;\n            if (layer === 1 && this.inputLookup) {\n              index = this.inputLookup[k];\n            }\n            layers[layer][node].weights[k] = this.weights[layer][j][index];\n          }\n        }\n      }\n    }\n    return {\n      sizes: this.sizes.slice(0),\n      layers,\n      outputLookup: this.outputLookup !== null,\n      inputLookup: this.inputLookup !== null,\n      activation: this.activation,\n      trainOpts: this.getTrainOptsJSON()\n    };\n  }\n\n  /**\n   *\n   * @param json\n   * @returns {NeuralNetwork}\n   */\n  fromJSON(json) {\n    Object.assign(this, this.constructor.defaults, json);\n    this.sizes = json.sizes;\n    this.initialize();\n\n    for (let i = 0; i <= this.outputLayer; i++) {\n      let layer = json.layers[i];\n      if (i === 0 && (!layer[0] || json.inputLookup)) {\n        this.inputLookup = lookup.toHash(layer);\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      }\n      else if (i === this.outputLayer && (!layer[0] || json.outputLookup)) {\n        this.outputLookup = lookup.toHash(layer);\n      }\n      if (i > 0) {\n        const nodes = Object.keys(layer);\n        this.sizes[i] = nodes.length;\n        for (let j in nodes) {\n          if (nodes.hasOwnProperty(j)) {\n            const node = nodes[j];\n            this.biases[i][j] = layer[node].bias;\n            this.weights[i][j] = toArray(layer[node].weights);\n          }\n        }\n      }\n    }\n    if (json.hasOwnProperty('trainOpts')) {\n      this.updateTrainingOptions(json.trainOpts);\n    }\n    return this;\n  }\n\n  /**\n   * @param {Function} [cb]\n   * @returns {Function}\n   */\n  toFunction(cb) {\n    const activation = this.activation;\n    const leakyReluAlpha = this.leakyReluAlpha;\n    let needsVar = false;\n    function nodeHandle(layers, layerNumber, nodeKey) {\n      if (layerNumber === 0) {\n        return typeof nodeKey === 'string'\n          ? `(input['${nodeKey}']||0)`\n          : `(input[${nodeKey}]||0)`;\n      }\n\n      const layer = layers[layerNumber];\n      const node = layer[nodeKey];\n      let result = ['(' , node.bias];\n      for (let w in node.weights) {\n        if (node.weights[w] < 0) {\n          result.push(`${node.weights[w]}*${nodeHandle(layers, layerNumber - 1, w)}`);\n        } else {\n          result.push(`+${node.weights[w]}*${nodeHandle(layers, layerNumber - 1, w)}`);\n        }\n      }\n      result.push(')');\n\n      switch (activation) {\n        case 'sigmoid':\n          return `1/(1+1/Math.exp(${result.join('')}))`;\n        case 'relu': {\n          needsVar = true;\n          return `((v=${result.join('')})<0?0:v)`;\n        }\n        case 'leaky-relu': {\n          needsVar = true;\n          return `((v=${result.join('')})<0?0:${leakyReluAlpha}*v)`;\n        }\n        case 'tanh':\n          return `Math.tanh(${result.join('')})`;\n        default:\n          throw new Error(`unknown activation type ${activation}`);\n      }\n    }\n\n    const layers = this.toJSON().layers;\n    const layersAsMath = [];\n    let result;\n    for (let i in layers[layers.length - 1]) {\n      layersAsMath.push(nodeHandle(layers, layers.length - 1, i));\n    }\n    if (this.outputLookup) {\n      result = `{${\n        Object.keys(this.outputLookup)\n          .map((key, i) => `'${key}':${layersAsMath[i]}`)\n        }}`;\n    } else {\n      result = `[${layersAsMath.join(',')}]`;\n    }\n\n    const source = `${ needsVar ? 'var v;' : '' }return ${result};`;\n    return new Function('input', cb ? cb(source) : source);\n  }\n}\n\n\nfunction getTypedArrayFn(value, table) {\n  if (value.buffer instanceof ArrayBuffer) {\n    return null;\n  } else if (Array.isArray(value)) {\n    return arrayToFloat32Array;\n  } else {\n    const length = Object.keys(table).length;\n    return (v) => {\n      const array = new Float32Array(length);\n      for (let p in table) {\n        array[table[p]] = v[p] || 0;\n      }\n      return array;\n    }\n  }\n}\n\n\nmodule.exports = NeuralNetwork;\n","const { GPU, alias, utils: gpuUtils } = require('gpu.js');\nconst NeuralNetwork = require('./neural-network');\nconst lookup = require('./lookup');\nconst { release } = require('./utilities/kernel');\n\nfunction weightedSumSigmoid(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output, targets) {\n  return targets[this.thread.x] - output;\n}\n\nfunction calcDeltasSigmoid(error, output) {\n  // sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error, output) {\n  // relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error, output) {\n  // leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error, output) {\n  // tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(nextWeights, nextDeltas) {\n  let error = 0;\n  for (let k = 0; k < this.constants.size; k++) {\n    error += nextDeltas[k] * nextWeights[k][this.thread.x];\n  }\n  return error;\n}\n\nfunction calcChanges(previousChanges, deltas, previousOutputs) {\n  return (\n    this.constants.learningRate *\n      deltas[this.thread.y] *\n      previousOutputs[this.thread.x] +\n    this.constants.momentum * previousChanges[this.thread.y][this.thread.x]\n  );\n}\n\nfunction addWeights(change, weights) {\n  return change + weights[this.thread.y][this.thread.x];\n}\n\nfunction addBiases(biases, deltas) {\n  return (\n    biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate\n  );\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(errors) {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / this.constants.size;\n}\n\n/**\n *\n * @param {object} options\n * @constructor\n */\nclass NeuralNetworkGPU extends NeuralNetwork {\n  constructor(options = {}) {\n    super(options);\n    this.forwardPropagate = [];\n    this.backwardPropagate = [];\n    this.changesPropagate = [];\n    this.biasesPropagate = [];\n    this.errorCheckInterval = 100;\n    this.gpu = new GPU({ mode: options.mode });\n  }\n\n  /**\n   *\n   */\n  initialize() {\n    super.initialize();\n    this.buildRunInput();\n    this.buildCalculateDeltas();\n    this.buildGetChanges();\n    this.buildChangeBiases();\n    this.buildGetMSE();\n  }\n\n  setActivation() {\n    return;\n    throw new Error(\n      `${this.constructor.name}-setActivation is not yet implemented`\n    );\n  }\n\n  /**\n   *\n   * @param value\n   * @param logErrorRate\n   */\n  trainPattern(value, logErrorRate) {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return this.getMSE(this.errors[this.outputLayer]);\n    } else {\n      return null;\n    }\n  }\n\n  calculateTrainingError(data) {\n    let sum = new Float32Array([0]);\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this.trainPattern(data[i], true);\n      sum = this._addMSE(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this._divideMSESum(data.length, sum)[0];\n    release(sum);\n    return result;\n  }\n\n  adjustWeights() {\n    this.getChanges();\n    this.changeBiases();\n  }\n\n  buildRunInput() {\n    let weightedSum = null;\n\n    switch (this.activation) {\n      case 'sigmoid':\n        weightedSum = weightedSumSigmoid;\n        break;\n      case 'relu':\n        weightedSum = weightedSumRelu;\n        break;\n      case 'leaky-relu':\n        weightedSum = weightedSumLeakyRelu;\n        break;\n      case 'tanh':\n        weightedSum = weightedSumTanh;\n        break;\n      default:\n        throw new Error(`unknown activation ${this.activation}`);\n    }\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          size: this.sizes[layer - 1],\n        },\n      });\n    }\n\n    this.texturizeInputData = this.gpu.createKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      output: [this.sizes[1]],\n      pipeline: true\n    });\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  runInput(input) {\n    let output;\n    this.outputs[0] = input;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      release(this.outputs[layer]);\n      this.outputs[layer] = this.forwardPropagate[layer](\n        this.weights[layer],\n        this.biases[layer],\n        input\n      );\n      output = input = this.outputs[layer];\n    }\n    return output;\n  }\n\n  buildCalculateDeltas() {\n    let calcDeltas = null;\n    switch (this.activation) {\n      case 'sigmoid':\n        calcDeltas = calcDeltasSigmoid;\n        break;\n      case 'relu':\n        calcDeltas = calcDeltasRelu;\n        break;\n      case 'leaky-relu':\n        calcDeltas = calcDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        calcDeltas = calcDeltasTanh;\n        break;\n      default:\n        throw new Error(`unknown activation ${this.activation}`);\n    }\n\n    calcDeltas = alias(gpuUtils.getMinifySafeName(() => calcDeltas), calcDeltas);\n    this.gpu.addFunction(calcDeltas);\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      if (layer === this.outputLayer) {\n        this.backwardPropagate[this.outputLayer] = this.gpu.createKernelMap(\n          {\n            error: calcErrorOutput\n          },\n          function (outputs, targets) {\n            const output = outputs[this.thread.x];\n            return calcDeltas(calcErrorOutput(output, targets), output);\n          },\n          {\n            output: [this.sizes[this.outputLayer]],\n            pipeline: true,\n          }\n        );\n      } else {\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: calcError\n          },\n          function (nextWeights, outputs, nextDeltas) {\n            const output = outputs[this.thread.x];\n            return calcDeltas(calcError(nextWeights, nextDeltas), output);\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n            constants: {\n              size: this.deltas[layer + 1].length,\n            },\n          }\n        );\n      }\n    }\n\n  }\n\n  calculateDeltas(target) {\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      let output;\n      release(this.deltas[layer]);\n      release(this.errors[layer]);\n\n      if (layer === this.outputLayer) {\n        output = this.backwardPropagate[layer](\n          this.outputs[layer],\n          target);\n      } else {\n        output = this.backwardPropagate[layer](\n          this.weights[layer + 1],\n          this.outputs[layer],\n          this.deltas[layer + 1],\n        );\n      }\n      this.deltas[layer] = output.result;\n      this.errors[layer] = output.error;\n    }\n  }\n\n  buildGetChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.changesPropagate[layer] = this.gpu.createKernelMap(\n        {\n          weights: addWeights,\n          changes: calcChanges,\n        },\n        function (previousOutputs, deltas, weights, changes) {\n          const change = calcChanges(changes, deltas, previousOutputs);\n\n          return addWeights(change, weights);\n        },\n        {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            size: this.outputs[layer - 1].length,\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum,\n          },\n        }\n      );\n    }\n  }\n\n  getChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const weights = this.weights[layer];\n      const changes = this.changes[layer];\n      const output = this.changesPropagate[layer](\n        this.outputs[layer - 1],\n        this.deltas[layer],\n        weights,\n        changes\n      );\n      release(weights);\n      release(changes);\n      this.weights[layer] = output.weights;\n      this.changes[layer] = output.changes;\n      release(output.result);\n    }\n  }\n\n  buildChangeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          learningRate: this.trainOpts.learningRate,\n        },\n      });\n    }\n  }\n\n  changeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const biases = this.biases[layer];\n      this.biases[layer] = this.biasesPropagate[layer](\n        biases,\n        this.deltas[layer]\n      );\n      release(biases);\n    }\n  }\n\n  buildGetMSE() {\n    this.getMSE = this.gpu.createKernel(mse, {\n      output: [1],\n      constants: {\n        size: this.sizes[this.outputLayer],\n      },\n      pipeline: true,\n    });\n    this._addMSE = this.gpu.createKernel(function(value1, value2) {\n      return value1[0] + value2[0];\n    }, {\n      output: [1],\n      pipeline: true,\n    });\n    this._divideMSESum = this.gpu.createKernel(function(length, mseSum) {\n      const value = mseSum[0];\n      if (value > 0) {\n        return value / length;\n      }\n      return 0;\n    }, {\n      output: [1]\n    });\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n    const inputTexture = this.texturizeInputData(input);\n    const outputTextures = this.runInput(inputTexture);\n    let output = outputTextures.toArray ? outputTextures.toArray() : outputTextures;\n\n    if (this.outputLookup) {\n      output = lookup.toObject(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(data);\n\n    const texturizeOutputData = this.gpu.createKernel(\n      function(value) { return value[this.thread.x]; },\n      {\n        output: [data[0].output.length],\n        pipeline: true\n      }\n    );\n\n    return {\n      data: data.map(set => ({\n        input: this.texturizeInputData(set.input),\n        output: texturizeOutputData(set.output),\n      })),\n      status,\n      endTime,\n    };\n  }\n\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n  toJSON() {\n    if (!this.weights[1].toArray) {\n      // in fallback mode\n      return super.toJSON();\n    }\n\n    // in GPU mode\n    const weights = [];\n    const biases = [];\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      weights[layer] = Array.from(this.weights[layer].toArray());\n      biases[layer] = Array.from(this.biases[layer].toArray());\n    }\n\n    // pseudo lo-fi decorator\n    return NeuralNetwork.prototype.toJSON.call({\n      activation: this.activation,\n      inputLookup: this.inputLookup,\n      outputLookup: this.outputLookup,\n      outputLayer: this.outputLayer,\n      sizes: this.sizes,\n      getTrainOptsJSON: () => this.getTrainOptsJSON(),\n      weights,\n      biases,\n    });\n  }\n}\n\nmodule.exports = NeuralNetworkGPU;\n","const { Internal } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { release } = require('../utilities/kernel');\n\nclass RecurrentConnection extends Internal {\n  setLayer(layer) {\n    this.layer = layer;\n  }\n\n  get width() {\n    return this.layer.width;\n  }\n\n  set width(value) {\n    throw new Error(`${this.constructor.name}-width is not yet implemented`);\n  }\n\n  get height() {\n    return this.layer.height;\n  }\n\n  set height(value) {\n    throw new Error(`${this.constructor.name}-height is not yet implemented`);\n  }\n\n  get deltas() {\n    return this.layer.deltas;\n  }\n\n  set deltas(deltas) {\n    release(this.layer.deltas);\n    this.layer.deltas = deltas;\n  }\n\n  get weights() {\n    return this.layer.weights;\n  }\n\n  set weights(weights) {\n    release(this.layer.weights);\n    this.layer.weights = weights;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    const layerDeltas = this.layer.deltas;\n    this.layer.deltas = zeros2D(this.width, this.height);\n    release(layerDeltas);\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n\nmodule.exports = {\n  RecurrentConnection\n};\n","const { Internal } = require('./types');\nconst { Base } = require('./base');\nconst { release } = require('../utilities/kernel');\n\nclass RecurrentInput extends Internal {\n  setRecurrentInput(recurrentInput) {\n    this.recurrentInput = recurrentInput;\n    this.validate();\n  }\n\n  get deltas() {\n    return this.recurrentInput.deltas;\n  }\n\n  set deltas(deltas) {\n    const recurrentInputDeltas = this.recurrentInput.deltas;\n    this.recurrentInput.deltas = deltas;\n    release(recurrentInputDeltas);\n  }\n\n  get weights() {\n    return this.recurrentInput.weights;\n  }\n\n  set weights(weights) {\n    const recurrentInputWeights = this.recurrentInput.weights;\n    this.recurrentInput.weights = weights;\n    release(recurrentInputWeights);\n  }\n\n  validate() {\n    Base.prototype.validate.call(this);\n    if (this.width !== this.recurrentInput.width) {\n      throw new Error(\n        `${this.constructor.name} layer width ${this.width} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.width}) are not same`\n      );\n    }\n\n    if (this.height !== this.recurrentInput.height) {\n      throw new Error(\n        `${this.constructor.name} layer height ${this.height} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.height}) are not same`\n      );\n    }\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n\nmodule.exports = {\n  RecurrentInput\n};\n","const zeros2D = require('../utilities/zeros-2d');\nconst { Internal } = require('./types');\nconst { release } = require('../utilities/kernel');\n\nclass RecurrentZeros extends Internal {\n  setDimensions(width, height) {\n    this.praxis = null;\n    this.width = width;\n    this.height = height;\n    this.weights = zeros2D(width, height);\n    this.deltas = zeros2D(width, height);\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    const { weights } = this;\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    release(weights);\n\n    //TODO: put this on the GPU\n    release(this.deltas);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  validate() {\n    throw new Error(`${this.constructor.name}-validate is not yet implemented`);\n  }\n\n  reset() {\n    throw new Error(`${this.constructor.name}-reset is not yet implemented`);\n  }\n}\n\nfunction recurrentZeros() {\n  return new RecurrentZeros();\n}\n\nmodule.exports = {\n  RecurrentZeros,\n  recurrentZeros,\n};\n","const { RecurrentConnection } = require('./layer/recurrent-connection');\nconst { RecurrentInput } = require('./layer/recurrent-input');\nconst { RecurrentZeros } = require('./layer/recurrent-zeros');\nconst flattenLayers = require('./utilities/flatten-layers');\nconst mse2d = require('./utilities/mse-2d');\nconst { FeedForward } = require('./feed-forward');\n// const Base from './layer/base'\n\nclass Recurrent extends FeedForward {\n  static get structure() {\n    return {\n      /**\n       *\n       * _inputLayers are a 1 dimensional array of input layers defined once\n       * @type Object[]\n       * @private\n       */\n      _inputLayers: null,\n\n      /**\n       * _hiddenLayers are a 1 dimensional array of hidden layers defined from results from settings.hiddenLayers\n       * @type Object[]\n       * @private\n       */\n      _hiddenLayers: null,\n\n      /**\n       * _hiddenLayerSets are a 2 dimensional array of hidden layers defined for each recursion\n       * @type Object[][]\n       * @private\n       */\n      _hiddenLayerSets: null,\n\n      /**\n       * _outputLayers are a 1 dimensional array of output layers defined once\n       * @type Object[]\n       * @private\n       */\n      _outputLayers: null,\n      _outputConnection: null,\n      _previousInputs: null,\n      _model: null,\n      _recurrentIndices: null,\n    };\n  }\n\n  _connectLayers() {\n    const initialLayers = [];\n    const inputLayer = this.inputLayer();\n    this._inputLayer = inputLayer;\n    this.layers.push(inputLayer);\n    const hiddenLayers = this._connectHiddenLayers(inputLayer);\n    this._hiddenLayerSets = hiddenLayers;\n    this._outputConnection.setLayer(hiddenLayers[hiddenLayers.length - 1]);\n    const outputLayer = this.outputLayer(\n      this._outputConnection,\n      hiddenLayers.length\n    );\n    this._outputLayer = outputLayer;\n    this.layers.push(outputLayer);\n    initialLayers.push(inputLayer);\n    initialLayers.push(...hiddenLayers);\n    initialLayers.push(outputLayer);\n    const flattenedLayers = flattenLayers(initialLayers);\n    this._inputLayers = flattenedLayers.slice(\n      0,\n      flattenedLayers.indexOf(inputLayer) + 1\n    );\n    this._hiddenLayerSets = [\n      flattenedLayers.slice(\n        flattenedLayers.indexOf(inputLayer) + 1,\n        flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1\n      ),\n    ];\n    this._outputLayers = flattenedLayers.slice(\n      flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1\n    );\n    this._outputLayers.unshift();\n    this._recurrentIndices = [];\n    this._model = [];\n    for (let i = 0; i < this._hiddenLayerSets[0].length; i++) {\n      if (\n        Object.getPrototypeOf(this._hiddenLayerSets[0][i].constructor).name ===\n        'Model'\n      ) {\n        this._model.push(this._hiddenLayerSets[0][i]);\n        this._hiddenLayerSets[0].splice(i, 1);\n      }\n    }\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      this._recurrentIndices.push(\n        this._hiddenLayerSets[0].indexOf(hiddenLayers[i])\n      );\n    }\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    this._hiddenLayers = [];\n    const hiddenLayers = [];\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const recurrentInput = new RecurrentZeros();\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, recurrentInput, i);\n      this._hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n      hiddenLayers.push(hiddenLayer);\n      this.layers.push(hiddenLayer);\n    }\n    return hiddenLayers;\n  }\n\n  _connectHiddenLayersDeep() {\n    const hiddenLayers = [];\n    const previousHiddenLayers = this._hiddenLayerSets[\n      this._hiddenLayerSets.length - 1\n    ];\n    const firstLayer = this._hiddenLayerSets[0];\n    let recurrentIndex = 0;\n    for (let i = 0; i < previousHiddenLayers.length; i++) {\n      const previousHiddenLayer = previousHiddenLayers[i];\n      let layer = null;\n      switch (Object.getPrototypeOf(firstLayer[i].constructor).name) {\n        case 'Activation': {\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(inputLayer);\n          break;\n        }\n        case 'Filter': {\n          const settings = previousHiddenLayer;\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(settings, inputLayer);\n          break;\n        }\n        case 'Internal': {\n          switch (previousHiddenLayer.constructor.name) {\n            case 'RecurrentConnection':\n              break;\n            case 'RecurrentInput':\n            case 'RecurrentZeros':\n            default:\n              layer = new RecurrentInput();\n              layer.setDimensions(\n                previousHiddenLayer.width,\n                previousHiddenLayer.height\n              );\n              layer.setRecurrentInput(\n                previousHiddenLayers[this._recurrentIndices[recurrentIndex]]\n              );\n              recurrentIndex++;\n              break;\n          }\n          break;\n        }\n        case 'Model': {\n          layer = previousHiddenLayer;\n          break;\n        }\n        case 'Modifier': {\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(inputLayer);\n          break;\n        }\n        case 'Operator': {\n          const inputLayer1 =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer1)\n            ] || previousHiddenLayer.inputLayer1;\n          const inputLayer2 =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer2)\n            ] || previousHiddenLayer.inputLayer2;\n          layer = new previousHiddenLayer.constructor(inputLayer1, inputLayer2);\n          break;\n        }\n        default:\n          throw new Error(\n            `hidden layer ${\n              previousHiddenLayer.constructor.name\n            } extends unknown hidden layer ${\n              Object.getPrototypeOf(previousHiddenLayer.constructor).name\n            }`\n          );\n      }\n\n      hiddenLayers[i] = layer;\n    }\n    this._hiddenLayerSets.push(hiddenLayers);\n    return hiddenLayers;\n  }\n\n  initialize() {\n    this.layers = [];\n    this._previousInputs = [];\n    this._outputConnection = new RecurrentConnection();\n    this._connectLayers();\n    this.initializeLayers(this._model);\n    this.initializeLayers(this._inputLayers);\n    this.initializeLayers(this._hiddenLayerSets[0]);\n    this.initializeLayers(this._outputLayers);\n  }\n\n  initializeDeep() {\n    const hiddenLayers = this._connectHiddenLayersDeep();\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      const hiddenLayer = hiddenLayers[i];\n      hiddenLayer.reuseKernels(this._hiddenLayerSets[0][i]);\n    }\n  }\n\n  runInput(input) {\n    const max = input.length - 1;\n    for (let x = 0; x < max; x++) {\n      const hiddenLayers = this._hiddenLayerSets[x];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n\n      this._inputLayers[0].predict([input[x]]);\n      this._previousInputs.push(this._inputLayers[0].weights);\n      for (let i = 1; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].predict();\n      }\n      for (let i = 0; i < this._hiddenLayerSets[x].length; i++) {\n        this._hiddenLayerSets[x][i].predict();\n      }\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].predict();\n      }\n    }\n    return this._outputLayers[this._outputLayers.length - 1].weights;\n  }\n\n  _prepTraining(data, options) {\n    const stats = super._prepTraining(data, options);\n    this.initializeDeep();\n    return stats;\n  }\n\n  _calculateDeltas(target, offset) {\n    for (let x = target.length - 1; x >= 0; x--) {\n      const hiddenLayersIndex = offset + x;\n      const hiddenLayers = this._hiddenLayerSets[hiddenLayersIndex];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n      if (this._previousInputs.length > 0) {\n        this._inputLayers[0].weights = this._previousInputs.pop();\n      }\n\n      this._outputLayers[this._outputLayers.length - 1].compare([[target[x]]]);\n      for (let i = this._outputLayers.length - 2; i >= 0; i--) {\n        this._outputLayers[i].compare();\n      }\n      for (let i = hiddenLayers.length - 1; i >= 0; i--) {\n        hiddenLayers[i].compare();\n      }\n      for (let i = this._inputLayers.length - 1; i >= 1; i--) {\n        this._inputLayers[i].compare();\n      }\n    }\n  }\n\n  adjustWeights() {\n    for (\n      let hiddenLayersIndex = 0;\n      hiddenLayersIndex < this._hiddenLayerSets.length;\n      hiddenLayersIndex++\n    ) {\n      const hiddenLayers = this._hiddenLayerSets[hiddenLayersIndex];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n      for (let i = 0; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].learn();\n      }\n\n      for (let i = 0; i < hiddenLayers.length; i++) {\n        hiddenLayers[i].learn();\n      }\n\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].learn();\n      }\n\n      for (let i = 0; i < this._model.length; i++) {\n        this._model[i].learn();\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {number[]} input\n   * @param {number[]} target\n   * @param {Boolean} [logErrorRate]\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target, input.length - 1);\n    this._calculateDeltas(input.slice(1), 0);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      const outputLayer = this._outputLayers[this._outputLayers.length - 1];\n      return mse2d(\n        outputLayer.errors.hasOwnProperty('toArray')\n          ? outputLayer.errors.toArray()\n          : outputLayer.errors\n      );\n    }\n    return null;\n  }\n}\n\nmodule.exports = {\n  Recurrent\n};\n","const zeros = require('../../utilities/zeros');\n\n/**\n * A matrix\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nclass Matrix {\n  constructor(rows, columns) {\n    if (rows === undefined) return;\n    if (columns === undefined) return;\n\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n    this.deltas = zeros(rows * columns);\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @returns {Float32Array|Array}\n   */\n  getWeights(row, col) {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('get accessor is skewed');\n    return this.weights[ix];\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setWeight(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed');\n    this.weights[ix] = v;\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setDeltas(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed');\n    this.deltas[ix] = v;\n  }\n\n  /**\n   *\n   * @returns {{rows: *, columns: *, weights: Array}}\n   */\n  toJSON() {\n    return {\n      rows: this.rows,\n      columns: this.columns,\n      weights: this.weights.slice(0),\n    };\n  }\n\n  static fromJSON(json) {\n    const matrix = new Matrix(json.rows, json.columns);\n    for (let i = 0, max = json.rows * json.columns; i < max; i++) {\n      matrix.weights[i] = json.weights[i]; // copy over weights\n    }\n    return matrix;\n  }\n\n  /**\n   *\n   * @param weightRows\n   * @param [deltasRows]\n   * @returns {Matrix}\n   */\n  static fromArray(weightRows, deltasRows) {\n    const rows = weightRows.length;\n    const columns = weightRows[0].length;\n    const m = new Matrix(rows, columns);\n\n    deltasRows = deltasRows || weightRows;\n\n    for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\n      const weightValues = weightRows[rowIndex];\n      const deltasValues = deltasRows[rowIndex];\n      for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\n        m.setWeight(rowIndex, columnIndex, weightValues[columnIndex]);\n        m.setDeltas(rowIndex, columnIndex, deltasValues[columnIndex]);\n      }\n    }\n\n    return m;\n  }\n\n  weightsToArray() {\n    const deltas = [];\n    let row = 0;\n    let column = 0;\n    for (let i = 0; i < this.weights.length; i++) {\n      if (column === 0) {\n        deltas.push([]);\n      }\n      deltas[row].push(this.weights[i]);\n      column++;\n      if (column >= this.columns) {\n        column = 0;\n        row++;\n      }\n    }\n    return deltas;\n  }\n\n  deltasToArray() {\n    const deltas = [];\n    let row = 0;\n    let column = 0;\n    for (let i = 0; i < this.deltas.length; i++) {\n      if (column === 0) {\n        deltas.push([]);\n      }\n      deltas[row].push(this.deltas[i]);\n      column++;\n      if (column >= this.columns) {\n        column = 0;\n        row++;\n      }\n    }\n    return deltas;\n  }\n}\n\nmodule.exports = Matrix;\n","function randomFloat(a, b) {\n  return Math.random() * (b - a) + a;\n}\n\n// Random numbers utils\nfunction gaussRandom() {\n  if (gaussRandom.returnV) {\n    gaussRandom.returnV = false;\n    return gaussRandom.vVal;\n  }\n  const u = 2 * Math.random() - 1;\n  const v = 2 * Math.random() - 1;\n  const r = u * u + v * v;\n  if (r === 0 || r > 1) {\n    return gaussRandom();\n  }\n  const c = Math.sqrt((-2 * Math.log(r)) / r);\n  gaussRandom.vVal = v * c; // cache this\n  gaussRandom.returnV = true;\n  return u * c;\n}\n\nfunction randomInteger(a, b) {\n  return Math.floor(Math.random() * (b - a) + a);\n}\n\nfunction randomN(mu, std) {\n  return mu + gaussRandom() * std;\n}\n\ngaussRandom.returnV = false;\ngaussRandom.vVal = 0;\n\nmodule.exports = { randomFloat, randomInteger, randomN };\n","const Matrix = require('.');\nconst { randomFloat } = require('../../utilities/random');\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @param std\n * @constructor\n */\nclass RandomMatrix extends Matrix {\n  constructor(rows, columns, std) {\n    super(rows, columns);\n    this.rows = rows;\n    this.columns = columns;\n    this.std = std;\n    for (let i = 0, max = this.weights.length; i < max; i++) {\n      this.weights[i] = randomFloat(-std, std);\n    }\n  }\n}\n\nmodule.exports = RandomMatrix;\n","const Matrix = require('.');\nconst ones = require('../../utilities/ones');\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nclass OnesMatrix extends Matrix {\n  constructor(rows, columns) {\n    super(rows, columns);\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = ones(rows * columns);\n    this.deltas = ones(rows * columns);\n  }\n}\n\nmodule.exports = OnesMatrix;\n","/*\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function copy(product, left) {\n  product.rows = parseInt(left.rows, 10);\n  product.columns = parseInt(left.columns, 10);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n};\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function cloneNegative(product, left) {\n  product.rows = parseInt(left.rows, 10);\n  product.columns = parseInt(left.columns, 10);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = -left.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * add {left} and {right} matrix weights into {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function add(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * adds {from} deltas to {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function addB(product, left, right) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = product.deltas[i];\n    right.deltas[i] = product.deltas[i];\n  }\n};\n","/**\n * makes matrix weights and deltas all ones\n * @param {Matrix} product\n */\nmodule.exports = function allOnes(product) {\n  for (let i = 0; i < product.weights.length; i++) {\n    product.weights[i] = 1;\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * multiply {left} and {right} matrix weights to {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiply(product, left, right) {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRow = 0; leftRow < leftRows; leftRow++) {\n    const leftRowBase = leftColumns * leftRow;\n    const rightRowBase = rightColumns * leftRow;\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // dot product loop\n      let dot = 0;\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftIndex = leftRowBase + leftColumn;\n        const rightIndex = rightColumnBase + rightColumn;\n        dot += left.weights[leftIndex] * right.weights[rightIndex];\n        left.deltas[leftIndex] = 0;\n        right.deltas[rightIndex] = 0;\n      }\n      product.weights[rightRowBase + rightColumn] = dot;\n    }\n  }\n};\n","/**\n * multiplies {from} deltas to {left} and {right}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyB(product, left, right) {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRowRoot = 0; leftRowRoot < leftRows; leftRowRoot++) {\n    const leftRowBase = leftColumns * leftRowRoot;\n    const rightRowBase = rightColumns * leftRowRoot;\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftRow = leftRowBase + leftColumn;\n        const rightRow = rightColumnBase + rightColumn;\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\n      }\n    }\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyElement(product, left, right) {\n  const { weights } = left;\n  for (let i = 0; i < weights.length; i++) {\n    product.weights[i] = left.weights[i] * right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyElementB(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i];\n    right.deltas[i] = left.weights[i] * product.deltas[i];\n  }\n}\n","/**\n *\n * relu {m} weights to {into} weights\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function relu(product, left) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n * @param {Matrix} product\n * @param {Matrix} m\n */\nmodule.exports = function reluB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowPluckIndex\n */\nmodule.exports = function rowPluck(product, left, rowPluckIndex) {\n  const { columns } = left;\n  const rowBase = columns * rowPluckIndex;\n  for (let column = 0; column < columns; column++) {\n    product.weights[column] = left.weights[rowBase + column];\n    product.deltas[column] = 0;\n  }\n};\n","/**\n * adds {from} deltas into {m} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowIndex\n */\nmodule.exports = function rowPluckB(product, left, rowIndex) {\n  const { columns } = left;\n  const rowBase = columns * rowIndex;\n  for (let column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function sigmoid(product, left) {\n  // sigmoid nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));\n    product.deltas[i] = 0;\n  }\n}\n\nfunction sig(x) {\n  // helper function for computing sigmoid\n  return 1 / (1 + Math.exp(-x));\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function sigmoidB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    const mwi = product.weights[i];\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function tanh(product, left) {\n  // tanh nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.tanh(left.weights[i]);\n    product.deltas[i] = 0;\n  }\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function tanhB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    // grad for z = tanh(x) is (1 - z^2)\n    const mwi = product.weights[i];\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\n  }\n}\n","const Matrix = require('.');\n\n/**\n *\n * @param {Matrix} m\n * @returns {Matrix}\n */\nmodule.exports = function softmax(m) {\n  const result = new Matrix(m.rows, m.columns); // probability volume\n  let maxVal = -999999;\n  for (let i = 0; i < m.weights.length; i++) {\n    if (m.weights[i] > maxVal) {\n      maxVal = m.weights[i];\n    }\n  }\n\n  let s = 0;\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] = Math.exp(m.weights[i] - maxVal);\n    s += result.weights[i];\n  }\n\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] /= s;\n  }\n\n  // no backward pass here needed\n  // since we will use the computed probabilities outside\n  // to set gradients directly on m\n  return result;\n};\n","const Matrix = require('./');\nconst OnesMatrix = require('./ones-matrix');\nconst copy = require('./copy');\nconst cloneNegative = require('./clone-negative');\nconst add = require('./add');\nconst addB = require('./add-b');\nconst allOnes = require('./all-ones');\nconst multiply = require('./multiply');\nconst multiplyB = require('./multiply-b');\nconst multiplyElement = require('./multiply-element');\nconst multiplyElementB = require('./multiply-element-b');\nconst relu = require('./relu');\nconst reluB = require('./relu-b');\nconst rowPluck = require('./row-pluck');\nconst rowPluckB = require('./row-pluck-b');\nconst sigmoid = require('./sigmoid');\nconst sigmoidB = require('./sigmoid-b');\nconst tanh = require('./tanh');\nconst tanhB = require('./tanh-b');\nconst softmax = require('./softmax');\n\nclass Equation {\n  constructor() {\n    this.inputRow = 0;\n    this.inputValue = null;\n    this.states = [];\n  }\n\n  /**\n   * connects two matrices together by add\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  add(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, left.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: add,\n      backpropagationFn: addB,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param {Number} rows\n   * @param {Number} columns\n   * @returns {Matrix}\n   */\n  allOnes(rows, columns) {\n    const product = new Matrix(rows, columns);\n    this.states.push({\n      left: product,\n      product,\n      forwardFn: allOnes,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  cloneNegative(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: cloneNegative,\n    });\n    return product;\n  }\n\n  /**\n   * connects two matrices together by subtract\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  subtract(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    return this.add(\n      this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)),\n      right\n    );\n  }\n\n  /**\n   * connects two matrices together by multiply\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiply(left, right) {\n    if (left.columns !== right.rows) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, right.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiply,\n      backpropagationFn: multiplyB,\n    });\n    return product;\n  }\n\n  /**\n   * connects two matrices together by multiplyElement\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiplyElement(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, left.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiplyElement,\n      backpropagationFn: multiplyElementB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to relu\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  relu(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: relu,\n      backpropagationFn: reluB,\n    });\n    return product;\n  }\n\n  /**\n   * copy a matrix\n   * @param {Matrix} input\n   * @returns {Matrix}\n   */\n  input(input) {\n    this.states.push({\n      product: input,\n      forwardFn: (product) => {\n        product.weights = input.weights = this.inputValue;\n      }\n    });\n    return input;\n  }\n\n  /**\n   * connects a matrix via a row\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  inputMatrixToRow(m) {\n    const self = this;\n    const product = new Matrix(m.columns, 1);\n    this.states.push({\n      left: m,\n      get right() {\n        return self.inputRow;\n      },\n      product,\n      forwardFn: rowPluck,\n      backpropagationFn: rowPluckB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to sigmoid\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  sigmoid(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: sigmoid,\n      backpropagationFn: sigmoidB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to tanh\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  tanh(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: tanh,\n      backpropagationFn: tanhB,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param m\n   * @returns {Matrix}\n   */\n  observe(m) {\n    let iForward = 0;\n    let iBackpropagate = 0;\n    this.states.push({\n      forwardFn() {\n        iForward++;\n      },\n      backpropagationFn() {\n        iBackpropagate++;\n      },\n    });\n    return m;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runIndex(rowIndex = 0) {\n    this.inputRow = rowIndex;\n    let state;\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue;\n      }\n      state.forwardFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runInput(inputValue) {\n    this.inputValue = inputValue;\n    let state;\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue;\n      }\n      state.forwardFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  backpropagate() {\n    let i = this.states.length;\n    let state;\n    while (i-- > 0) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('backpropagationFn')) {\n        continue;\n      }\n      state.backpropagationFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  backpropagateIndex(rowIndex = 0) {\n    this.inputRow = rowIndex;\n\n    let i = this.states.length;\n    let state;\n    while (i-- > 0) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('backpropagationFn')) {\n        continue;\n      }\n      state.backpropagationFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  predictTarget(input, target) {\n    const output = this.runInput(input);\n    let errorSum = 0;\n    for (let i = 0; i < output.weights.length; i++) {\n      const error = output.weights[i] - target[i];\n      // set gradients into log probabilities\n      errorSum += Math.abs(error);\n      // write gradients into log probabilities\n      output.deltas[i] = error;\n    }\n    return errorSum;\n  }\n\n  predictTargetIndex(input, target) {\n    const output = this.runIndex(input);\n    // set gradients into log probabilities\n    const logProbabilities = output; // interpret output as log probabilities\n    let probabilities = softmax(output); // compute the softmax probabilities\n\n    // write gradients into log probabilities\n    logProbabilities.deltas = probabilities.weights.slice(0);\n    logProbabilities.deltas[target] -= 1;\n\n    // accumulate base 2 log prob and do smoothing\n    return -Math.log2(probabilities.weights[target]);\n  }\n}\n\nmodule.exports = Equation;\n","const { randomFloat } = require('../../utilities/random');\n\n/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nmodule.exports = function sampleI(m) {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  const r = randomFloat(0, 1);\n  let x = 0;\n  let i = 0;\n  const w = m.weights;\n\n  while (true) {\n    x += w[i];\n    if (x > r) {\n      return i;\n    }\n    i++;\n  }\n};\n","/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nmodule.exports = function maxI(m) {\n  // argmax of array w\n  const { weights } = m;\n  let maxv = weights[0];\n  let maxix = 0;\n  for (let i = 1; i < weights.length; i++) {\n    const v = weights[i];\n    if (v < maxv) continue;\n\n    maxix = i;\n    maxv = v;\n  }\n  return maxix;\n};\n","/**\n *\n * @param {String[]|Number[]} values\n * @param maxThreshold\n * @constructor\n */\nclass DataFormatter {\n  constructor(values, maxThreshold = 0) {\n    if (values === undefined) return;\n\n    this.values = values;\n    // go over all characters and keep track of all unique ones seen\n    // count up all characters\n    this.indexTable = {};\n    this.characterTable = {};\n    this.characters = [];\n    this.specialIndexes = [];\n    this.buildCharactersFromIterable(values);\n    this.buildTables(maxThreshold);\n  }\n\n  buildCharactersFromIterable(values) {\n    const tempCharactersTable = {};\n    for (\n      let dataFormatterIndex = 0, dataFormatterLength = values.length;\n      dataFormatterIndex < dataFormatterLength;\n      dataFormatterIndex++\n    ) {\n      const characters = values[dataFormatterIndex];\n\n      if (characters.hasOwnProperty('length')) {\n        for (\n          let characterIndex = 0, charactersLength = characters.length;\n          characterIndex < charactersLength;\n          characterIndex++\n        ) {\n          const character = characters[characterIndex];\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else {\n        const character = values[dataFormatterIndex];\n        if (tempCharactersTable.hasOwnProperty(character)) continue;\n        tempCharactersTable[dataFormatterIndex] = true;\n        this.characters.push(character);\n      }\n    }\n  }\n\n  buildTables(maxThreshold) {\n    // filter by count threshold and create pointers\n    const charactersLength = this.characters.length;\n    for (\n      let characterIndex = 0;\n      characterIndex < charactersLength;\n      characterIndex++\n    ) {\n      const character = this.characters[characterIndex];\n      if (characterIndex >= maxThreshold) {\n        // add character to dataFormatter\n        this.indexTable[character] = characterIndex;\n        this.characterTable[characterIndex] = character;\n      }\n    }\n  }\n\n  toIndexes(value, maxThreshold = 0) {\n    const result = [];\n    const { indexTable } = this;\n\n    for (let i = 0, max = value.length; i < max; i++) {\n      const character = value[i];\n      let index = indexTable[character];\n      if (index === undefined) {\n        if (indexTable['unrecognized']) {\n          index = indexTable['unrecognized'];\n        } else {\n          throw new Error(`unrecognized character \"${ character }\"`);\n        }\n      }\n      if (index < maxThreshold) continue;\n      result.push(index);\n    }\n    return result;\n  }\n\n  toIndexesInputOutput(value1, value2 = null, maxThreshold = 0) {\n    let result = null;\n    if (typeof value1 === 'string') {\n      result = this.toIndexes(\n        value1.split('').concat(['stop-input', 'start-output']),\n        maxThreshold\n      );\n    } else {\n      result = this.toIndexes(\n        value1.concat(['stop-input', 'start-output']),\n        maxThreshold\n      );\n    }\n\n    if (value2 === null) return result;\n\n    if (typeof value2 === 'string') {\n      return result.concat(this.toIndexes(value2.split(''), maxThreshold));\n    } else {\n      return result.concat(this.toIndexes(value2, maxThreshold));\n    }\n  }\n\n  toCharacters(indices, maxThreshold = 0) {\n    const result = [];\n    const { indexTable, characterTable } = this;\n\n    for (let i = 0, max = indices.length; i < max; i++) {\n      let index = indices[i];\n      if (index < maxThreshold) continue;\n      let character = characterTable[index];\n      if (character === undefined) {\n        if (indexTable['unrecognized']) {\n          character = characterTable[indexTable['unrecognized']];\n        } else {\n          throw new Error(`unrecognized index \"${ index }\"`);\n        }\n      } else if (character !== null) {\n        result.push(character);\n      }\n    }\n\n    return result;\n  }\n\n  toString(indices, maxThreshold) {\n    return this.toCharacters(indices, maxThreshold).join('');\n  }\n\n  addInputOutput() {\n    this.addSpecial('stop-input');\n    this.addSpecial('start-output');\n  }\n\n  addUnrecognized() {\n    this.addSpecial('unrecognized');\n  }\n\n  static fromAllPrintable(maxThreshold, values = ['\\n']) {\n    for (let i = 32; i <= 126; i++) {\n      values.push(String.fromCharCode(i));\n    }\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromAllPrintableInputOutput(maxThreshold, values = ['\\n']) {\n    const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromStringInputOutput(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string));\n    const dataFormatter = new DataFormatter(values, maxThreshold);\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromArrayInputOutput(array, maxThreshold) {\n    const dataFormatter = new DataFormatter(\n      array.filter((v, i, a) => a.indexOf(v) === i),\n      maxThreshold\n    );\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromString(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string));\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromJSON(json) {\n    const dataFormatter = new DataFormatter();\n    dataFormatter.indexTable = json.indexTable;\n    dataFormatter.characterTable = json.characterTable;\n    dataFormatter.values = json.values;\n    dataFormatter.characters = json.characters;\n    dataFormatter.specialIndexes = json.specialIndexes;\n    return dataFormatter;\n  }\n\n  addSpecial(special, character = null) {\n    let specialIndex = this.indexTable[special] = this.characters.length;\n    this.characterTable[specialIndex] = character;\n    this.specialIndexes.push(this.characters.length);\n    this.characters.push(special);\n  }\n\n  countSpecial(output) {\n    let sum = 0;\n    for (let i = 0; i < this.specialIndexes; i++) {\n      let index = -1;\n      while (index = output.indexOf(this.specialIndexes[i], index) > -1) {\n        sum++;\n      }\n    }\n    return sum;\n  }\n\n  toFunctionString() {\n    return `\nvar characterTable = ${ JSON.stringify(this.characterTable) };\nvar indexTable = ${ JSON.stringify(this.indexTable) };\nvar characters = ${ JSON.stringify(this.characters) };\nvar dataFormatter = {\n  ${ this.toIndexes.toString() },\n  ${ this.toIndexesInputOutput.toString() },\n  ${ this.toCharacters.toString() }\n};`;\n  }\n}\n\nmodule.exports = DataFormatter;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst Equation = require('./matrix/equation');\nconst sampleI = require('./matrix/sample-i');\nconst maxI = require('./matrix/max-i');\nconst softmax = require('./matrix/softmax');\nconst copy = require('./matrix/copy');\nconst { randomFloat } = require('../utilities/random');\nconst zeros = require('../utilities/zeros');\nconst DataFormatter = require('../utilities/data-formatter');\nconst NeuralNetwork = require('../neural-network');\n\nclass RNN {\n  constructor(options = {}) {\n    const { defaults } = this.constructor;\n\n    Object.assign(this, defaults, options);\n    this.trainOpts = {};\n    this.updateTrainingOptions(Object.assign({}, this.constructor.trainDefaults, options));\n\n    this.stepCache = {};\n    this.runs = 0;\n    this.ratioClipped = null;\n    this.model = null;\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  initialize() {\n    this.model = {\n      input: null,\n      hiddenLayers: [],\n      output: null,\n      equations: [],\n      allMatrices: [],\n      equationConnections: [],\n      outputConnector: null,\n    };\n\n    if (this.dataFormatter) {\n      this.inputSize =\n      this.inputRange =\n      this.outputSize = this.dataFormatter.characters.length;\n    }\n    this.mapModel();\n  }\n\n  createHiddenLayers() {\n    //0 is end, so add 1 to offset\n    this.model.hiddenLayers.push(this.constructor.getModel(this.hiddenLayers[0], this.inputSize));\n    let prevSize = this.hiddenLayers[0];\n\n    for (let d = 1; d < this.hiddenLayers.length; d++) { // loop over depths\n      let hiddenSize = this.hiddenLayers[d];\n      this.model.hiddenLayers.push(this.constructor.getModel(hiddenSize, prevSize));\n      prevSize = hiddenSize;\n    }\n  }\n\n  /**\n   *\n   * @param {Number} hiddenSize\n   * @param {Number} prevSize\n   * @returns {object}\n   */\n  static getModel(hiddenSize, prevSize) {\n    return {\n      //wxh\n      weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      //whh\n      transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      //bhh\n      bias: new Matrix(hiddenSize, 1)\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const relu = equation.relu.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n\n    return relu(\n      add(\n        add(\n          multiply(\n            hiddenLayer.weight,\n            inputMatrix\n          ),\n          multiply(\n            hiddenLayer.transition,\n            previousResult\n          )\n        ),\n        hiddenLayer.bias\n      )\n    );\n  }\n\n  createInputMatrix() {\n    // 0 is end, so add 1 to offset\n    this.model.input = new RandomMatrix(\n      this.inputRange + 1,\n      this.inputSize,\n      0.08\n    );\n  }\n\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    // 0 is end, so add 1 to offset\n    // whd\n    model.outputConnector = new RandomMatrix(\n      outputSize + 1,\n      lastHiddenSize,\n      0.08\n    );\n    // 0 is end, so add 1 to offset\n    // bd\n    model.output = new Matrix(outputSize + 1, 1);\n  }\n\n  bindEquation() {\n    const model = this.model;\n    const equation = new Equation();\n    const outputs = [];\n    const equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.constructor.getEquation(equation, equation.inputMatrixToRow(model.input), equationConnection[0], model.hiddenLayers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = this.hiddenLayers.length; i < max; i++) {\n      output = this.constructor.getEquation(equation, output, equationConnection[i], model.hiddenLayers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    const model = this.model;\n    const hiddenLayers = model.hiddenLayers;\n    const allMatrices = model.allMatrices;\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n\n    this.createInputMatrix();\n    if (!model.input) throw new Error('net.model.input not set');\n    allMatrices.push(model.input);\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      let hiddenMatrix = hiddenLayers[i];\n      for (let property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  /**\n   *\n   * @param {Number[]|string[]|string} input\n   * @param {boolean} [logErrorRate]\n   * @returns {number}\n   */\n  trainPattern(input, logErrorRate) {\n    const error = this.trainInput(input);\n    this.backpropagate(input);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n  }\n\n  /**\n   *\n   * @param {Number[]} input\n   * @returns {number}\n   */\n  trainInput(input) {\n    this.runs++;\n    let model = this.model;\n    let max = input.length;\n    let log2ppl = 0;\n    let equation;\n    while (model.equations.length <= input.length + 1) {//last is zero\n      this.bindEquation();\n    }\n    for (let inputIndex = -1, inputMax = input.length; inputIndex < inputMax; inputIndex++) {\n      // start and end tokens are zeros\n      let equationIndex = inputIndex + 1;\n      equation = model.equations[equationIndex];\n\n      let source = (inputIndex === -1 ? 0 : input[inputIndex] + 1); // first step: start with START token\n      let target = (inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1); // last step: end with END token\n      log2ppl += equation.predictTargetIndex(source, target);\n    }\n    return Math.pow(2, log2ppl / (max - 1)) / 100;\n  }\n\n  /**\n   * @param {Number[]} input\n   */\n  backpropagate(input) {\n    let i = input.length;\n    let model = this.model;\n    let equations = model.equations;\n    while(i > 0) {\n      equations[i].backpropagateIndex(input[i - 1] + 1);\n      i--;\n    }\n    equations[0].backpropagateIndex(0);\n  }\n\n  adjustWeights() {\n    const { regc, clipval, model, decayRate, stepCache, smoothEps, trainOpts } = this;\n    const { learningRate } = trainOpts;\n    const { allMatrices } = model;\n    let numClipped = 0;\n    let numTot = 0;\n    for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n      const matrix = allMatrices[matrixIndex];\n      const { weights, deltas }  = matrix;\n      if (!(matrixIndex in stepCache)) {\n        stepCache[matrixIndex] = zeros(matrix.rows * matrix.columns);\n      }\n      const cache = stepCache[matrixIndex];\n      for (let i = 0; i < weights.length; i++) {\n        let r = deltas[i];\n        const w = weights[i];\n        // rmsprop adaptive learning rate\n        cache[i] = cache[i] * decayRate + (1 - decayRate) * r * r;\n        // gradient clip\n        if (r > clipval) {\n          r = clipval;\n          numClipped++;\n        }\n        if (r < -clipval) {\n          r = -clipval;\n          numClipped++;\n        }\n        numTot++;\n        // update (and regularize)\n        weights[i] = w + -learningRate * r / Math.sqrt(cache[i] + smoothEps) - regc * w;\n      }\n    }\n    this.ratioClipped = numClipped / numTot;\n  }\n\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable(){\n    if (this.model.equations.length === 0) {\n      console.error(`No equations bound, did you run train()?`);\n      return false;\n    }\n\n    return true;\n  }\n\n\n  /**\n   *\n   * @param {Number[]|*} [rawInput]\n   * @param {Boolean} [isSampleI]\n   * @param {Number} temperature\n   * @returns {*}\n   */\n  run(rawInput = [], isSampleI = false, temperature = 1) {\n    const maxPredictionLength = this.maxPredictionLength + rawInput.length + (this.dataFormatter ? this.dataFormatter.specialIndexes.length : 0);\n    if (!this.isRunnable) return null;\n    const input = this.formatDataIn(rawInput);\n    const model = this.model;\n    const output = [];\n    let i = 0;\n    while (true) {\n      let previousIndex = (i === 0\n        ? 0\n        : i < input.length\n          ? input[i - 1] + 1\n          : output[i - 1])\n          ;\n      while (model.equations.length <= i) {\n        this.bindEquation();\n      }\n      let equation = model.equations[i];\n      // sample predicted letter\n      let outputMatrix = equation.runIndex(previousIndex);\n      let logProbabilities = new Matrix(model.output.rows, model.output.columns);\n      copy(logProbabilities, outputMatrix);\n      if (temperature !== 1 && isSampleI) {\n        /**\n         * scale log probabilities by temperature and re-normalize\n         * if temperature is high, logProbabilities will go towards zero\n         * and the softmax outputs will be more diffuse. if temperature is\n         * very low, the softmax outputs will be more peaky\n         */\n        for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\n          logProbabilities.weights[j] /= temperature;\n        }\n      }\n\n      let probs = softmax(logProbabilities);\n      let nextIndex = (isSampleI ? sampleI(probs) : maxI(probs));\n\n      i++;\n      if (nextIndex === 0) {\n        // END token predicted, break out\n        break;\n      }\n      if (i >= maxPredictionLength) {\n        // something is wrong\n        break;\n      }\n\n      output.push(nextIndex);\n    }\n\n    /**\n     * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\n     * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\n     * locks in on a value.\n     * Kind of like this, values are from input:\n     * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\n     * 2 -> 2 (oh how interesting, I've narrowed down values...)\n     * 1 -> 9 (oh how interesting, I've now know what the values are...)\n     * then the output looks like: [4, 2, 9,...]\n     * so we then remove the erroneous data to get our true output\n     */\n    return this.formatDataOut(\n      input,\n      output\n        .slice(input.length)\n        .map(value => value - 1)\n    );\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initilaized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (!this.model) {\n      this.initialize();\n    }\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options) {\n    Object.keys(this.constructor.trainDefaults).forEach(p => this.trainOpts[p] = (options.hasOwnProperty(p)) ? options[p] : this.trainOpts[p]);\n    this.validateTrainingOptions(this.trainOpts);\n    this.setLogMethod(options.log || this.trainOpts.log);\n    this.activation = options.activation || this.activation;\n  }\n\n  validateTrainingOptions(options) {\n    NeuralNetwork.prototype.validateTrainingOptions.call(this, options);\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  setLogMethod(log) {\n    if (typeof log === 'function'){\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return {object} { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0\n    };\n\n    this.verifyIsInitialized(data);\n\n    return {\n      data,\n      status,\n      endTime\n    };\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    this.trainOpts = options = Object.assign({}, this.constructor.trainDefaults, options);\n    let iterations = options.iterations;\n    let errorThresh = options.errorThresh;\n    let log = options.log === true ? console.log : options.log;\n    let logPeriod = options.logPeriod;\n    let callback = options.callback;\n    let callbackPeriod = options.callbackPeriod;\n    let error = Infinity;\n    let i;\n\n    if (this.hasOwnProperty('setupData')) {\n      data = this.setupData(data);\n    }\n\n    this.verifyIsInitialized();\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        const err = this.trainPattern(data[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n      if (log && (i % logPeriod === 0)) {\n        log(`iterations: ${ i }, training error: ${ error }`);\n      }\n      if (callback && (i % callbackPeriod === 0)) {\n        callback({ error: error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  addFormat() {\n    throw new Error('not yet implemented');\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const defaults = this.constructor.defaults;\n    if (!this.model) {\n      this.initialize();\n    }\n    let model = this.model;\n    let options = {};\n    for (let p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options,\n      input: model.input.toJSON(),\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        let layers = {};\n        for (let p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n    };\n  }\n\n  fromJSON(json) {\n    const defaults = this.constructor.defaults;\n    const options = json.options;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const input = Matrix.fromJSON(json.input);\n    allMatrices.push(input);\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      let layers = {};\n      for (let p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    if (options.dataFormatter) {\n      this.dataFormatter = DataFormatter.fromJSON(options.dataFormatter);\n    }\n\n    this.model = {\n      input,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n    this.bindEquation();\n  }\n\n  /**\n   * @param {Function} [cb]\n   * @returns {Function}\n   */\n  toFunction(cb) {\n    let model = this.model;\n    let equations = this.model.equations;\n    let equation = equations[1];\n    let states = equation.states;\n    let jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          if (j > -1 && (m === state.left || m === state.right)) {\n            return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n          } else {\n            return `new Matrix(${m.rows}, ${m.columns})`;\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n\n      if (m === model.input) return `json.input`;\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }': //compiled from ${ fileName(fnName) }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  var json = ${ jsonString };\n  ${ this.dataFormatter ? `${this.dataFormatter.toFunctionString()};\n  Object.assign(dataFormatter, json.options.dataFormatter);` : '' }\n  ${this.dataFormatter && typeof this.formatDataIn === 'function'\n      ? `const formatDataIn = function (input, output) { ${\n        toInner(this.formatDataIn.toString())\n      } }.bind({ dataFormatter });`\n      : ''}\n  ${this.dataFormatter !== null && typeof this.formatDataOut === 'function'\n      ? `const formatDataOut = function formatDataOut(input, output) { ${\n        toInner(this.formatDataOut.toString())\n      } }.bind({ dataFormatter });`\n      : ''}\n  var input = ${\n      (this.dataFormatter && typeof this.formatDataIn === 'function')\n        ? 'formatDataIn(rawInput)' \n        : 'rawInput'\n    };\n  var maxPredictionLength = input.length + ${ this.maxPredictionLength };\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      var state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n    \n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n    \n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  ${ (this.dataFormatter && typeof this.formatDataOut === 'function') \n      ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))'\n      : 'return output.slice(input.length).map(function(value) { return value - 1; })' };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ zeros.toString() }\n  ${ softmax.toString() }\n  ${ randomFloat.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`;\n    return new Function('rawInput', 'isSampleI', 'temperature', cb ? cb(src) : src);\n  }\n}\n\nRNN.defaults = {\n  inputSize: 20,\n  inputRange: 20,\n  hiddenLayers: [20,20],\n  outputSize: 20,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5,\n  maxPredictionLength: 100,\n  /**\n   *\n   * @param {*[]} data\n   * @returns {Number[]}\n   */\n  setupData: function(data) {\n    if (\n      typeof data[0] !== 'string'\n      && !Array.isArray(data[0])\n      && (\n        !data[0].hasOwnProperty('input')\n        || !data[0].hasOwnProperty('output')\n      )\n    ) {\n      return data;\n    }\n    let values = [];\n    const result = [];\n    if (typeof data[0] === 'string' || Array.isArray(data[0])) {\n      if (!this.dataFormatter) {\n        for (let i = 0; i < data.length; i++) {\n          values.push(data[i]);\n        }\n        this.dataFormatter = new DataFormatter(values);\n        this.dataFormatter.addUnrecognized();\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(this.formatDataIn(data[i]));\n      }\n    } else {\n      if (!this.dataFormatter) {\n        for (let i = 0; i < data.length; i++) {\n          values.push(data[i].input);\n          values.push(data[i].output);\n        }\n        this.dataFormatter = DataFormatter.fromArrayInputOutput(values);\n        this.dataFormatter.addUnrecognized();\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(this.formatDataIn(data[i].input, data[i].output));\n      }\n    }\n    return result;\n  },\n  /**\n   *\n   * @param {*[]} input\n   * @param {*[]} output\n   * @returns {Number[]}\n   */\n  formatDataIn: function(input, output = null) {\n    if (this.dataFormatter) {\n      if (this.dataFormatter.indexTable.hasOwnProperty('stop-input')) {\n        return this.dataFormatter.toIndexesInputOutput(input, output);\n      } else {\n        return this.dataFormatter.toIndexes(input);\n      }\n    }\n    return input;\n  },\n  /**\n   *\n   * @param {Number[]} input\n   * @param {Number[]} output\n   * @returns {*}\n   */\n  formatDataOut: function(input, output) {\n    if (this.dataFormatter) {\n      return this.dataFormatter\n        .toCharacters(output)\n        .join('');\n    }\n    return output;\n  },\n  dataFormatter: null\n};\n\nRNN.trainDefaults = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.01,\n  callback: null,\n  callbackPeriod: 10\n};\n\nmodule.exports = RNN;\n","function ArrayLookupTable(data, prop) {\n  this.length = 0;\n  this.prop = prop;\n  const table = this.table = {};\n  for (let i = 0; i < data.length; i++) {\n    const datum = data[i];\n    const input = datum[prop];\n    for (let j = 0; j < input.length; j++) {\n      for (let p in input[j]) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  }\n}\n\nmodule.exports = ArrayLookupTable;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst Equation = require('./matrix/equation');\nconst RNN = require('./rnn');\nconst zeros = require('../utilities/zeros');\nconst softmax = require('./matrix/softmax');\nconst {randomFloat} = require('../utilities/random');\nconst sampleI = require('./matrix/sample-i');\nconst maxI = require('./matrix/max-i');\nconst lookup = require(\"../lookup\");\nconst LookupTable = require('../utilities/lookup-table');\nconst ArrayLookupTable = require('../utilities/array-lookup-table');\nconst {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array } = require('../utilities/cast');\n\nclass RNNTimeStep extends RNN {\n  // eslint-disable-next-line\n  constructor(options) {\n    super(options);\n  }\n\n  createInputMatrix() {}\n\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    //whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    //bd\n    model.output = new RandomMatrix(outputSize, 1, 0.08);\n  }\n\n  bindEquation() {\n    let model = this.model;\n    let hiddenLayers = this.hiddenLayers;\n    let layers = model.hiddenLayers;\n    let equation = new Equation();\n    let outputs = [];\n    let equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.constructor.getEquation(equation, equation.input(new Matrix(this.inputSize, 1)), equationConnection[0], layers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.constructor.getEquation(equation, output, equationConnection[i], layers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    let model = this.model;\n    let hiddenLayers = model.hiddenLayers;\n    let allMatrices = model.allMatrices;\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      let hiddenMatrix = hiddenLayers[i];\n      for (let property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  backpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n\n  /**\n   *\n   * @param {number[]|number[][]|object|object[][]} [rawInput]\n   * @returns {number[]|number|object|object[]|object[][]}\n   */\n  run(rawInput) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.run = this.runObject;\n        return this.runObject(rawInput);\n      }\n      this.run = this.runNumbers;\n      return this.runNumbers(rawInput);\n    }\n    if (this.outputLookup) {\n      this.run = this.runObjects;\n      return this.runObjects(rawInput);\n    }\n    this.run = this.runArrays;\n    return this.runArrays(rawInput);\n  }\n\n  forecast(input, count) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.forecast = this.runObject;\n        return this.runObject(input);\n      }\n      this.forecast = this.forecastNumbers;\n      return this.forecastNumbers(input, count);\n    }\n    if (this.outputLookup) {\n      this.forecast = this.forecastObjects;\n      return this.forecastObjects(input, count);\n    }\n    this.forecast = this.forecastArrays;\n    return this.forecastArrays(input, count);\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    this.trainOpts = options = Object.assign({}, this.constructor.trainDefaults, options);\n    const iterations = options.iterations;\n    const errorThresh = options.errorThresh;\n    const log = options.log === true ? console.log : options.log;\n    const logPeriod = options.logPeriod;\n    const callback = options.callback;\n    const callbackPeriod = options.callbackPeriod;\n\n    if (this.inputSize === 1 || !this.inputSize) {\n      this.setSize(data);\n    }\n\n    data = this.formatData(data);\n    let error = Infinity;\n    let i;\n\n    this.verifyIsInitialized(data);\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        const err = this.trainPattern(data[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n      if (log && (i % logPeriod === 0)) {\n        log(`iterations: ${ i }, training error: ${ error }`);\n      }\n      if (callback && (i % callbackPeriod === 0)) {\n        callback({ error: error, iterations: i });\n      }\n    }\n\n    return {\n      error: error,\n      iterations: i\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (data[0].input) {\n      this.trainInput = this.trainInputOutput;\n    } else if (data[0].length > 0) {\n      if (data[0][0].length > 0) {\n        this.trainInput = this.trainArrays;\n      } else {\n        if (this.inputSize > 1) {\n          this.trainInput = this.trainArrays;\n        } else {\n          this.trainInput = this.trainNumbers;\n        }\n      }\n    }\n\n    if (!this.model) {\n      this.initialize();\n    }\n  }\n\n  setSize(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    switch(dataShape) {\n      case 'array,array,number':\n      case 'array,object,number':\n      case 'array,datum,array,number':\n      case 'array,datum,object,number':\n        // probably 1\n        break;\n      case 'array,array,array,number':\n        this.inputSize = this.outputSize = data[0][0].length;\n        break;\n      case 'array,array,object,number':\n        this.inputSize = this.outputSize = Object.keys(lookup.toTable2D(data)).length;\n        break;\n      case 'array,datum,array,array,number':\n        this.inputSize = this.outputSize = data[0].input[0].length;\n        break;\n      case 'array,datum,array,object,number':\n        this.inputSize = Object.keys(lookup.toInputTable2D(data)).length;\n        this.outputSize = Object.keys(lookup.toOutputTable2D(data)).length;\n        break;\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  trainNumbers(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget([input[i]], [input[i + 1]]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runNumbers(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput([input[i]]);\n    }\n    this.end();\n    return lastOutput.weights[0];\n  }\n\n  forecastNumbers(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput([input[i]]);\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return result;\n  }\n\n  runObject(input) {\n    if (this.inputLookup === this.outputLookup) {\n      const inputArray = lookup.toArrayShort(this.inputLookup, input);\n      return lookup.toObjectPartial(\n        this.outputLookup,\n        this.forecastNumbers(inputArray, this.outputLookupLength - inputArray.length),\n        inputArray.length);\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.forecastNumbers(\n        lookup.toArray(this.inputLookup, input, this.inputLookupLength),\n        this.outputLookupLength\n      )\n    );\n  }\n\n  runObjects(input) {\n    input = input.map(value => lookup.toArray(this.inputLookup, value, this.inputLookupLength));\n    return this.forecastArrays(input, 1).map(value => lookup.toObject(this.outputLookup, value))[0];\n  }\n\n  forecastObjects(input, count) {\n    input = input.map(value => lookup.toArray(this.inputLookup, value, this.inputLookupLength));\n    return this.forecastArrays(input, count).map(value => lookup.toObject(this.outputLookup, value));\n  }\n\n  trainInputOutput(object) {\n    const model = this.model;\n    const input = object.input;\n    const output = object.output;\n    const totalSize = input.length + output.length;\n    const equations = model.equations;\n    while (equations.length < totalSize) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    let equationIndex = 0;\n    for (let inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(input[inputIndex], input[inputIndex + 1]);\n    }\n    errorSum += equations[equationIndex++].predictTarget(input[input.length - 1], output[0]);\n    for (let outputIndex = 0, max = output.length - 1; outputIndex < max; outputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(output[outputIndex], output[outputIndex + 1]);\n    }\n    this.end();\n    return errorSum / totalSize;\n  }\n\n  trainArrays(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runArrays(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    if (this.inputLookup) {\n      input = lookup.toArrays(this.inputLookup, input, this.inputLookupLength);\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      let outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    if (this.outputLookup) {\n      return lookup.toObject(this.outputLookup, lastOutput);\n    }\n    return lastOutput;\n  }\n\n  forecastArrays(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    const result = [lastOutput.weights];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights.slice(0));\n    }\n    this.end();\n    return result;\n  }\n\n  end() {\n    this.model.equations[this.model.equations.length - 1].runInput(new Float32Array(this.outputSize));\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    const result = [];\n    switch (dataShape) {\n      case 'array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from([data[i]]));\n        }\n        return [result];\n      }\n      case 'array,array,number': {\n        if (this.inputSize === 1 && this.outputSize === 1) {\n          for (let i = 0; i < data.length; i++) {\n            result.push(arrayToFloat32Arrays(data[i]));\n          }\n          return result;\n        }\n        if (this.inputSize !== data[0].length) {\n          throw new Error('inputSize must match data input size');\n        }\n        if (this.outputSize !== data[0].length) {\n          throw new Error('outputSize must match data input size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from(data[i]));\n        }\n        return [result];\n      }\n      case 'array,object,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        if (!this.inputLookup) {\n          const lookupTable = new LookupTable(data);\n          this.inputLookup = this.outputLookup = lookupTable.table;\n          this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(objectToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      case 'array,datum,array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: arrayToFloat32Arrays(datum.input),\n            output: arrayToFloat32Arrays(datum.output)\n          });\n        }\n        return result;\n      }\n      case 'array,datum,object,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        if (!this.inputLookup) {\n          const inputLookup = new LookupTable(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n        if (!this.outputLookup) {\n          const outputLookup = new LookupTable(data, 'output');\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectToFloat32Arrays(datum.input),\n            output: objectToFloat32Arrays(datum.output)\n          });\n        }\n        return result;\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < data.length; i++) {\n          result.push(arraysToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      case 'array,array,object,number': {\n        if (!this.inputLookup) {\n          const lookupTable = new LookupTable(data);\n          this.inputLookup = this.outputLookup = lookupTable.table;\n          this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const array = [];\n          for (let j = 0; j < data[i].length; j++) {\n            array.push(objectToFloat32Array(data[i][j], this.inputLookup, this.inputLookupLength));\n          }\n          result.push(array);\n        }\n        return result;\n      }\n      case 'array,datum,array,array,number': {\n        if (this.inputSize === 1 && this.outputSize === 1) {\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: Float32Array.from(datum.input),\n              output: Float32Array.from(datum.output)\n            });\n          }\n        } else {\n          if (this.inputSize !== data[0].input[0].length) {\n            throw new Error('inputSize must match data input size');\n          }\n          if (this.outputSize !== data[0].output[0].length) {\n            throw new Error('outputSize must match data output size');\n          }\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: arraysToFloat32Arrays(datum.input),\n              output: arraysToFloat32Arrays(datum.output)\n            });\n          }\n        }\n        return result;\n      }\n      case 'array,datum,array,object,number': {\n        if (!this.inputLookup) {\n          const inputLookup = new ArrayLookupTable(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n        if (!this.outputLookup) {\n          const outputLookup = new ArrayLookupTable(data, 'output');\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectsToFloat32Arrays(datum.input, this.inputLookup, this.inputLookupLength),\n            output: objectsToFloat32Arrays(datum.output, this.outputLookup, this.outputLookupLength)\n          });\n        }\n        return result;\n      }\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(data) {\n    const formattedData = this.formatData(data);\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,array,number': {\n        if (this.inputSize === 1) {\n          for (let i = 0; i < formattedData.length; i++) {\n            const input = formattedData[i];\n            const output = this.run(input.splice(0, input.length - 1));\n            const target = input[input.length - 1][0];\n            const error = target - output;\n            const errorMSE = error * error;\n            errorSum += errorMSE;\n            const errorsAbs = Math.abs(errorMSE);\n            if (errorsAbs > this.trainOpts.errorThresh) {\n              const misclass = data[i];\n              Object.assign(misclass, {\n                value: input,\n                actual: output\n              });\n              misclasses.push(misclass);\n            }\n          }\n          break;\n        }\n        throw new Error('unknown data shape or configuration');\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.splice(0, input.length - 1));\n          const target = input[input.length - 1];\n          let errors = 0;\n          let errorCount = 0;\n          for (let j = 0; j < output.length; j++) {\n            errorCount++;\n            const error = target[j] - output[j];\n            // mse\n            errors += error * error;\n          }\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,object,number':\n      {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(lookup.toObjectPartial(this.outputLookup, input, 0, input.length - 1));\n          const target = input[input.length - 1];\n          let errors = 0;\n          let p;\n          for (p in output) {}\n          const error = target[i] - output[p];\n          // mse\n          errors += error * error;\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.slice(0, input.length - 1));\n          const target = data[i][input.length - 1];\n          let errors = 0;\n          let errorCount = 0;\n          for (const p in output) {\n            const error = target[p] - output[p];\n            // mse\n            errors += error * error;\n            errorCount++;\n          }\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,number':\n      case 'array,datum,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          let errorCount = 0;\n          for (let j = 0; j < output.length; j++) {\n            const error = datum.output[j][0] - output[j];\n            errors += error * error;\n            errorCount++;\n          }\n\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            Object.assign(misclass, {\n              actual: this.outputLookup\n                ? lookup.toObject(this.outputLookup, output)\n                : output\n            });\n            misclasses.push(misclass);\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (let k = 0; k < output[j].length; k++) {\n              const error = datum.output[j][k] - output[j][k];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (const p in output[j]) {\n              const error = data[i].output[j][p] - output[j][p];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      default: throw new Error('unknown data shape or configuration');\n    }\n\n    return {\n      error: errorSum / formattedData.length,\n      misclasses: misclasses,\n      total: formattedData.length\n    };\n  }\n\n  addFormat(value) {\n    const dataShape = lookup.dataShape(value).join(',');\n    switch(dataShape) {\n      case 'array,array,number':\n      case 'datum,array,array,number':\n      case 'array,number':\n      case 'datum,array,number':\n        return;\n      case 'datum,object,number': {\n        this.inputLookup = lookup.addKeys(value.input, this.inputLookup);\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        this.outputLookup = lookup.addKeys(value.output, this.outputLookup);\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        }\n        break;\n      }\n      case 'object,number': {\n        this.inputLookup = this.outputLookup = lookup.addKeys(value, this.inputLookup);\n        if (this.inputLookup) {\n          this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        break;\n      }\n      case 'array,object,number': {\n        for (let i = 0; i < value.length; i++) {\n          this.inputLookup = this.outputLookup = lookup.addKeys(value[i], this.inputLookup);\n          if (this.inputLookup) {\n            this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        break;\n      }\n      case 'datum,array,object,number': {\n        for (let i = 0; i < value.input.length; i++) {\n          this.inputLookup = lookup.addKeys(value.input[i], this.inputLookup);\n          if (this.inputLookup) {\n            this.inputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        for (let i = 0; i < value.output.length; i++) {\n          this.outputLookup = lookup.addKeys(value.output[i], this.outputLookup);\n          if (this.outputLookup) {\n            this.outputLookupLength = Object.keys(this.outputLookup).length;\n          }\n        }\n        break;\n      }\n\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const defaults = this.constructor.defaults;\n    if (!this.model) {\n      this.initialize();\n    }\n    let model = this.model;\n    let options = {};\n    for (let p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options: options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        let layers = {};\n        for (let p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n      inputLookup: this.inputLookup,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup,\n      outputLookupLength: this.outputLookupLength,\n    };\n  }\n\n  fromJSON(json) {\n    const defaults = this.constructor.defaults;\n    const options = json.options;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      let layers = {};\n      for (let p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    this.inputLookup = json.inputLookup;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup;\n    this.outputLookupLength = json.outputLookupLength;\n\n    this.model = {\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n    this.bindEquation();\n  }\n\n  /**\n   * @param {Function} [cb]\n   * @returns {Function}\n   */\n  toFunction(cb) {\n    const model = this.model;\n    const equations = this.model.equations;\n    const inputSize = this.inputSize;\n    const inputLookup = this.inputLookup;\n    const inputLookupLength = this.inputLookupLength;\n    const outputLookup = this.outputLookup;\n    const outputLookupLength = this.outputLookupLength;\n    const equation = equations[1];\n    const states = equation.states;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.product:\n              return `new Matrix(${ m.rows }, ${ m.columns })`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupInput(input) {\n            var table = ${ JSON.stringify(inputLookup) };\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n        }\n        return `function lookupInput(input) {\n          var table = ${ JSON.stringify(inputLookup) };\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(rawInputs) {\n        var table = ${ JSON.stringify(inputLookup) };\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${ inputLookupLength });\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupOutputPartial(output, input) {\n            var table = ${ JSON.stringify(outputLookup) };\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n        }\n        return `function lookupOutput(output) {\n          var table = ${ JSON.stringify(outputLookup) };\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n      }\n      return `function lookupOutput(output) {\n        var table = ${ JSON.stringify(outputLookup) };\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace(\n          'product.weights = input.weights = this.inputValue;',\n          inputLookup && inputSize === 1\n            ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;'\n            : inputSize === 1\n              ? 'product.weights = [input[_i]];'\n              : 'product.weights = input[_i];')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }':${ fnName !== 'forwardFn' ? ` //compiled from ${ fileName(fnName) }` : '' }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const forceForecast = this.inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${ this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput' };\n  var json = ${ jsonString };\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${\n      forceForecast\n        ? inputLookup === outputLookup\n          ? inputLookupLength\n          : `input.length + ${ outputLookupLength - 1 }`\n        : 'input.length' };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      \n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n    ${ inputSize === 1 && inputLookup ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }' : 'output = state.product.weights;' }\n  }\n  ${\n    outputLookup\n      ? outputLookup === inputLookup\n        ? 'return lookupOutputPartial(output, input)'\n        : 'return lookupOutput(output)'\n      : inputSize === 1\n        ? 'return output[0]'\n        : 'return output'\n  };\n  ${ formatInputData() }\n  ${ formatOutputData() }\n  \n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ zeros.toString() }\n  ${ softmax.toString().replace('_2.default', 'Matrix') }\n  ${ randomFloat.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`;\n    return new Function('rawInput', cb ? cb(src) : src);\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenLayers: [20],\n  outputSize: 1,\n  learningRate: RNN.defaults.learningRate,\n  decayRate: RNN.defaults.decayRate,\n  smoothEps: RNN.defaults.smoothEps,\n  regc: RNN.defaults.regc,\n  clipval: RNN.defaults.clipval\n};\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults;\n\nmodule.exports = RNNTimeStep;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst RNN = require('./rnn');\n\nclass LSTM extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // gates parameters\n      // wix\n      inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wih\n      inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bi\n      inputBias: new Matrix(hiddenSize, 1),\n      // wfx\n      forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wfh\n      forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bf\n      forgetBias: new Matrix(hiddenSize, 1),\n      // wox\n      outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // woh\n      outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bo\n      outputBias: new Matrix(hiddenSize, 1),\n      // cell write params\n      // wcx\n      cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wch\n      cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellActivationBias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n\n    const inputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.inputMatrix, inputMatrix),\n          multiply(hiddenLayer.inputHidden, previousResult)\n        ),\n        hiddenLayer.inputBias\n      )\n    );\n\n    const forgetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.forgetMatrix, inputMatrix),\n          multiply(hiddenLayer.forgetHidden, previousResult)\n        ),\n        hiddenLayer.forgetBias\n      )\n    );\n\n    // output gate\n    const outputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.outputMatrix, inputMatrix),\n          multiply(hiddenLayer.outputHidden, previousResult)\n        ),\n        hiddenLayer.outputBias\n      )\n    );\n\n    // write operation on cells\n    const cellWrite = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellActivationMatrix, inputMatrix),\n          multiply(hiddenLayer.cellActivationHidden, previousResult)\n        ),\n        hiddenLayer.cellActivationBias\n      )\n    );\n\n    // compute new cell activation\n    const retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\n    const writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\n    const cell = add(retainCell, writeCell); // new cell contents\n\n    // compute hidden state as gated, saturated cell activations\n    return multiplyElement(outputGate, tanh(cell));\n  }\n}\n\nmodule.exports = LSTM;\n","const Matrix = require('./matrix');\nconst LSTM = require('./lstm');\nconst RNNTimeStep = require('./rnn-time-step');\n\nclass LSTMTimeStep extends RNNTimeStep {\n  static getModel(hiddenSize, prevSize) {\n    return LSTM.getModel.call(this, hiddenSize, prevSize);\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return LSTM.getEquation.call(\n      this,\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    );\n  }\n}\n\nmodule.exports = LSTMTimeStep;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst RNN = require('./rnn');\n\nclass GRU extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // update Gate\n      // wzxh\n      updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wzhh\n      updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bz\n      updateGateBias: new Matrix(hiddenSize, 1),\n      // reset Gate\n      // wrxh\n      resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wrhh\n      resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // br\n      resetGateBias: new Matrix(hiddenSize, 1),\n      // cell write parameters\n      // wcxh\n      cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wchh\n      cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellWriteBias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n    const allOnes = equation.allOnes.bind(equation);\n    const cloneNegative = equation.cloneNegative.bind(equation);\n\n    // update gate\n    const updateGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.updateGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.updateGateBias\n      )\n    );\n\n    // reset gate\n    const resetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.resetGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.resetGateBias\n      )\n    );\n\n    // cell\n    const cell = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix),\n          multiply(\n            hiddenLayer.cellWriteHiddenMatrix,\n            multiplyElement(resetGate, previousResult)\n          )\n        ),\n        hiddenLayer.cellWriteBias\n      )\n    );\n\n    // compute hidden state as gated, saturated cell activations\n    // negate updateGate\n    return add(\n      multiplyElement(\n        add(\n          allOnes(updateGate.rows, updateGate.columns),\n          cloneNegative(updateGate)\n        ),\n        cell\n      ),\n      multiplyElement(previousResult, updateGate)\n    );\n  }\n}\n\nmodule.exports = GRU;\n","// import Matrix from './matrix'\nconst GRU = require('./gru');\nconst RNNTimeStep = require('./rnn-time-step');\n\nclass GRUTimeStep extends RNNTimeStep {\n  static getModel(hiddenSize, prevSize) {\n    return GRU.getModel(hiddenSize, prevSize);\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return GRU.getEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    );\n  }\n}\n\nmodule.exports = GRUTimeStep;\n","const NeuralNetwork = require('../neural-network');\nconst RNN = require('../recurrent/rnn');\nconst RNNTimeStep = require('../recurrent/rnn-time-step');\nconst { FeedForward } = require('../feed-forward');\nconst { Recurrent } = require('../recurrent');\nconst { recurrentZeros } = require('../layer/recurrent-zeros');\n\nconst recurrentJSONTypes = [\n  'RNN',\n  'LSTM',\n  'GRU',\n  'RNNTimeStep',\n  'LSTMTimeStep',\n  'GRUTimeStep',\n  'Recurrent'\n];\n\nfunction drawInput({ pixelX, pixelY, radius, inputs, row, line, fontSize, fontClassName }) {\n  let svg = `<rect\n              x=\"${ pixelX / 2 - radius }\"\n              y=\"${ pixelY / 2 + row * pixelY - radius }\"\n              width=\"${ 2 * radius }\"\n              height=\"${ 2 * radius }\"\n              stroke=\"black\"\n              stroke-width=\"1\"\n              fill=\"${ inputs.color }\" \n              class=\"${ inputs.className }\" />\n            <line\n              x1=\"${ pixelX / 4 }\"\n              y1=\"${ pixelY / 2 + row * pixelY }\"\n              x2=\"${ pixelX / 2 - radius }\"\n              y2=\"${ pixelY / 2 + row * pixelY }\"\n              style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n              class=\"${ line.className }\" />`;\n  if (inputs.labels) {\n    svg += `<text\n              x=\"${ pixelX / 8 }\"\n              y=\"${ pixelY / 2 + row * pixelY - 5 }\"\n              fill=\"black\"\n              font-size=\"${ fontSize }\"\n              class=\"${ fontClassName }\">${ inputs.labels[row] }</text>`;\n  }\n  return svg;\n}\n\nfunction drawNeuron({ pixelX, pixelY, row, column, radius, hidden }) {\n  return `<circle\n            cx=\"${ pixelX / 2 + column * pixelX }\"\n            cy=\"${ pixelY / 2 + row * pixelY }\"\n            r=\"${ radius }\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${ hidden.color }\"\n            class=\"${ hidden.className }\" />`\n}\n\nfunction drawOutput({ pixelX, pixelY, row, column, line, outputs, radius }) {\n  return `<circle\n            cx=\"${ pixelX / 2 + column * pixelX }\"\n            cy=\"${ pixelY / 2 + row * pixelY }\"\n            r=\"${ radius }\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${ outputs.color }\"\n            class=\"${ outputs.className }\" />\n          <line\n            x1=\"${ pixelX / 2 + column * pixelX + radius }\"\n            y1=\"${ pixelY / 2 + row * pixelY }\"\n            x2=\"${ pixelX / 2 + column * pixelX + pixelX / 4 }\"\n            y2=\"${ pixelY / 2 + row * pixelY }\"\n            style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n            class=\"${ line.className }\" />`\n}\n\nfunction drawBackwardConnections({ pixelX, pixelY, row, column, radius, lineY, line, previousConnectionIndex }) {\n  return `<line\n            x1=\"${ pixelX / 2 + (column - 1) * pixelX + radius }\"\n            y1=\"${ lineY / 2 + previousConnectionIndex * lineY }\"\n            x2=\"${ pixelX / 2 + column * pixelX - radius }\"\n            y2=\"${ pixelY / 2 + row * pixelY }\"\n            style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n            class=\"${ line.className }\" />`;\n}\n\nfunction neuralNetworkToSVG(options) {\n  const { sizes, height, width } = options;\n  let svg = '';\n  const pixelX = width / sizes.length;\n  for (let column = 0; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      if (column === 0) {\n        svg += drawInput(Object.assign({ pixelX, pixelY, row, column }, options));\n      } else {\n        if (column === sizes.length - 1) {\n          svg += drawOutput(Object.assign({ pixelX, pixelY, row, column }, options));\n        } else {\n          svg += drawNeuron(Object.assign({ pixelX, pixelY, row, column }, options));\n        }\n        const previousSize = sizes[column - 1];\n        const lineY = height / previousSize;\n        for (let previousConnectionIndex = 0; previousConnectionIndex < previousSize; previousConnectionIndex++) {\n          svg += drawBackwardConnections(Object.assign({ pixelX, pixelY, row, column, lineY, previousConnectionIndex }, options));\n        }\n      }\n    }\n  }\n  return svg;\n}\n\nfunction rnnToSVG(options) {\n  const { width, height, recurrentLine, sizes, radius } = options;\n  const pixelX = width / sizes.length;\n  let svg = `<defs>\n              <marker id=\"arrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"8\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                <path d=\"M0,0 L0,6 L9,3 z\" fill=\"${ recurrentLine.color }\" />\n              </marker>\n            </defs>`;\n  svg += neuralNetworkToSVG(options);\n  for (let column = 1; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      svg += drawRecurrentConnections({ pixelX, pixelY, row, column, radius, recurrentLine });\n    }\n  }\n  return svg;\n\n  function drawRecurrentConnections({ pixelX, pixelY, row, column, radius, recurrentLine }) {\n    const moveX = (pixelX / 2 + column * pixelX + radius) + 1;\n    const moveY = pixelY / 2 + row * pixelY;\n    const x = (moveX - (radius * 2)) - 2;\n    const y = moveY;\n    const x1 = x + 100;\n    const y1 = y + 50;\n    const x2 = moveX - 100;\n    const y2 = moveY + 50;\n    return `<path\n              d=\"M ${ moveX } ${ moveY } C ${ x1 } ${ y1 }, ${ x2 } ${ y2 }, ${ x } ${ y }\"\n              stroke=\"${ recurrentLine.color }\"\n              stroke-width=\"${ recurrentLine.width }\"\n              fill=\"transparent\"\n              stroke-linecap=\"round\"\n              marker-end=\"url(#arrow)\"\n              class=\"${ recurrentLine.className }\" />`;\n  }\n}\n\nfunction getFeedForwardLayers(network) {\n  const inputLayer = network.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(network.hiddenLayers[0](inputLayer));\n  for (let i = 1; i < network.hiddenLayers.length; i++) {\n    hiddenLayers.push(network.hiddenLayers[i](hiddenLayers[i - 1]));\n  }\n  const outputLayer = network.outputLayer(hiddenLayers[hiddenLayers.length - 1]);\n  return {\n    inputLayer,\n    hiddenLayers,\n    outputLayer,\n    layerCount: 1 + hiddenLayers.length + 1\n  };\n}\n\nfunction getRecurrentLayers(network) {\n  const inputLayer = network.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(network.hiddenLayers[0](inputLayer, recurrentZeros(), 0));\n  for (let i = 1; i < network.hiddenLayers.length; i++) {\n    hiddenLayers.push(network.hiddenLayers[i](hiddenLayers[i - 1], recurrentZeros(), i));\n  }\n  const outputLayer = network.outputLayer(hiddenLayers[hiddenLayers.length - 1]);\n  return {\n    inputLayer,\n    hiddenLayers,\n    outputLayer,\n    layerCount: 1 + hiddenLayers.length + 1\n  };\n}\n\nfunction wrapSVG(svgBody, width, height) {\n  return `<svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\"\n            width=\"${ width }\"\n            height=\"${ height }\">${ svgBody }</svg>`;\n}\n\nfunction getSizes({sizes, inputSize, outputSize, hiddenLayers }) {\n  return (typeof inputSize === 'number'\n    && Array.isArray(hiddenLayers)\n    && hiddenLayers.every(l => typeof l === 'number')\n    && typeof outputSize === 'number')\n  ? [inputSize]\n      .concat(hiddenLayers)\n      .concat([outputSize])\n  : sizes\n}\n\nfunction toSVG(net, options) {\n  //default values\n  const defaultOptions = {\n    line: {\n      width: 0.5,\n      color: 'black',\n      className: 'connection'\n    },\n    recurrentLine: {\n      width: 1,\n      color: 'red',\n      className: 'recurrence'\n    },\n    inputs: {\n      color:'rgba(0, 128, 0, 0.5)',\n      labels: null,\n      className: 'input'\n    },\n    outputs: {\n      color:'rgba(100, 149, 237, 0.5)',\n      className: 'output'\n    },\n    hidden: {\n      color:'rgba(255, 127, 80, 0.5)',\n      className: 'hidden-neuron'\n    },\n    fontSize: '14px',\n    fontClassName: 'label',\n    radius: 8,\n    width: 400,\n    height: 250\n  };\n\n  const mergedOptions = { ...defaultOptions, ...options };\n  const {\n    width,\n    height,\n    inputs,\n  } = mergedOptions;\n\n  const isRNN = net.hasOwnProperty('model')\n    || net instanceof Recurrent\n    || (net.type && recurrentJSONTypes.indexOf(net.type) !== -1);\n\n  // Get network size array for NeuralNetwork or NeuralNetworkGPU\n  let sizes = null;\n  if (\n    net instanceof NeuralNetwork\n    || net instanceof RNN\n    || net instanceof RNNTimeStep\n  ) {\n    sizes = getSizes(net);\n  }\n  // Get network size array for NeuralNetwork json\n  else if (net.sizes) {\n    sizes = net.sizes;\n  }\n  // get network size for Recurrent\n  else if (net instanceof Recurrent) {\n    const { inputLayer, hiddenLayers, outputLayer } = getRecurrentLayers(net);\n    sizes = [inputLayer.height]\n      .concat(hiddenLayers.map(l => l.height))\n      .concat([outputLayer.height]);\n  }\n  // get network size for FeedForward\n  else if (net instanceof FeedForward) {\n    const { inputLayer, hiddenLayers, outputLayer } = getFeedForwardLayers(net);\n    sizes = [inputLayer.height]\n      .concat(hiddenLayers.map(l => l.height))\n      .concat([outputLayer.height]);\n  }\n  // handle json, recurrent first\n  else if (isRNN) {\n    if (net.options) {\n      sizes = getSizes(net.options);\n    }\n  }\n  // handle json, NeuralNetwork\n  else {\n    sizes = getSizes(net);\n  }\n\n  if (!sizes) throw new Error('sizes not set');\n\n  if (inputs.labels && inputs.labels.length !== sizes[0]) throw new Error('not enough labels for inputs');\n\n  if (isRNN) {\n    return wrapSVG(rnnToSVG({ ...mergedOptions, sizes }), width, height);\n  } else {\n    return wrapSVG(neuralNetworkToSVG({ ...mergedOptions, sizes }), width, height);\n  }\n}\n\nmodule.exports = toSVG;\n","const activation = require('./activation');\nconst CrossValidate = require('./cross-validate');\nconst layer = require('./layer');\nconst layerTypes = require('./layer/types');\nconst likely = require('./likely');\nconst lookup = require('./lookup');\nconst praxis = require('./praxis');\nconst { FeedForward } = require('./feed-forward');\nconst NeuralNetwork = require('./neural-network');\nconst NeuralNetworkGPU = require('./neural-network-gpu');\nconst TrainStream = require('./train-stream');\nconst { Recurrent } = require('./recurrent');\nconst RNNTimeStep = require('./recurrent/rnn-time-step');\nconst LSTMTimeStep = require('./recurrent/lstm-time-step');\nconst GRUTimeStep = require('./recurrent/gru-time-step');\nconst RNN = require('./recurrent/rnn');\nconst LSTM = require('./recurrent/lstm');\nconst GRU = require('./recurrent/gru');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst ones = require('./utilities/ones');\nconst random = require('./utilities/random');\nconst randomWeight = require('./utilities/random-weight');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst DataFormatter = require('./utilities/data-formatter');\nconst zeros = require('./utilities/zeros');\nconst toSVG = require('./utilities/to-svg');\n\nconst brain = {\n  activation,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n    toSVG,\n  },\n};\n\nif (typeof window !== 'undefined') {\n  window.brain = brain //eslint-disable-line\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = brain;\n}\n"]}