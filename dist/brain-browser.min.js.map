{"version":3,"sources":["activation/leaky-relu.js","activation/relu.js","activation/sigmoid.js","activation/tanh.js","activation/index.js","cross-validate.js","../node_modules/gpu.js/dist/gpu-browser.js","utilities/kernel.js","utilities/zeros.js","utilities/zeros-2d.js","utilities/layer-size.js","utilities/zeros-3d.js","layer/base.js","layer/activation.js","layer/types.js","layer/add.js","praxis/base.js","praxis/arthur-deviation-weights.js","praxis/arthur-deviation-biases.js","utilities/random-weight.js","utilities/randos.js","utilities/randos-2d.js","layer/random.js","layer/multiply.js","layer/sigmoid.js","layer/arthur-feed-forward.js","utilities/layer-setup.js","utilities/randos-3d.js","utilities/values.js","layer/convolution.js","layer/dropout.js","layer/feed-forward.js","layer/fully-connected.js","layer/negative.js","layer/multiply-element.js","utilities/ones.js","utilities/ones-2d.js","layer/ones.js","layer/tanh.js","layer/zeros.js","layer/gru.js","layer/input.js","layer/leaky-relu.js","layer/lstm.js","layer/target.js","layer/output.js","layer/pool.js","layer/relu.js","layer/recurrent.js","layer/regression.js","layer/soft-max.js","layer/svm.js","layer/transpose.js","layer/index.js","likely.js","lookup.js","praxis/adam.js","praxis/momentum-root-mean-squared-propagation.js","praxis/index.js","utilities/mse-2d.js","utilities/layer-from-json.js","utilities/traverse-layers-from.js","utilities/flatten-layers.js","feed-forward.js","../src/thaw.js","../src/block.js","../src/index.js","../node_modules/events/events.js","../node_modules/inherits/inherits_browser.js","../node_modules/process/browser.js","../node_modules/process-nextick-args/index.js","../node_modules/stream-browserify/node_modules/isarray/index.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/safe-buffer/index.js","../node_modules/core-util-is/lib/util.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/util-deprecate/browser.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/stream-browserify/node_modules/string_decoder/lib/string_decoder.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/stream-browserify/node_modules/readable-stream/readable-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/writable-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/duplex-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/transform.js","../node_modules/stream-browserify/node_modules/readable-stream/passthrough.js","../node_modules/stream-browserify/index.js","train-stream.js","utilities/to-array.js","utilities/max.js","utilities/mse.js","utilities/range.js","utilities/lookup-table.js","utilities/cast.js","neural-network.js","neural-network-gpu.js","layer/recurrent-connection.js","layer/recurrent-input.js","layer/recurrent-zeros.js","recurrent.js","recurrent/matrix/index.js","utilities/random.js","recurrent/matrix/random-matrix.js","recurrent/matrix/ones-matrix.js","recurrent/matrix/copy.js","recurrent/matrix/clone-negative.js","recurrent/matrix/add.js","recurrent/matrix/add-b.js","recurrent/matrix/all-ones.js","recurrent/matrix/multiply.js","recurrent/matrix/multiply-b.js","recurrent/matrix/multiply-element.js","recurrent/matrix/multiply-element-b.js","recurrent/matrix/relu.js","recurrent/matrix/relu-b.js","recurrent/matrix/row-pluck.js","recurrent/matrix/row-pluck-b.js","recurrent/matrix/sigmoid.js","recurrent/matrix/sigmoid-b.js","recurrent/matrix/tanh.js","recurrent/matrix/tanh-b.js","recurrent/matrix/softmax.js","recurrent/matrix/equation.js","recurrent/matrix/sample-i.js","recurrent/matrix/max-i.js","utilities/data-formatter.js","recurrent/rnn.js","utilities/array-lookup-table.js","recurrent/rnn-time-step.js","recurrent/lstm.js","recurrent/lstm-time-step.js","recurrent/gru.js","recurrent/gru-time-step.js","utilities/to-svg.js","index.js"],"names":["activate","weight","measure","error","module","exports","Math","max","delta","value","exp","tanh","leakyRelu","require","relu","sigmoid","CrossValidate","Classifier","options","json","trainOpts","trainSet","testSet","classifier","beginTrain","Date","now","trainingStats","train","beginTest","testStats","test","endTest","stats","Object","assign","trainTime","testTime","iterations","total","learningRate","hiddenLayers","network","toJSON","array","i","length","j","floor","random","temp","data","k","Error","size","constructor","Array","shuffleArray","newData","keys","forEach","key","avgs","stat","binaryStats","truePos","trueNeg","falsePos","falseNeg","results","isBinary","dclone","slice","splice","result","testPartition","hasOwnProperty","push","precision","recall","accuracy","testSize","trainSize","sets","fromJSON","crossValidateJson","reduce","prev","cur","Infinity","instance","f","define","amd","window","global","self","GPU","r","e","n","t","o","c","u","a","code","p","call","factory","reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","set","pos","isIdentifierStart","astral","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","prototype","toString","has","obj","propName","isArray","wordsRegexp","words","replace","Position","line","col","column","offset","SourceLocation","start","end","sourceFile","getLineInfo","input","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","getOptions","opts","opt","tokens","token","pushComment","block","text","startLoc","endLoc","comment","type","loc","range","SCOPE_TOP","SCOPE_FUNCTION","SCOPE_VAR","SCOPE_ASYNC","SCOPE_GENERATOR","functionFlags","async","generator","BIND_NONE","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","lastIndexOf","curLine","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","prototypeAccessors","inFunction","configurable","inGenerator","inAsync","allowSuper","allowDirectSuper","treatFunctionsAsVar","parse","node","startNode","nextToken","parseTopLevel","get","currentVarScope","flags","currentThisScope","treatFunctionsAsVarInScope","currentScope","inNonArrowFunction","extend","len","plugins","arguments","cls","parseExpressionAt","parser","parseExpression","tokenizer","defineProperties","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","body","stmt","parseStatement","list","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","await","parseForIn","init","toAssignable","checkLVal","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","empty","handler","clause","param","parseBindingAtom","simple","finalizer","object","i$1","label$1","statementStart","indexOf","createNewLexicalScope","update","isForIn","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","classBody","hadConstructor","element","parseClassElement","superClass","constructorAllowsSuper","this$1","method","tryContextual","noLineBreak","computed","startNodeAt","static","isGenerator","parsePropertyName","allowsDirectSuper","parseClassMethod","parseMethod","parseExprSubscripts","parseExprAtom","checkExport","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","proto","other","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","oldShorthandAssign","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","parseSubscripts","base","noCalls","maybeAsyncArrow","parseSubscript","property","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","readRegexp","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","parseNew","parseExprImport","parseDynamicImport","errorPos","bigint","val","innerStartPos","spreadStart","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","isImport","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","allowDuplicates","nameHash","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","Scope","var","lexical","functions","scope","redeclared","scope$2","scope$3","Node","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","ecma9BinaryProperties","ecma10BinaryProperties","unicodeBinaryProperties","ecma11BinaryProperties","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","unicodeScriptValues","ecma11ScriptValues","buildUnicodeData","d","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$8","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString","ch","isSyntaxCharacter","isControlLetter","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","isRegExpIdentifierStart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$9","codePointToString$1","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","readInt","radix","BigInt","startsWithDot","octal","str$1","val$1","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","word","escStart","esc","acorn","version","tokTypes","keywordTypes","tokContexts","defineProperty","glWiretap","gl","readPixelsVariableName","contextName","throwGetError","useTrackablePrimitives","readPixelsFile","recording","variables","onReadPixels","onUnrecognizedArgumentLookup","proxy","Proxy","listen","addComment","checkThrowError","insertVariable","setIndent","getContextVariableName","indent","getError","variableName","contextVariables","extension","getExtension","tappedExtension","glExtensionWiretap","getEntity","targetVariableName","getVariableName","argumentAsStrings","join","width","height","sourceVariable","imageVariable","imageCount","readPixels","apply","argumentsToString","addVariable","drawBuffers","writePPM","methodCallToString","trackablePrimitive","entityNames","spaces","repeat","args","getExtensionEntity","drawBuffersWEBGL","extensionEntityNames","from","map","arg","argumentToString","hasLines","hasSingleQuotes","hasDoubleQuotes","JSON","stringify","instantiationString","setupArguments","newArguments","toArray","apiDecorate","kernel","setOutput","output","setupOutput","graphical","setupGraphical","setConstants","constants","setGraphical","setCanvas","canvas","setContext","destroy","validateSettings","Promise","resolve","reject","getPixels","flip","x","y","flipPixels","pixels","halfHeight","bytesPerRow","Uint8ClampedArray","topOffset","bottomOffset","subarray","copyWithin","_imageData","color","g","b","thread","_colorData","mockMethod","methods","createImageData","z","gpuMock","fn","settings","mock3D","cube","matrix","row","Float32Array","_fn","mock2DGraphical","mock2D","mock1D","utils","alias","fnString","Function","getArgumentNamesFromString","getFunctionBodyFromString","FunctionNode","CPUFunctionNode","ast","retArr","isRootKernel","argumentNames","argumentName","astGeneric","returnType","getType","leadingReturnStatement","followingReturnStatement","isSubKernel","isNaN","astErrorOutput","idtNode","forNode","initArr","testArr","updateArr","bodyArr","isSafe","pushState","includes","popState","iVariableName","getInternalVariableName","whileNode","doWhileNode","assNode","getDeclaration","assignable","bNode","isState","varDecNode","warnVarUsage","varWarn","ifNode","tNode","mNode","getMemberExpressionDetails","signature","xProperty","yProperty","zProperty","origin","removeIstanbulCoverage","markupName","isInput","constant","constantTypes","argumentSizes","dynamicArguments","functionName","astMemberExpressionUnroll","calledFunctions","isAstMathFunction","onFunctionCall","targetTypes","lookupFunctionArgumentTypes","argumentType","triggerImplyArgumentType","arrNode","arrLen","subNode","cpuKernelString","cpuKernel","header","thisProperties","beforeReturn","useFunctionKeyword","constantsToString","colorFn","flattenFunctionToString","thisLookup","propertyName","findDependency","getPixelsFn","constantKeys","argumentTypes","flattenedImageTo3DArray","_imageTo3DArray","doNotDefine","flattenedImageTo2DArray","_mediaTo2DArray","_kernelString","Kernel","FunctionBuilder","CPUKernel","mergeSettings","_prependedString","translatedSources","features","combinedKernel","freeze","kernelMap","isIntegerDivisionAccurate","document","createElement","OffscreenCanvas","getContext","argType","getVariableType","strictIntegers","getDimensions","checkOutput","subKernels","functionBuilder","fromKernel","getPrototypes","getKernelResultType","setupConstants","translateSource","kernelString","getKernelString","debug","console","log","run","bind","built","kernelThreadString","filter","shift","_getLoopMaxString","injectedNative","_processConstants","_processArguments","_graphicalKernelBody","_resultKernelBody","loopMaxIterations","media","videoWidth","videoHeight","ctx","drawImage","pixelsData","getImageData","imageArray","pixel","images","imagesArray","_resultKernel1DLoop","_kernelOutput","_resultKernel2DLoop","_resultKernel3DLoop","_graphicalKernel2DLoop","_graphicalOutput","constructorString","_getKernelResultTypeConstructorString","_mapSubKernels","subKernel","removeCanvasReference","functionNodes","rootNode","subKernelNodes","nativeFunctions","functionMap","nativeFunctionNames","lookupChain","functionNodeDependencies","functionCalls","nativeFunction","extraNodeOptions","kernelArguments","kernelConstants","argumentBitRatios","constantBitRatios","optimizeFloatMemory","dynamicOutput","onIstanbulCoverageVariable","kernelConstant","needsArgumentType","assignArgumentType","lookupReturnType","requestingNode","lookupFunctionArgumentName","argumentIndex","lookupFunctionArgumentBitRatio","triggerImplyArgumentBitRatio","calleeFunctionName","assignArgumentBitRatio","trackFunctionCall","onNestedFunction","nestedFunction","nodeOptions","traceFunctionAST","addFunctionNode","rootNodeOptions","functionNode","retList","functionIndex","traceFunctionCalls","dependantFunctionName","getPrototypesFromFunctionNames","reverse","functionList","ret","nativeIndex","jsonFunctionNodes","jsonFunctionNode","getStringFromFunctionNames","_isNativeFunction","_lookupNativeFunctionReturnType","_isFunction","_getFunction","getJsAST","Boolean","_getNativeFunction","bitRatio","fnNode","calleeNode","calleeBitRatio","Set","add","subKernelNode","called","functionCallIndex","FunctionTracer","getFunctionNameFromString","identifiers","contexts","states","strictTypingChecking","fixIntegerDivisionAccuracy","literalTypes","validate","_string","_internalVariableNames","isFunctionString","firstExpression","inParser","functionAST","forceInteger","dependencies","getDependencies","valueType","realType","isSafeDependencies","identifier","typeLookupMap","constantName","trim","literalKey","astKey","Number","isInteger","inferArgumentTypesIfNeeded","rightType","lastType","isAstVariable","getVariableSignature","findIdentifierOrigin","variableSignature","getLookupType","getConstantType","isAstMathVariable","lastReturn","findLastReturn","every","dependency","isNotSafe","details","unshift","signatureString","allowedExpressions","astFunctionDeclaration","astFunctionExpression","astReturnStatement","astLiteral","astBinaryExpression","astIdentifierExpression","astAssignmentExpression","astExpressionStatement","astEmptyStatement","astBlockStatement","astIfStatement","astSwitchStatement","astBreakStatement","astContinueStatement","astForStatement","astWhileStatement","astDoWhileStatement","astVariableDeclaration","astVariableDeclarator","astThisExpression","astSequenceExpression","astUnaryExpression","astUpdateExpression","astLogicalExpression","astMemberExpression","astCallExpression","astArrayExpression","astDebuggerStatement","astConditionalExpression","debugString","getAstString","splitLines","lineBefore","isChildFunction","astFunction","esNode","eNode","brNode","crNode","firstDeclaration","markupType","typeMap","iVarDecNode","sNode","sequenceResult","isIstanbulAST","expressionResult","uNode","unaryResult","checkAndUpconvertBitwiseUnary","logNode","astToFind","stack","atNode","warn","separator","runningContexts","returnStatements","inLoopInit","scan","newContext","currentContext","normalizeDeclarations","toStringWithoutUtils","getRenderString","targetName","readBackValue","getToArrayString","kernelResult","textureName","flattenedFunctions","findKernelValue","kernelValues","values","uploadedValues","HTMLImageElement","kernelValue","uploadValue","variableIndex","variable","glKernelString","originKernel","setupContextString","destroyContextString","build","postResult","subKernelsResultVariableSetup","subKernelsResultIndex","pipeline","immutable","tactic","checkContext","kernelArgument","imageIndex","texture","flattenTo","flatten2dArrayTo","flatten3dArrayTo","flatten4dArrayTo","renderOutput","renderTexture","formatValues","varName","renderKernels","getStringValueHandler","mappedTextures","subKernelResult","subKernelTextureName","rendered","getGetPixelsString","constantsUpload","GLTextureArray2Float","GLTextureArray2Float2D","GLTextureArray2Float3D","GLTextureArray3Float","GLTextureArray3Float2D","GLTextureArray3Float3D","GLTextureArray4Float","GLTextureArray4Float2D","GLTextureArray4Float3D","GLTextureFloat","GLTextureFloat2D","GLTextureFloat3D","GLTextureMemoryOptimized","GLTextureMemoryOptimized2D","GLTextureMemoryOptimized3D","GLTextureUnsigned","GLTextureUnsigned2D","GLTextureUnsigned3D","GLTextureGraphical","GLKernel","transferValues","TextureConstructor","renderRawOutput","texSize","translatedSource","compiledFragmentShader","compiledVertexShader","switchingKernels","fix","warnDeprecated","floatTextures","testContext","testCanvas","kernelFunction","v1","v2","isDrawBuffers","getIsDrawBuffers","isFloatRead","getIsFloatRead","getIsIntegerDivisionAccurate","isTextureFloat","getIsTextureFloat","channelCount","getChannelCount","maxTextureSize","getMaxTextureSize","lowIntPrecision","getShaderPrecisionFormat","FRAGMENT_SHADER","LOW_INT","lowFloatPrecision","LOW_FLOAT","mediumIntPrecision","MEDIUM_INT","mediumFloatPrecision","MEDIUM_FLOAT","highIntPrecision","HIGH_INT","highFloatPrecision","HIGH_FLOAT","isStartingVariableName","isVariableChar","char","nextChar","lastKernel","threadDim","w","h","ceil","RGBA","FLOAT","bytes","Uint8Array","UNSIGNED_BYTE","buffer","splitArray","readPackedPixelsToUint8Array","readPackedPixelsToFloat32Array","renderKernelsToTextures","requestFallback","renderKernelsToArrays","renderValues","erect3DPackedFloat","erect2DPackedFloat","erectPackedFloat","readFloatPixelsToFloat32Array","erectMemoryOptimized3DFloat","erectMemoryOptimized2DFloat","erectMemoryOptimizedFloat","erect3DArray2","erect2DArray2","erectArray2","erect3DArray3","erect2DArray3","erectArray3","erect3DArray4","erect2DArray4","erectArray4","erect3DFloat","erect2DFloat","erectFloat","getMainResultNumberTexture","getMainResultArray2Texture","getMainResultArray3Texture","getMainResultArray4Texture","getMainResultGraphical","getMainResultMemoryOptimizedFloats","getMainResultTexture","getMainResultPackedPixels","linesToString","getMainResultKernelNumberTexture","getMainResultSubKernelNumberTexture","getMainResultKernelArray2Texture","getMainResultSubKernelArray2Texture","getMainResultKernelArray3Texture","getMainResultSubKernelArray3Texture","getMainResultKernelArray4Texture","getMainResultSubKernelArray4Texture","variablePrecision","getVariablePrecisionString","clone","existingValue","newOutput","toKernelOutput","newThreadDim","newTexSize","getKernelTextureSize","oldTexSize","oldPrecision","newPrecision","switchKernels","needed","bindFramebuffer","FRAMEBUFFER","framebuffer","updateMaxTexSize","viewport","maxTexSize","delete","reason","textureSize","isInt","low","medium","high","requiredSize","log2","rangeMax","prevArg","_refs","mappedTexture","int","float","vec2","vec3","vec4","GLTexture","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","_deleted","Texture","cloneTexture","existingFramebuffer","getParameter","FRAMEBUFFER_BINDING","_framebuffer","selectTexture","target","createTexture","texImage2D","internalFormat","textureFormat","textureType","copyTexSubImage2D","deleteFramebuffer","activeTexture","TEXTURE31","bindTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","WebGLKernel","isSupported","testExtensions","HeadlessGLKernel","preserveDrawingBuffer","extensions","STACKGL_resize_drawingbuffer","STACKGL_destroy_context","OES_texture_float","OES_texture_float_linear","OES_element_index_uint","WEBGL_draw_buffers","fallbackRequested","resize","WEBGL_color_buffer_float","getFeatures","RENDERER","MAX_DRAW_BUFFERS_WEBGL","MAX_TEXTURE_SIZE","setupFeatureChecks","KernelValue","onRequestContextHandle","onUpdateValueMismatch","contextHandle","forceUploadEachRun","Input","useLegacyEncoder","onRequestFallback","forceUploadKernelConstants","gpu","functionToIFunction","initCanvas","initContext","initPlugins","Int32Array","getBitRatio","needsConstantTypes","setDynamicOutput","setDynamicArguments","removeCanvasReferences","Int8Array","Uint16Array","Int16Array","argumentsTypes","pluginNames","plugin","fragmentShader","WebGLFunctionNode","castLiteralToFloat","castValueToInteger","castLiteralToInteger","round","checkAndUpconvertOperator","castValueToFloat","leftType","operatorMap","literalResult","literalType","bitwiseResult","checkAndUpconvertBitwiseOperators","upconvertableOperators","foundOperator","inForLoopInit","info","actualType","declarationResult","fallingThrough","defaultResult","movingDefaultToEnd","pastFirstIf","testType","memberExpressionPropertyMarkup","memberExpressionXYZ","isMathFunction","functionMatch","functionReplace","targetType","WebGLKernelValueBoolean","WebGLKernelValueFloat","WebGLKernelValueInteger","WebGLKernelValueHTMLImage","WebGLKernelValueDynamicHTMLImage","WebGLKernelValueHTMLVideo","WebGLKernelValueDynamicHTMLVideo","WebGLKernelValueSingleInput","WebGLKernelValueDynamicSingleInput","WebGLKernelValueUnsignedInput","WebGLKernelValueDynamicUnsignedInput","WebGLKernelValueMemoryOptimizedNumberTexture","WebGLKernelValueDynamicMemoryOptimizedNumberTexture","WebGLKernelValueNumberTexture","WebGLKernelValueDynamicNumberTexture","WebGLKernelValueSingleArray","WebGLKernelValueDynamicSingleArray","WebGLKernelValueSingleArray1DI","WebGLKernelValueDynamicSingleArray1DI","WebGLKernelValueSingleArray2DI","WebGLKernelValueDynamicSingleArray2DI","WebGLKernelValueSingleArray3DI","WebGLKernelValueDynamicSingleArray3DI","WebGLKernelValueSingleArray2","WebGLKernelValueSingleArray3","WebGLKernelValueSingleArray4","WebGLKernelValueUnsignedArray","kernelValueMaps","unsigned","dynamic","WebGLKernelValueDynamicUnsignedArray","single","lookupKernelValueType","undefined","WebGLKernelValue","setUniform1i","sizeId","dimensionsId","checkSize","dimensions","setUniform3iv","setUniform2iv","inputTexture","getMemoryOptimizedFloatTextureSize","uploadArrayLength","setShape","getMemoryOptimizedPackedTextureSize","Type","getTransferArrayType","preUploadValue","setUniform1f","requestTexture","inputImage","initialValueConstructor","pixelStorei","UNPACK_FLIP_Y_WEBGL","onRequestTexture","onRequestIndex","setupTexture","Uint32Array","Float64Array","valuesFlat","deleteTexture","updateTextureArgumentRefs","valueDimensions","setUniform2fv","setUniform3fv","setUniform4fv","TranserArrayType","mrud","vertexShader","canvases","maxTexSizes","endianness","systemEndianness","argumentTextureCount","constantTextureCount","fragShader","vertShader","drawBuffersMap","onRequestSwitchKernel","textureCache","programUniformLocationCache","uniform1fCache","uniform1iCache","uniform2fCache","uniform2fvCache","uniform2ivCache","uniform3fvCache","uniform3ivCache","uniform4fvCache","uniform4ivCache","WebGLRenderingContext","isContextMatch","alpha","depth","antialias","pluginsToUse","some","pluginName","checkTextureSize","canvasIndex","needsArgumentTypes","textureIndexes","TEXTURE0","initExtensions","failureResult","pickRenderStrategy","enable","SCISSOR_TEST","getVertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getFragmentShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","vertices","texCoords","texCoordOffset","byteLength","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","bufferSubData","aPosLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","aTexCoordLoc","useProgram","updateValue","_setupOutputTexture","_setupSubOutputTextures","getPrototypeString","setupReturnTypes","getSubKernelResultType","scissor","setUniform2f","onBeforeRun","bindRenderbuffer","RENDERBUFFER","drawArrays","TRIANGLE_STRIP","getInternalFormat","beforeMutate","format","getTextureFormat","getUniformLocation","uniform1f","uniform1i","value1","value2","cache","uniform2f","uniform2fv","uniform2iv","uniform3fv","uniform3iv","uniform4fv","uniform4iv","HEADER","_getHeaderString","LOOP_MAX","PLUGINS","_getPluginsString","CONSTANTS","_getConstantsString","DECODE32_ENDIANNESS","_getDecode32EndiannessString","ENCODE32_ENDIANNESS","_getEncode32EndiannessString","DIVIDE_WITH_INTEGER_CHECK","_getDivideWithIntegerCheckString","INJECTED_NATIVE","_getInjectedNative","MAIN_CONSTANTS","_getMainConstantsString","MAIN_ARGUMENTS","_getMainArgumentsString","KERNEL","MAIN_RESULT","getMainResultString","FLOAT_TACTIC_DECLARATION","getFloatTacticDeclaration","INT_TACTIC_DECLARATION","getIntTacticDeclaration","SAMPLER_2D_TACTIC_DECLARATION","getSampler2DTacticDeclaration","SAMPLER_2D_ARRAY_TACTIC_DECLARATION","getSampler2DArrayTacticDeclaration","getSource","getKernelResultDeclaration","getMainResultKernelPackedPixels","getMainResultSubKernelPackedPixels","channels","channel","getMainResultKernelMemoryOptimizedFloats","getMainResultSubKernelMemoryOptimizedFloats","src","artifact","replaceArtifacts","_getFragShaderArtifactMap","_getVertShaderArtifactMap","deleteBuffer","deleteShader","deleteProgram","textureCacheIndex","idx","destroyExtensions","loseContext","WebGL2FunctionNode","WebGL2KernelValueBoolean","WebGL2KernelValueFloat","WebGL2KernelValueInteger","WebGL2KernelValueHTMLImage","WebGL2KernelValueDynamicHTMLImage","WebGL2KernelValueHTMLImageArray","WebGL2KernelValueDynamicHTMLImageArray","WebGL2KernelValueHTMLVideo","WebGL2KernelValueDynamicHTMLVideo","WebGL2KernelValueSingleInput","WebGL2KernelValueDynamicSingleInput","WebGL2KernelValueUnsignedInput","WebGL2KernelValueDynamicUnsignedInput","WebGL2KernelValueMemoryOptimizedNumberTexture","WebGL2KernelValueDynamicMemoryOptimizedNumberTexture","WebGL2KernelValueNumberTexture","WebGL2KernelValueDynamicNumberTexture","WebGL2KernelValueSingleArray","WebGL2KernelValueDynamicSingleArray","WebGL2KernelValueSingleArray1DI","WebGL2KernelValueDynamicSingleArray1DI","WebGL2KernelValueSingleArray2DI","WebGL2KernelValueDynamicSingleArray2DI","WebGL2KernelValueSingleArray3DI","WebGL2KernelValueDynamicSingleArray3DI","WebGL2KernelValueSingleArray2","WebGL2KernelValueSingleArray3","WebGL2KernelValueSingleArray4","WebGL2KernelValueUnsignedArray","WebGL2KernelValueDynamicUnsignedArray","TEXTURE_2D_ARRAY","texImage3D","texSubImage3D","RGBA32F","WebGL2Kernel","EXT_color_buffer_float","R32F","RED","RG32F","RG","REPEAT","texStorage2D","WebGL2RenderingContext","MAX_DRAW_BUFFERS","lib","kernelRunShortcut","kernelOrder","kernelTypes","internalKernels","mode","kernels","chooseKernel","addFunction","addNativeFunction","Worker","importScripts","HTMLCanvasElement","ExternalKernel","isFunction","devKernel","upgradeDeprecatedCreateKernelSettings","switchableKernels","settingsCopy","fallbackKernel","kernelRun","dynamicArgument","replaceKernel","mergedSettings","reasons","existingKernel","newKernel","createKernel","firstKernel","setPipeline","nativeFunctionArguments","nativeFunctionReturnType","setTimeout","destroyContext","upgradedSettings","floatOutput","outputToTexture","outputImmutable","webGLKernelValueMaps","webGL2KernelValueMaps","mathRandom","bindKernelToShortcut","shortcut","allPropertiesOf","substring","__defineGetter__","__defineSetter__","resetSwitchingKernels","accept","replacementKernel","functionReturnType","FUNCTION_NAME","STRIP_COMMENTS","ARGUMENT_NAMES","_systemEndianness","getSystemEndianness","ArrayBuffer","funcObj","toLowerCase","funcStr","fnStr","isActiveClone","nodeName","texelCount","closestSquareDimensions","sqrt","totalArea","roundTo","pad","dim","part","byteOffset","lines","props","getOwnPropertyNames","getPrototypeOf","oldName","newName","sourceString","yResults","xStart","xEnd","zResults","xResults","xResultsMax","XResultsMax","flattened","functionDependencies","flatten","flat","foundSource","flattenedFunctionDependencies","functionDependency","normalizedDeclarations","declarationIndex","propertyIndex","subPropertyIndex","subProperty","elementIndex","splitHTMLImageToRGB","image","rKernel","gKernel","bKernel","aKernel","splitRGBAToCanvases","rgba","visualKernelR","visualKernelG","visualKernelB","visualKernelA","gpuInstance","setup","teardown","makeKernel","createKernelMap","makeDevKernel","kernelInput","release","zeros","checkSameSize","layer1","layer2","zeros2D","zeros3D","Base","deltas","weights","praxis","praxisOpts","defaults","setupPraxis","layer","predictKernel","compareKernel","previousLayer","nextLayer","jsonLayer","Activation","inputLayer","Internal","Filter","Model","Modifier","Operator","predict","inputWeights1","inputWeights2","Add","inputLayer1","inputLayer2","layerTemplate","updateChange","changes","incomingWeights","inputDeltas","lastChange","inputDelta","incoming","change","momentum","ArthurDeviationWeights","weightsLayer","incomingLayer","deltaLayer","setupKernels","arthurDeviationWeights","ArthurDeviationBiases","arthurDeviationBiases","randomWeight","randos","randos2D","Random","weights1","weights2","sum","compareFromX","inputWeights","compareFromY","Multiply","compareKernel1","compareKernel2","inputLayer1Deltas","inputLayer2Deltas","newDeltas1","newDeltas2","multiply","predict2D","inputs","predict3D","compare2D","compare3D","Sigmoid","noopPraxis","arthurFeedForward","weightsPraxis","biasesLayer","biasesPraxis","multiplyLayer","addLayer","sigmoidLayer","setStride","strideX","stride","strideY","setPadding","paddingX","padding","paddingY","rondos2D","fill","randos3D","filters","biases","startFilterX","startInputX","endFilterX","filterWidth","inputWidth","startFilterY","startInputY","endFilterY","filterHeight","inputHeight","inputDepth","filterY","inputY","filterX","inputX","compareFilterDeltas","filterDeltas","startDeltaX","endDeltaX","deltaWidth","startDeltaY","endDeltaY","deltaHeight","deltaY","deltaX","deltaZ","compareInputDeltas","compareBiases","biasDeltas","Convolution","filterCount","bias","learnFilters","learnInputs","compareFilterDeltasKernel","deltasWidth","deltasHeight","deltasDepth","compareInputDeltasKernel","compareBiasesKernel","convolution","setDropout","dropout","trainingPredict","probability","compare","dropouts","Dropout","isTraining","feedForward","compareInputDeltas3D","compareFilterDeltas3D","inputZ","FullyConnected","connectionCount","inputLayerDeltas","fullyConnected","Negative","negative","inputLayerWeights","MultiplyElement","multiplyElement","ones","ones2D","Ones","errors","Tanh","Zeros","gru","recurrentInput","updateGateWeights","updateGatePeepholes","updateGateBias","updateGate","resetGateWeights","resetGatePeepholes","resetGateBias","resetGate","cellWeights","cellPeepholes","cellBias","cell","rows","columns","reshapeInput","predict1D","LeakyRelu","lstm","inputGateWeights","inputGatePeepholes","inputGateBias","inputGate","forgetGateWeights","forgetGatePeepholes","forgetGateBias","forgetGate","outputGateWeights","outputGatePeepholes","outputGateBias","outputGate","memoryWeights","memoryPeepholes","memoryBias","memory","retainCell","writeCell","compare1D","targetValues","Target","compareFn","outputGateConnector","setSwitchY","setSwitchX","largestValue","largestX","largestY","switchY","switchX","outputWidth","outputHeight","deltasY","deltasX","switchXValue","switchYValue","Pool","outputDepth","prevWeights","pool","Relu","recurrent","setDimensions","transition","Regression","learn","targets","regression","getMaxValue","maxInput","getMaxValue2D","getMaxValue3D","getSum","getSum2D","getSum3D","getExponentials","getExponentials2D","getExponentials3D","exponentials","exponentialsSum","indicator","loss","SoftMax","getExponentialsKernel","getMaxValueKernel","getSumKernel","maxValue","softMax","SVM","svm","Transpose","transpose","net","maxProp","lookup","hashes","hash","memo","toHash","objects2D","table","valueIndex","objects","tableIndex","dataIndex","arrayLength","limit","shape","Adam","adam","getMomentum","decay","previousMomentum","clipByValue","previousMomenta","clippedDelta","clipValue","decayRate","smoothEps","regularizationStrength","isClippedByValue","MomentumRootMeanSquaredPropagation","momenta","momentumRootMeanSquaredPropagation","MRmsProp","mRmsProp","Layer","realLayer","Reflect","construct","traverseLayersFrom","cb","layers","mse2d","layerFromJSON","flattenLayers","FeedForward","outputLayer","_updateTrainingOptions","trainDefaults","structure","_inputLayer","_hiddenLayers","_outputLayer","_validateTrainingOptions","_setLogMethod","validations","errorThresh","logPeriod","callback","callbackPeriod","timeout","errorCheckInterval","reinforce","binaryThresh","_connectHiddenLayers","hiddenLayer","_connectLayers","initializeLayers","inputLookup","runInput","outputLookup","status","endTime","_prepTraining","_trainingTick","_calculateTrainingError","_trainPatterns","formattedData","_formatData","initialize","transferredData","transferInput","transferOutput","formattedDatum","_trainPattern","logErrorRate","_calculateDeltas","adjustWeights","tmp","inputDatumCheck","buildLookup","datumParam","outputDatumCheck","jsonLayers","inputLayerIndex","inputLayer1Index","inputLayer2Index","sizes","concat","getLayer","thaw","thawing","thaws","Thaw","items","defaultSettings","each","tick","clearTimeout","delay","stop","doTick","makeReady","middle","Block","count","_next","addArray","insert","insertArray","ReflectOwnKeys","R","ReflectApply","receiver","ProcessEmitWarning","warning","ownKeys","getOwnPropertySymbols","NumberIsNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","listener","prepend","m","events","existing","TypeError","create","newListener","emit","warned","emitter","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","copy","spliceOne","enumerable","RangeError","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","on","prependListener","once","prependOnceListener","originalListener","off","removeAllListeners","rawListeners","eventNames","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","Item","noop","nextTick","title","env","argv","versions","binding","cwd","chdir","dir","umask","pna","WriteReq","chunk","encoding","CorkedRequest","entry","finish","onCorkedFinish","Writable","Duplex","asyncWrite","WritableState","util","inherits","internalUtil","deprecate","Stream","Buffer","OurUint8Array","_uint8ArrayToBuffer","_isUint8Array","isBuffer","realHasInstance","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","highWaterMark","writableHwm","writableHighWaterMark","defaultHwm","finalCalled","needDrain","ending","ended","finished","destroyed","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","_writableState","writable","write","_write","writev","_writev","_destroy","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","holder","allBuffers","callFinal","prefinish","need","endWritable","corkReq","getBuffer","_","hasInstance","pipe","cork","uncork","setDefaultEncoding","_undestroy","undestroy","TrainStream","neuralNetwork","dataFormatDetermined","floodCallback","doneTrainingCallback","updateTrainingOptions","finishStreamIteration","enc","addFormat","firstDatum","formatData","trainPattern","verifyIsInitialized","LookupTable","datum","arraysToFloat32Arrays","arrays","arrayToFloat32Arrays","arrayToFloat32Array","objectsToFloat32Arrays","objectToFloat32Arrays","objectToFloat32Array","default","mse","NeuralNetwork","outputs","calculateDeltas","inputLookupLength","outputLookupLength","inputSize","outputSize","beta1","beta2","epsilon","leakyReluAlpha","activation","prevSize","setActivation","_setupAdam","_runInputSigmoid","_calculateDeltasSigmoid","_runInputRelu","_calculateDeltasRelu","_runInputLeakyRelu","_calculateDeltasLeakyRelu","_runInputTanh","_calculateDeltasTanh","isRunnable","toObject","activeLayer","activeWeights","activeBiases","activeOutputs","currentSize","currentWeights","currentBiases","currentOutputs","validateTrainingOptions","setLogMethod","logTrainingStatus","calculateTrainingError","trainPatterns","prepTraining","trainingTick","thawedTrain","trainError","activeSize","activeOutput","activeError","activeDeltas","nextWeights","nextDeltas","currentErrors","currentDeltas","activeDelta","activeChanges","biasChangesLow","biasChangesHigh","changesLow","changesHigh","_adjustWeightsAdam","currentChangesLow","currentChangesHigh","currentBiasChangesLow","currentBiasChangesHigh","gradient","changeLow","changeHigh","momentumCorrection","pow","gradientCorrection","biasGradient","biasChangeLow","biasChangeHigh","biasMomentumCorrection","biasGradientCorrection","_formatInput","getTypedArrayFn","_formatOutput","addKeys","misclasses","errorSum","actual","expected","misclass","getTrainOptsJSON","needsVar","nodeHandle","layerNumber","nodeKey","layersAsMath","checkFns","weightedSumSigmoid","weightedSumRelu","weightedSumLeakyRelu","weightedSumTanh","calcErrorOutput","calcDeltasSigmoid","calcDeltasRelu","calcDeltasLeakyRelu","calcDeltasTanh","calcError","calcChanges","previousChanges","previousOutputs","addWeights","addBiases","NeuralNetworkGPU","forwardPropagate","backwardPropagate","changesPropagate","biasesPropagate","buildRunInput","buildCalculateDeltas","buildGetChanges","buildChangeBiases","buildGetMSE","getMSE","getChanges","changeBiases","weightedSum","texturizeInputData","calcDeltas","outputTextures","texturizeOutputData","RecurrentConnection","layerDeltas","RecurrentInput","recurrentInputDeltas","recurrentInputWeights","RecurrentZeros","recurrentZeros","Recurrent","initialLayers","_hiddenLayerSets","_outputConnection","setLayer","flattenedLayers","_inputLayers","_outputLayers","_recurrentIndices","_model","previousHiddenLayers","firstLayer","recurrentIndex","previousHiddenLayer","setRecurrentInput","_previousInputs","_connectHiddenLayersDeep","reuseKernels","hiddenConnection","initializeDeep","hiddenLayersIndex","Matrix","ix","weightRows","deltasRows","rowIndex","weightValues","deltasValues","columnIndex","setWeight","setDeltas","randomFloat","gaussRandom","returnV","vVal","randomInteger","randomN","mu","std","RandomMatrix","OnesMatrix","product","leftRows","leftColumns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","leftColumn","rightColumnBase","leftIndex","rightIndex","leftRowRoot","rightRow","backPropagateValue","rowPluckIndex","rowBase","sig","mwi","maxVal","cloneNegative","addB","allOnes","multiplyB","multiplyElementB","reluB","rowPluck","rowPluckB","sigmoidB","tanhB","softmax","Equation","inputRow","inputValue","forwardFn","backpropagationFn","iForward","iBackpropagate","abs","runIndex","logProbabilities","probabilities","maxv","maxix","DataFormatter","maxThreshold","indexTable","characterTable","characters","specialIndexes","buildCharactersFromIterable","buildTables","tempCharactersTable","dataFormatterIndex","dataFormatterLength","characterIndex","charactersLength","character","toIndexes","indices","toCharacters","addSpecial","special","specialIndex","toIndexesInputOutput","dataFormatter","fromAllPrintable","addInputOutput","sampleI","maxI","RNN","stepCache","runs","ratioClipped","model","equations","allMatrices","equationConnections","outputConnector","inputRange","mapModel","getModel","hiddenSize","lastHiddenSize","equation","equationConnection","initialLayerInputs","getEquation","inputMatrixToRow","createInputMatrix","createHiddenLayers","hiddenMatrix","createOutputMatrix","trainInput","backpropagate","log2ppl","bindEquation","inputIndex","inputMax","equationIndex","predictTargetIndex","backpropagateIndex","regc","clipval","numClipped","numTot","matrixIndex","rawInput","isSampleI","temperature","maxPredictionLength","formatDataIn","previousIndex","outputMatrix","probs","formatDataOut","setupData","hiddenSizes","jsonString","previousConnectionIndex","connection","matrixToString","stateIndex","matrixOrigin","toInner","fileName","fnName","statesRaw","usedFunctionNames","innerFunctionsSwitch","toFunctionString","inputMatrix","previousResult","addUnrecognized","fromArrayInputOutput","ArrayLookupTable","RNNTimeStep","runObject","runNumbers","runObjects","runArrays","forecast","forecastNumbers","forecastObjects","forecastArrays","setSize","trainInputOutput","trainArrays","trainNumbers","dataShape","toTable2D","toInputTable2D","toOutputTable2D","predictTarget","lastOutput","inputArray","toArrayShort","toObjectPartial","totalSize","outputIndex","toArrays","lookupTable","errorMSE","errorsAbs","errorCount","forceForecast","formatInputData","formatOutputData","LSTM","inputHidden","inputBias","forgetMatrix","forgetHidden","forgetBias","outputHidden","outputBias","cellActivationMatrix","cellActivationHidden","cellActivationBias","cellWrite","LSTMTimeStep","GRU","updateGateInputMatrix","updateGateHiddenMatrix","resetGateInputMatrix","resetGateHiddenMatrix","cellWriteInputMatrix","cellWriteHiddenMatrix","cellWriteBias","GRUTimeStep","recurrentJSONTypes","drawInput","pixelX","pixelY","radius","fontSize","fontClassName","svg","className","drawNeuron","hidden","drawOutput","drawBackwardConnections","lineY","neuralNetworkToSVG","previousSize","rnnToSVG","recurrentLine","drawRecurrentConnections","moveX","moveY","x1","y1","x2","y2","getFeedForwardLayers","layerCount","getRecurrentLayers","wrapSVG","svgBody","getSizes","toSVG","mergedOptions","isRNN","layerTypes","likely","brain","utilities"],"mappings":"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AAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,MAAM,GAAG,KAAK,GAAG,IAAI,EAAE,KAAK,GAAG,KAAK,KAAK,KAEpuCC,EAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EA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","file":"brain-browser.min.js","sourceRoot":"../src","sourcesContent":["/**\n * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return weight > 0 ? weight : 0.01 * weight;\n}\n\n/**\n * Leaky Relu derivative\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return weight > 0 ? error : 0.01 * error;\n}\n\nmodule.exports = { activate, measure };\n","/**\n * Relu Activation, aka Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return Math.max(0, weight);\n}\n\n/**\n * Relu derivative\n * @param weight\n * @param delta\n * @returns {number}\n */\nfunction measure(weight, delta) {\n  if (weight <= 0) {\n    return 0;\n  }\n  return delta;\n}\n\nmodule.exports = { activate, measure };\n","/**\n * sigmoid activation\n * @param value\n * @returns {number}\n */\nfunction activate(value) {\n  return 1 / (1 + Math.exp(-value));\n}\n\n/**\n * sigmoid derivative\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return weight * (1 - weight) * error;\n}\n\nmodule.exports = { activate, measure };\n","/**\n *\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return Math.tanh(weight);\n}\n\n/**\n * @description grad for z = tanh(x) is (1 - z^2)\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return (1 - weight * weight) * error;\n}\n\nmodule.exports = { activate, measure };\n","const leakyRelu = require('./leaky-relu');\nconst relu = require('./relu');\nconst sigmoid = require('./sigmoid');\nconst tanh = require('./tanh');\n\nmodule.exports = { leakyRelu, relu, sigmoid, tanh };\n","class CrossValidate {\n\n  /**\n   *\n   * @param {NeuralNetwork|constructor} Classifier\n   * @param {object} [options]\n   */\n  constructor(Classifier, options) {\n    this.Classifier = Classifier;\n    this.options = options;\n    this.json = null;\n  }\n\n  /**\n   *\n   * @param {object} trainOpts\n   * @param {object} trainSet\n   * @param {object} testSet\n   * @returns {void|*}\n   */\n  testPartition(trainOpts, trainSet, testSet) {\n    const classifier = new this.Classifier(this.options);\n    const beginTrain = Date.now();\n    const trainingStats = classifier.train(trainSet, trainOpts);\n    const beginTest = Date.now();\n    const testStats = classifier.test(testSet);\n    const endTest = Date.now();\n    const stats = Object.assign({}, testStats, {\n      trainTime: beginTest - beginTrain,\n      testTime: endTest - beginTest,\n      iterations: trainingStats.iterations,\n      error: trainingStats.error,\n      total: testStats.total,\n      learningRate: classifier.trainOpts.learningRate,\n      hiddenLayers: classifier.hiddenLayers,\n      network: classifier.toJSON()\n    });\n\n    return stats;\n  }\n\n  /**\n   * Randomize array element order in-place.\n   * Using Durstenfeld shuffle algorithm.\n   * source: http://stackoverflow.com/a/12646864/1324039\n   */\n  shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} trainOpts\n   * @param {number} [k]\n   * @returns {\n   *  {\n   *    avgs: {\n   *      error: number,\n   *      trainTime: number,\n   *      testTime: number,\n   *      iterations: number,\n   *      error: number\n   *    },\n   *    stats: {\n   *      truePos: number,\n   *      trueNeg: number,\n   *      falsePos: number,\n   *      falseNeg: number,\n   *      total: number\n   *    },\n   *    sets: Array\n   *  }\n   * }\n   */\n  train(data, trainOpts = {}, k = 4) {\n    if (data.length < k) {\n      throw new Error(`Training set size is too small for ${ data.length } k folds of ${ k }`);\n    }\n\n    const size = data.length / k;\n\n    if (data.constructor === Array) {\n      this.shuffleArray(data);\n    } else {\n      const newData = {};\n      this.shuffleArray(Object.keys(data)).forEach((key) => {\n        newData[key] = data[key];\n      });\n      data = newData;\n    }\n\n    const avgs = {\n      trainTime: 0,\n      testTime: 0,\n      iterations: 0,\n      error: 0\n    };\n\n    const stats = {\n      total: 0\n    };\n\n    const binaryStats = {\n      total: 0,\n      truePos: 0,\n      trueNeg: 0,\n      falsePos: 0,\n      falseNeg: 0\n    };\n\n    const results = [];\n    let stat;\n    let isBinary = null;\n\n    for (let i = 0; i < k; i++) {\n      const dclone = data.slice(0);\n      const testSet = dclone.splice(i * size, size);\n      const trainSet = dclone;\n      const result = this.testPartition(trainOpts, trainSet, testSet);\n\n      if (isBinary === null) {\n        isBinary =\n          result.hasOwnProperty('falseNeg')\n          && result.hasOwnProperty('falsePos')\n          && result.hasOwnProperty('trueNeg')\n          && result.hasOwnProperty('truePos');\n        if (isBinary) {\n          Object.assign(stats, binaryStats);\n        }\n      }\n\n      for (stat in avgs) {\n        if (stat in avgs) {\n          avgs[stat] += result[stat];\n        }\n      }\n\n      for (stat in stats) {\n        if (stat in stats) {\n          stats[stat] += result[stat];\n        }\n      }\n\n      results.push(result);\n    }\n\n    for (stat in avgs) {\n      if (stat in avgs) {\n        avgs[stat] /= k;\n      }\n    }\n\n    if (isBinary) {\n      stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\n      stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\n      stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\n    }\n\n    stats.testSize = size;\n    stats.trainSize = data.length - size;\n\n\n    return this.json = {\n      avgs: avgs,\n      stats: stats,\n      sets: results\n    };\n  }\n\n  toNeuralNetwork() {\n    return this.fromJSON(this.json);\n  }\n\n  toJSON() {\n    return this.json;\n  }\n\n  fromJSON(crossValidateJson) {\n    const Classifier = this.Classifier;\n    const json = crossValidateJson.sets.reduce((prev, cur) => prev.error < cur.error ? prev : cur, {error: Infinity}).network;\n    if (Classifier.fromJSON) {\n      return Classifier.fromJSON(json);\n    }\n    const instance = new Classifier();\n    instance.fromJSON(json);\n    return instance;\n  }\n}\n\nmodule.exports = CrossValidate;\n","/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated JavaScript\n *\n * @version 2.4.2\n * @date Fri Dec 27 2019 08:17:30 GMT-0500 (Eastern Standard Time)\n *\n * @license MIT\n * The MIT License\n *\n * Copyright (c) 2019 gpu.js Team\n */(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GPU = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, function (exports) { 'use strict';\n\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];\n\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n\n\n\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n\n  var keywords$1 = {};\n\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n\n  var defaultOptions = {\n    ecmaVersion: 10,\n    sourceType: \"script\",\n    onInsertedSemicolon: null,\n    onTrailingComma: null,\n    allowReserved: null,\n    allowReturnOutsideFunction: false,\n    allowImportExportEverywhere: false,\n    allowAwaitOutsideFunction: false,\n    allowHashBang: false,\n    locations: false,\n    onToken: null,\n    onComment: null,\n    ranges: false,\n    program: null,\n    sourceFile: null,\n    directSourceFile: null,\n    preserveParens: false\n  };\n\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  var\n      BIND_NONE = 0, \n      BIND_VAR = 1, \n      BIND_LEXICAL = 2, \n      BIND_FUNCTION = 3, \n      BIND_SIMPLE_CATCH = 4, \n      BIND_OUTSIDE = 5; \n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    this.containsEsc = false;\n\n\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    this.potentialArrowAt = -1;\n\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    this.labels = [];\n    this.undefinedExports = {};\n\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n\n  var literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") { return true }\n      start += match[0].length;\n\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) { return true } \n    if (context) { return false }\n\n    if (nextCh === 123) { return true } \n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40) \n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); \n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n\n  pp$1.parseBlock = function(createNewLexicalScope, node) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (!this.eat(types.braceR)) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.strict = oldStrict;\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    if (this.eat(types.star)) {\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { \n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { \n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n\n  var pp$3 = Parser.prototype;\n\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n          else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n\n\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldShorthandAssign = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      oldShorthandAssign = refDestructuringErrors.shorthandAssign;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.shorthandAssign = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n      refDestructuringErrors.shorthandAssign = -1; \n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    if (oldShorthandAssign > -1) { refDestructuringErrors.shorthandAssign = oldShorthandAssign; }\n    return left\n  };\n\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n    if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n      if (element === base || element.type === \"ArrowFunctionExpression\") { return element }\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n    var computed = this.eat(types.bracketL);\n    if (computed || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n    this.next(); \n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); \n\n    node.source = this.parseMaybeAssign();\n\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\" || containsEsc)\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      node.body = this.parseBlock(false);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n\n    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n    this.strict = oldStrict;\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n  };\n\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  RegExpValidationState.prototype.at = function at (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i);\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current () {\n    return this.at(this.pos)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead () {\n    return this.at(this.nextIndex(this.pos))\n  };\n\n  RegExpValidationState.prototype.advance = function advance () {\n    this.pos = this.nextIndex(this.pos);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch) {\n    if (this.current() === ch) {\n      this.advance();\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      if (state.eat(0x29 )) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D ) || state.eat(0x7D )) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C )) {\n      this.regexp_alternative(state);\n    }\n\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    if (state.eat(0x5E ) || state.eat(0x24 )) {\n      return true\n    }\n\n    if (state.eat(0x5C )) {\n      if (state.eat(0x42 ) || state.eat(0x62 )) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    if (state.eat(0x28 ) && state.eat(0x3F )) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C );\n      }\n      if (state.eat(0x3D ) || state.eat(0x21 )) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 )) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F );\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A ) ||\n      state.eat(0x2B ) ||\n      state.eat(0x3F ) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B )) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D )) {\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 )) {\n      if (state.eat(0x3F ) && state.eat(0x3A )) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 )) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 )) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F ) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 )) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24  ||\n      ch >= 0x28  && ch <= 0x2B  ||\n      ch === 0x2E  ||\n      ch === 0x3F  ||\n      ch >= 0x5B  && ch <= 0x5E  ||\n      ch >= 0x7B  && ch <= 0x7D \n    )\n  }\n\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24  &&\n      !(ch >= 0x28  && ch <= 0x2B ) &&\n      ch !== 0x2E  &&\n      ch !== 0x3F  &&\n      ch !== 0x5B  &&\n      ch !== 0x5E  &&\n      ch !== 0x7C \n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F )) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C )) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24  || ch === 0x5F \n  }\n\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch === 0x200C  || ch === 0x200D \n  }\n\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      if (state.current() === 0x63 ) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B )) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 )) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30  && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 ) {\n      state.lastIntValue = 0x09; \n      state.advance();\n      return true\n    }\n    if (ch === 0x6E ) {\n      state.lastIntValue = 0x0A; \n      state.advance();\n      return true\n    }\n    if (ch === 0x76 ) {\n      state.lastIntValue = 0x0B; \n      state.advance();\n      return true\n    }\n    if (ch === 0x66 ) {\n      state.lastIntValue = 0x0C; \n      state.advance();\n      return true\n    }\n    if (ch === 0x72 ) {\n      state.lastIntValue = 0x0D; \n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41  && ch <= 0x5A ) ||\n      (ch >= 0x61  && ch <= 0x7A )\n    )\n  }\n\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x75 )) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C ) && state.eat(0x75 ) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        state.switchU &&\n        state.eat(0x7B ) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D ) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F )) {\n        state.lastIntValue = 0x2F; \n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63  && (!state.switchN || ch !== 0x6B )) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31  && ch <= 0x39 ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30  && ch <= 0x39 )\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50  || ch === 0x70 )\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B ) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D )\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64  ||\n      ch === 0x44  ||\n      ch === 0x73  ||\n      ch === 0x53  ||\n      ch === 0x77  ||\n      ch === 0x57 \n    )\n  }\n\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D )) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F \n  }\n\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B )) {\n      state.eat(0x5E );\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D )) {\n        return true\n      }\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D ) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        var ch$1 = state.current();\n        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 )) {\n      state.lastIntValue = 0x08; \n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D )) {\n      state.lastIntValue = 0x2D; \n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 )) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 )) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x39 \n  }\n\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30  && ch <= 0x39 ) ||\n      (ch >= 0x41  && ch <= 0x46 ) ||\n      (ch >= 0x61  && ch <= 0x66 )\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41  && ch <= 0x46 ) {\n      return 10 + (ch - 0x41 )\n    }\n    if (ch >= 0x61  && ch <= 0x66 ) {\n      return 10 + (ch - 0x61 )\n    }\n    return ch - 0x30 \n  }\n\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; \n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x37 \n  }\n\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n\n  var pp$9 = Parser.prototype;\n\n\n  pp$9.next = function() {\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 )\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: \n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: \n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: \n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { \n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { \n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    case 46: \n      return this.readToken_dot()\n\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n    case 63: ++this.pos; return this.finishToken(types.question)\n\n    case 96: \n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: \n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } \n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } \n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } \n      }\n\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: \n      return this.readNumber(false)\n\n    case 34: case 39: \n      return this.readString(code)\n\n\n    case 47: \n      return this.readToken_slash()\n\n    case 37: case 42: \n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: \n      return this.readToken_pipe_amp(code)\n\n    case 94: \n      return this.readToken_caret()\n\n    case 43: case 45: \n      return this.readToken_plus_min(code)\n\n    case 60: case 62: \n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: \n      return this.readToken_eq_excl(code)\n\n    case 126: \n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n\n  pp$9.readInt = function(radix, len) {\n    var start = this.pos, total = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n      if (code >= 97) { val = code - 97 + 10; } \n      else if (code >= 65) { val = code - 65 + 10; } \n      else if (code >= 48 && code <= 57) { val = code - 48; } \n      else { val = Infinity; }\n      if (val >= radix) { break }\n      ++this.pos;\n      total = total * radix + val;\n    }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; \n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = typeof BigInt !== \"undefined\" ? BigInt(this.input.slice(start, this.pos)) : null;\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var str$1 = this.input.slice(start, this.pos);\n      var val$1 = typeof BigInt !== \"undefined\" ? BigInt(str$1) : null;\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (next === 46 && !octal) { \n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { \n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } \n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var str = this.input.slice(start, this.pos);\n    var val = octal ? parseInt(str, 8) : parseFloat(str);\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { \n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { \n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" \n    case 114: return \"\\r\" \n    case 120: return String.fromCharCode(this.readHexChar(2)) \n    case 117: return codePointToString$1(this.readCodePoint()) \n    case 116: return \"\\t\" \n    case 98: return \"\\b\" \n    case 118: return \"\\u000b\" \n    case 102: return \"\\f\" \n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } \n    case 10: \n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { \n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) \n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n\n  var version = \"7.1.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { \n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); \n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n\n},{}],4:[function(require,module,exports){\nfunction setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  const mockMethod = () => kernel;\n  const methods = [\n    'setWarnVarUsage',\n    'setArgumentTypes',\n    'setTactic',\n    'setOptimizeFloatMemory',\n    'setDebug',\n    'setLoopMaxIterations',\n    'setConstantTypes',\n    'setFunctions',\n    'setNativeFunctions',\n    'setInjectedNative',\n    'setPipeline',\n    'setPrecision',\n    'setOutputToTexture',\n    'setImmutable',\n    'setStrictIntegers',\n    'setDynamicOutput',\n    'setHardcodeConstants',\n    'setDynamicArguments',\n    'setUseLegacyEncoder',\n    'setWarnVarUsage',\n    'addSubKernel',\n  ];\n  for (let i = 0; i < methods.length; i++) {\n    kernel[methods[i]] = mockMethod;\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  const halfHeight = height / 2 | 0; \n  const bytesPerRow = width * 4;\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n\n},{}],5:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};\n},{\"./utils\":113}],6:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass CPUFunctionNode extends FunctionNode {\n  astFunction(ast, retArr) {\n\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      retArr.push(') {\\n');\n    }\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          retArr.push('user_' + idtNode.name);\n        }\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    if (varDecNode.kind === 'var' && this.warnVarUsage) {\n      this.varWarn();\n    }\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      this.astGeneric(declarations[i], retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'value.value[]': \n        if (this.removeIstanbulCoverage) {\n          return retArr;\n        }\n        retArr.push(`${mNode.object.object.name}.${mNode.object.property.name}[${mNode.property.value}]`);\n        return retArr;\n      case 'value.value[][]': \n        if (this.removeIstanbulCoverage) {\n          return retArr;\n        }\n        retArr.push(`${mNode.object.object.object.name}.${mNode.object.object.property.name}[${mNode.object.property.value}][${mNode.property.value}]`);\n        return retArr;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const arrLen = arrNode.elements.length;\n\n    retArr.push('new Float32Array([');\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push('])');\n\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};\n},{\"../function-node\":10}],7:[function(require,module,exports){\nconst { utils } = require('../../utils');\n\nfunction constantsToString(constants, types) {\n  const results = [];\n  for (const name in types) {\n    if (!types.hasOwnProperty(name)) continue;\n    const type = types[name];\n    const constant = constants[name];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n        results.push(`${name}:${constant}`);\n        break;\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\n        break;\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants: incomingConstants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`,\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},',\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`,\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    });\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};\n},{\"../../utils\":113}],8:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    return null;\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this._prependedString = [];\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = [];\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  build() {\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n    this.built = true;\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      });\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\n  ${ this.injectedNative || '' }\n  const _this = this;\n  ${ this._processConstants() }\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._prependedString.join('') }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n  }\n\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLImage':\n        case 'HTMLVideo':\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLImage':\n        case 'HTMLVideo':\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _mediaTo2DArray(media) {\n    const canvas = this.canvas;\n    const width = media.width > 0 ? media.width : media.videoWidth;\n    const height = media.height > 0 ? media.height : media.videoHeight;\n    if (canvas.width < width) {\n      canvas.width = width;\n    }\n    if (canvas.height < height) {\n      canvas.height = height;\n    }\n    const ctx = this.context;\n    ctx.drawImage(media, 0, 0, width, height);\n    const pixelsData = ctx.getImageData(0, 0, width, height).data;\n    const imageArray = new Array(height);\n    let index = 0;\n    for (let y = height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; \n        pixel[1] = pixelsData[index++] / 255; \n        pixel[2] = pixelsData[index++] / 255; \n        pixel[3] = pixelsData[index++] / 255; \n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return this._resultKernel1DLoop(kernelString) + this._kernelOutput();\n      case 2:\n        return this._resultKernel2DLoop(kernelString) + this._kernelOutput();\n      case 3:\n        return this._resultKernel3DLoop(kernelString) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultKernel1DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultKernel3DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n\n  prependString(value) {\n    if (this._kernelString) throw new Error('Kernel already built');\n    this._prependedString.push(value);\n  }\n\n  hasPrependString(value) {\n    return this._prependedString.indexOf(value) > -1;\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};\n},{\"../../utils\":113,\"../function-builder\":9,\"../kernel\":36,\"./function-node\":6,\"./kernel-string\":7}],9:[function(require,module,exports){\nclass FunctionBuilder {\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n      warnVarUsage,\n      onIstanbulCoverageVariable,\n      removeIstanbulCoverage,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i];\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerImplyArgumentBitRatio = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, returnType) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(null, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n        warnVarUsage,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerImplyArgumentBitRatio,\n      onFunctionCall,\n      warnVarUsage,\n      onIstanbulCoverageVariable: onIstanbulCoverageVariable ? (name) => onIstanbulCoverageVariable(name, kernel) : null,\n      removeIstanbulCoverage,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n        onNestedFunction,\n        onIstanbulCoverageVariable: onIstanbulCoverageVariable ? (name) => onIstanbulCoverageVariable(name, kernel) : null,\n        removeIstanbulCoverage,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      if (retList.indexOf(functionName) === -1) {\n        retList.push(functionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); \n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          if (this.lookupChain[i].ast === ast) {\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    return null;\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      }\n    }\n    const node = this._getFunction(functionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error('argument not found');\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error('argument bit ratio not found');\n    }\n    return bitRatio;\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    const node = this._getFunction(functionName);\n    if (this._isNativeFunction(calleeFunctionName)) return null;\n    const calleeNode = this._getFunction(calleeFunctionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`);\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`);\n    }\n    if (!calleeNode.argumentBitRatios) {\n      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);\n    }\n    const calleeBitRatio = calleeNode.argumentBitRatios[i];\n    if (typeof calleeBitRatio === 'number') {\n      if (calleeBitRatio !== bitRatio) {\n        throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`);\n      }\n      return calleeBitRatio;\n    }\n    calleeNode.argumentBitRatios[i] = bitRatio;\n    return bitRatio;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};\n},{}],10:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\nclass FunctionNode {\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.declarations = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerImplyArgumentBitRatio = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.warnVarUsage = true;\n    this.onIstanbulCoverageVariable = null;\n    this.removeIstanbulCoverage = false;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        if (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.declarations = [];\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, context, name, origin, forceInteger, assignable } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (forceInteger) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      this.declarations.push({\n        valueType,\n        dependencies,\n        isSafe: this.isSafeDependencies(dependencies),\n        ast,\n        name,\n        context,\n        origin,\n        assignable,\n      });\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i]);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast && identifier.context.hasOwnProperty(ast.name)) {\n        for (let j = 0; j < this.declarations.length; j++) {\n          const declaration = this.declarations[j];\n          if (declaration.name === ast.name && declaration.context[ast.name] === identifier.context[ast.name]) {\n            return declaration;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = this.astKey(ast);\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'BinaryExpression':\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              const type = this.getVariableType(ast);\n              if (!type) {\n                throw this.astErrorOutput(`Unable to find identifier valueType`, ast);\n              }\n              return type;\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'fn()[][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'g':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'b':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'a':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        case 'SequenceExpression':\n          return this.getType(ast.expressions[ast.expressions.length - 1]);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'asin',\n      'atan',\n      'atan2',\n      'ceil',\n      'cos',\n      'exp',\n      'floor',\n      'log',\n      'log2',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sqrt',\n      'tan',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'ConditionalExpression':\n        this.getDependencies(ast.test, dependencies, isNotSafe);\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        case 'SequenceExpression':\n          return this.getDependencies(ast.expressions, dependencies, isNotSafe);\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift('.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift('.value');\n        }\n      } else if (ast.name) {\n        signature.unshift('value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift('fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.value[]', \n      'value.value[][]', \n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[this.astKey(ast)] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    const firstDeclaration = declarations[0];\n    const init = firstDeclaration.init;\n    let type = this.isState('in-for-loop-init') ? 'Integer' : this.getType(init);\n    if (type === 'LiteralInteger') {\n      type = 'Number';\n    }\n    const markupType = typeMap[type];\n    if (!markupType) {\n      throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\n    }\n    let dependencies = this.getDependencies(firstDeclaration.init);\n    throw new Error('remove me');\n    this.declarations[firstDeclaration.id.name] = Object.freeze({\n      type,\n      dependencies,\n      isSafe: dependencies.every(dependency => dependency.isSafe)\n    });\n    const initResult = [`${type} user_${firstDeclaration.id.name}=`];\n    this.astGeneric(init, initResult);\n    result.push(initResult.join(''));\n\n    for (let i = 1; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      dependencies = this.getDependencies(declaration);\n      throw new Error('Remove me');\n      this.declarations[declaration.id.name] = Object.freeze({\n        type,\n        dependencies,\n        isSafe: false\n      });\n      this.astGeneric(declaration, result);\n    }\n\n    retArr.push(retArr, result.join(','));\n    retArr.push(';');\n    return retArr;\n  }\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  isIstanbulAST(ast) {\n    const variableSignature = this.getVariableSignature(ast);\n    return variableSignature === 'value.value[]' || variableSignature === 'value.value[][]';\n  }\n  astSequenceExpression(sNode, retArr) {\n    const { expressions } = sNode;\n    const sequenceResult = [];\n    for (let i = 0; i < expressions.length; i++) {\n      const expression = expressions[i];\n      if (this.removeIstanbulCoverage) {\n        if (expression.type === 'UpdateExpression' && this.isIstanbulAST(expression.argument)) {\n          continue;\n        }\n      }\n      const expressionResult = [];\n      this.astGeneric(expression, expressionResult);\n      sequenceResult.push(expressionResult.join(''));\n    }\n    if (sequenceResult.length > 1) {\n      retArr.push('(', sequenceResult.join(','), ')');\n    } else {\n      retArr.push(sequenceResult[0]);\n    }\n    return retArr;\n  }\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  astUpdateExpression(uNode, retArr) {\n    if (this.removeIstanbulCoverage) {\n      const signature = this.getVariableSignature(uNode.argument);\n      if (this.isIstanbulAST(uNode.argument)) {\n        return retArr;\n      }\n    }\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        case 'value.value[]': \n          if (this.removeIstanbulCoverage) {\n            return { signature: variableSignature };\n          }\n          if (this.onIstanbulCoverageVariable) {\n            this.onIstanbulCoverageVariable(ast.object.object.name);\n            return {\n              signature: variableSignature\n            };\n          }\n          case 'value.value[][]': \n            if (this.removeIstanbulCoverage) {\n              return { signature: variableSignature };\n            }\n            if (this.onIstanbulCoverageVariable) {\n              this.onIstanbulCoverageVariable(ast.object.object.object.name);\n              return {\n                signature: variableSignature\n              };\n            }\n            default:\n              throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  varWarn() {\n    console.warn('var declarations are deprecated, weird things happen when falling back to CPU because var scope differs in javascript than in most languages.  Use const or let');\n  }\n\n  astKey(ast, separator = ',') {\n    if (!ast.start || !ast.end) throw new Error('AST start and end needed');\n    return `${ast.start}${separator}${ast.end}`;\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLImage': 'Array(4)',\n  'HTMLVideo': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};\n},{\"../utils\":113,\"./function-tracer\":11,\"acorn\":1}],11:[function(require,module,exports){\nconst { utils } = require('../utils');\n\nclass FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.inLoopInit = false;\n    this.scan(ast);\n  }\n\n  get currentContext() {\n    return this.runningContexts.length > 0 ? this.runningContexts[this.runningContexts.length - 1] : null;\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({}, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  scan(ast) {\n    if (!ast) return;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.scan(ast.body);\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        ast.declarations = utils.normalizeDeclarations(ast);\n        this.scan(ast.declarations);\n        break;\n      case 'VariableDeclarator':\n        const { currentContext } = this;\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          forceInteger: this.inLoopInit,\n          assignable: !this.inLoopInit && !currentContext.hasOwnProperty(ast.id.name),\n        };\n        currentContext[ast.id.name] = declaration;\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement':\n        this.newContext(() => {\n          this.inLoopInit = true;\n          this.scan(ast.init);\n          this.inLoopInit = false;\n          this.scan(ast.test);\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n        break;\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier':\n        this.identifiers.push({\n          context: this.currentContext,\n          ast,\n        });\n        break;\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.scan(ast.object);\n        this.scan(ast.property);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'SequenceExpression':\n        this.scan(ast.expressions);\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n\n      case 'ThisExpression':\n      case 'Literal':\n      case 'DebuggerStatement':\n      case 'EmptyStatement':\n      case 'BreakStatement':\n      case 'ContinueStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};\n},{\"../utils\":113}],12:[function(require,module,exports){\nconst { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  if (!originKernel.built) {\n    originKernel.build.apply(originKernel, args);\n  }\n  args = args ? Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'boolean':\n        return new Boolean(arg);\n      case 'number':\n        return new Number(arg);\n      default:\n        return arg;\n    }\n  }) : null;\n  const uploadedValues = [];\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\n      if (argumentName) {\n        return argumentName;\n      }\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\n      if (constantName) {\n        return constantName;\n      }\n      return null;\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n    tactic,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    tactic,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, args);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('    /** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\n  });\n  result.push('    /** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    if (kernel.renderKernels) {\n      const results = kernel.renderKernels();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName) }\n      },`);\n      const { subKernels, mappedTextures } = kernel;\n      for (let i = 0; i < subKernels.length; i++) {\n        const texture = mappedTextures[i];\n        const subKernel = subKernels[i];\n        const subKernelResult = results[subKernel.property];\n        const subKernelTextureName = context.getContextVariableName(texture.texture);\n        result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName) }\n      },`);\n      }\n      result.push(`    };`);\n    } else {\n      const rendered = kernel.renderOutput();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n        texture: ${ textureName },\n        type: '${ rendered.type }',\n        toArray: ${ getToArrayString(rendered, textureName) }\n      };`);\n    }\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`  innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${  kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (property === 'context') {\n        return null;\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\n\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\n  if (argument === null) return null;\n  switch (typeof argument) {\n    case 'boolean':\n    case 'number':\n      return null;\n  }\n  if (\n    typeof HTMLImageElement !== 'undefined' &&\n    argument instanceof HTMLImageElement\n  ) {\n    for (let i = 0; i < kernelValues.length; i++) {\n      const kernelValue = kernelValues[i];\n      if (kernelValue.type !== 'HTMLImageArray') continue;\n      if (kernelValue.uploadValue !== argument) continue;\n      const variableIndex = values[i].indexOf(argument);\n      if (variableIndex === -1) continue;\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\n      context.insertVariable(variableName, argument);\n      return variableName;\n    }\n    return null;\n  }\n\n  for (let i = 0; i < kernelValues.length; i++) {\n    const kernelValue = kernelValues[i];\n    if (argument !== kernelValue.uploadValue) continue;\n    const variable = `uploadValue_${kernelValue.name}`;\n    context.insertVariable(variable, kernelValue);\n    return variable;\n  }\n  return null;\n}\n\nmodule.exports = {\n  glKernelString\n};\n},{\"../../utils\":113,\"gl-wiretap\":3}],13:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number',\n      tactic: 'speed',\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.switchingKernels = null;\n  }\n\n  checkTextureSize() {\n    const { features } = this.constructor;\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\n    }\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n          }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  getFloatTacticDeclaration() {\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    return `precision ${variablePrecision} float;\\n`;\n  }\n\n  getIntTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic, true)} int;\\n`;\n  }\n\n  getSampler2DTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\\n`;\n  }\n\n  getSampler2DArrayTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DArray;\\n`;\n  }\n\n  renderTexture() {\n    return this.texture.clone();\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].clone();\n    }\n    return result;\n  }\n\n  resetSwitchingKernels() {\n    const existingValue = this.switchingKernels;\n    this.switchingKernels = null;\n    return existingValue;\n  }\n\n  setOutput(output) {\n    const newOutput = this.toKernelOutput(output);\n    if (this.program) {\n      if (!this.dynamicOutput) {\n        throw new Error('Resizing a kernel with dynamicOutput: false is not possible');\n      }\n      const newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];\n      const newTexSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, newThreadDim);\n      const oldTexSize = this.texSize;\n      if (oldTexSize) {\n        const oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);\n        const newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);\n        if (oldPrecision !== newPrecision) {\n          if (this.debug) {\n            console.warn('Precision requirement changed, asking GPU instance to recompile');\n          }\n          this.switchKernels({\n            type: 'outputPrecisionMismatch',\n            precision: newPrecision,\n            needed: output\n          });\n          return;\n        }\n      }\n      this.output = newOutput;\n      this.threadDim = newThreadDim;\n      this.texSize = newTexSize;\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      if (this.texture) {\n        this.texture.delete();\n      }\n      this.texture = null;\n      if (this.mappedTextures) {\n        for (let i = 0; i < this.mappedTextures.length; i++) {\n          this.mappedTextures[i].delete();\n        }\n      }\n      this.mappedTextures = null;\n    } else {\n      this.output = newOutput;\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n  switchKernels(reason) {\n    if (this.switchingKernels) {\n      this.switchingKernels.push(reason);\n    } else {\n      this.switchingKernels = [reason];\n    }\n  }\n  getVariablePrecisionString(textureSize = this.texSize, tactic = this.tactic, isInt = false) {\n    if (!tactic) {\n      const low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];\n      const medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];\n      const high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];\n      const requiredSize = Math.log2(textureSize[0] * textureSize[1]);\n      if (requiredSize <= low.rangeMax) {\n        return 'lowp';\n      } else if (requiredSize <= medium.rangeMax) {\n        return 'mediump';\n      } else if (requiredSize <= high.rangeMax) {\n        return 'highp';\n      } else {\n        throw new Error(`The required size exceeds that of the ability of your system`);\n      }\n    }\n    switch (tactic) {\n      case 'speed':\n        return 'lowp';\n      case 'balanced':\n        return 'mediump';\n      case 'precision':\n        return 'highp';\n      default:\n        throw new Error(`Unknown tactic \"${tactic}\" use \"speed\", \"balanced\", \"precision\", or empty for auto`);\n    }\n  }\n\n  updateTextureArgumentRefs(kernelValue, arg) {\n    if (this.texture.texture === arg.texture) {\n      const { prevArg } = kernelValue;\n      if (prevArg) {\n        if (prevArg.texture._refs === 1) {\n          this.texture.delete();\n          this.texture = prevArg.clone();\n        }\n        prevArg.delete();\n      }\n      kernelValue.prevArg = arg.clone();\n    } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n      const { mappedTextures } = this;\n      for (let i = 0; i < mappedTextures.length; i++) {\n        const mappedTexture = mappedTextures[i];\n        if (mappedTexture.texture === arg.texture) {\n          const { prevArg } = kernelValue;\n          if (prevArg) {\n            if (prevArg.texture._refs === 1) {\n              mappedTexture.delete();\n              mappedTextures[i] = prevArg.clone();\n            }\n            prevArg.delete();\n          }\n          kernelValue.prevArg = arg.clone();\n          return;\n        }\n      }\n    }\n  }\n\n  initCanvas() {}\n}\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel\n};\n},{\"../../utils\":113,\"../kernel\":36,\"./texture/array-2-float\":16,\"./texture/array-2-float-2d\":14,\"./texture/array-2-float-3d\":15,\"./texture/array-3-float\":19,\"./texture/array-3-float-2d\":17,\"./texture/array-3-float-3d\":18,\"./texture/array-4-float\":22,\"./texture/array-4-float-2d\":20,\"./texture/array-4-float-3d\":21,\"./texture/float\":25,\"./texture/float-2d\":23,\"./texture/float-3d\":24,\"./texture/graphical\":26,\"./texture/memory-optimized\":30,\"./texture/memory-optimized-2d\":28,\"./texture/memory-optimized-3d\":29,\"./texture/unsigned\":33,\"./texture/unsigned-2d\":31,\"./texture/unsigned-3d\":32}],14:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};\n},{\"../../../utils\":113,\"./float\":25}],15:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};\n},{\"../../../utils\":113,\"./float\":25}],16:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};\n},{\"../../../utils\":113,\"./float\":25}],17:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};\n},{\"../../../utils\":113,\"./float\":25}],18:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};\n},{\"../../../utils\":113,\"./float\":25}],19:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};\n},{\"../../../utils\":113,\"./float\":25}],20:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};\n},{\"../../../utils\":113,\"./float\":25}],21:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};\n},{\"../../../utils\":113,\"./float\":25}],22:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};\n},{\"../../../utils\":113,\"./float\":25}],23:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};\n},{\"../../../utils\":113,\"./float\":25}],24:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};\n},{\"../../../utils\":113,\"./float\":25}],25:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureFloat extends GLTexture {\n  get textureType() {\n    return this.context.FLOAT;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};\n},{\"../../../utils\":113,\"./index\":27}],26:[function(require,module,exports){\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};\n},{\"./unsigned\":33}],27:[function(require,module,exports){\nconst { Texture } = require('../../../texture');\n\nclass GLTexture extends Texture {\n  get textureType() {\n    throw new Error(`\"textureType\" not implemented on ${ this.name }`);\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  beforeMutate() {\n    if (this.texture._refs > 1) {\n      this.cloneTexture();\n    }\n  }\n\n  cloneTexture() {\n    this.texture._refs--;\n    const { context: gl, size, texture } = this;\n    const existingFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n    if (!texture._framebuffer) {\n      texture._framebuffer = gl.createFramebuffer();\n    }\n    texture._framebuffer.width = size[0];\n    texture._framebuffer.width = size[1];\n    gl.bindFramebuffer(gl.FRAMEBUFFER, texture._framebuffer);\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);\n    target._refs = 1;\n    target._framebuffer = texture._framebuffer;\n    this.texture = target;\n    if (existingFramebuffer) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, existingFramebuffer);\n    }\n  }\n\n  delete() {\n    super.delete();\n    if (this.texture._refs === 0 && this.texture._framebuffer) {\n      this.context.deleteFramebuffer(this.texture._framebuffer);\n    }\n  }\n}\n\nfunction selectTexture(gl, texture) {\n  gl.activeTexture(gl.TEXTURE31); \n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n}\n\nmodule.exports = { GLTexture };\n},{\"../../../texture\":112}],28:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};\n},{\"../../../utils\":113,\"./float\":25}],29:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};\n},{\"../../../utils\":113,\"./float\":25}],30:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};\n},{\"../../../utils\":113,\"./float\":25}],31:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};\n},{\"../../../utils\":113,\"./unsigned\":33}],32:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};\n},{\"../../../utils\":113,\"./unsigned\":33}],33:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureUnsigned extends GLTexture {\n  get textureType() {\n    return this.context.UNSIGNED_BYTE;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};\n},{\"../../../utils\":113,\"./index\":27}],34:[function(require,module,exports){\nconst getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { \n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n        WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    return getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n    return this;\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};\n},{\"../gl/kernel-string\":12,\"../web-gl/kernel\":69,\"gl\":2}],35:[function(require,module,exports){\nclass KernelValue {\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n      tactic,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.tactic = tactic;\n    this.id = `${this.origin}_${name}`;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n    this.forceUploadEachRun = null;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};\n},{}],36:[function(require,module,exports){\nconst { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n    this.forceUploadKernelConstants = null;\n\n\n    this.source = source;\n\n    this.output = null;\n\n    this.debug = false;\n\n    this.graphical = false;\n\n    this.loopMaxIterations = 0;\n\n    this.constants = null;\n\n    this.constantTypes = null;\n\n    this.constantBitRatios = null;\n\n    this.dynamicArguments = false;\n\n    this.dynamicOutput = false;\n\n    this.canvas = null;\n\n    this.context = null;\n\n    this.checkContext = null;\n\n    this.gpu = null;\n\n    this.functions = null;\n\n    this.nativeFunctions = null;\n\n    this.injectedNative = null;\n\n    this.subKernels = null;\n\n    this.validate = true;\n\n    this.immutable = false;\n\n    this.pipeline = false;\n\n    this.precision = null;\n\n    this.tactic = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.warnVarUsage = true;\n    this.onIstanbulCoverageVariable = null;\n    this.removeIstanbulCoverage = false;\n    this.built = false;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); \n            continue;\n          }\n          break;\n        case 'functions':\n          if (typeof settings.functions[0] === 'function') {\n            this.functions = settings.functions.map(source => utils.functionToIFunction(source));\n            continue;\n          }\n          break;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n        case 'removeIstanbulCoverage':\n          if (settings[p] !== null) {\n            this[p] = settings[p];\n          }\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  toKernelOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          return [output.x, output.y, output.z];\n        } else {\n          return [output.x, output.y];\n        }\n      } else {\n        return [output.x];\n      }\n    } else {\n      return output;\n    }\n  }\n\n  setOutput(output) {\n    this.output = this.toKernelOutput(output);\n    return this;\n  }\n\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  setFunctions(functions) {\n    if (typeof functions[0] === 'function') {\n      this.functions = functions.map(source => utils.functionToIFunction(source));\n    } else {\n      this.functions = functions;\n    }\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    this.nativeFunctions = nativeFunctions;\n    return this;\n  }\n\n  setInjectedNative(injectedNative) {\n    this.injectedNative = injectedNative;\n    return this;\n  }\n\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  setImmutable(flag) {\n    utils.warnDeprecated('method', 'setImmutable');\n    return this;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  setWarnVarUsage(flag) {\n    this.warnVarUsage = flag;\n    return this;\n  }\n\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        if (!argumentTypes.hasOwnProperty(p)) continue;\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  setTactic(tactic) {\n    this.tactic = tactic;\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  getPixels(flip) {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  prependString(value) {\n    throw new Error(`\"prependString\" called on ${ this.constructor.name }`);\n  }\n\n  hasPrependString(value) {\n    throw new Error(`\"hasPrependString\" called on ${ this.constructor.name }`);\n  }\n\n  toJSON() {\n    return {\n      settings: {\n        output: this.output,\n        pipeline: this.pipeline,\n        argumentNames: this.argumentNames,\n        argumentsTypes: this.argumentTypes,\n        constants: this.constants,\n        pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n        returnType: this.returnType,\n      }\n    };\n  }\n}\n\nmodule.exports = {\n  Kernel\n};\n},{\"../input\":109,\"../utils\":113}],37:[function(require,module,exports){\nconst fragmentShader = `__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nvec4 round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],38:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  astFunction(ast, retArr) {\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n\n        if (type === 'sampler2D' || type === 'sampler2DArray') {\n          retArr.push(`${type} user_${argumentName},ivec2 user_${argumentName}Size,ivec3 user_${argumentName}Dim`);\n        } else {\n          retArr.push(`${type} user_${argumentName}`);\n        }\n      }\n    }\n\n    retArr.push(') {\\n');\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = this.astKey(ast);\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('in-for-loop-init') || this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('div_with_int_check(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        if (this.isState('in-for-loop-test')) {\n          this.pushState('building-integer');\n          retArr.push('int(');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(')');\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('in-for-loop-test') || this.isState('in-for-loop-init') || this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': 'mod',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    if (idtNode.name === 'Infinity') {\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\n        retArr.push(`bool(user_${idtNode.name})`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    } else {\n      retArr.push(`user_${idtNode.name}`);\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      const { declarations } = forNode.init;\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n      if (isSafe) {\n        for (let i = 0; i < initArr.length; i++) {\n          if (initArr[i].includes && initArr[i].includes(',')) {\n            isSafe = false;\n          }\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.pushState('in-for-loop-test');\n      this.astGeneric(forNode.test, testArr);\n      this.popState('in-for-loop-test');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  astAssignmentExpression(assNode, retArr) {\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    if (varDecNode.kind === 'var' && this.warnVarUsage) {\n      this.varWarn();\n    }\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const inForLoopInit = this.isState('in-for-loop-init');\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const actualType = this.getType(declaration.init);\n      let type = inForLoopInit ? 'Integer' : actualType;\n      if (type === 'LiteralInteger') {\n        type = 'Number';\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer' && !inForLoopInit) {\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        } else {\n          declarationResult.push(',');\n        }\n        lastType = type;\n        declarationResult.push(`user_${declaration.id.name}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          result.push(';');\n          declarationResult.push(`${markupType} `);\n        } else {\n          declarationResult.push(',');\n        }\n        lastType = type;\n        declarationResult.push(`user_${declaration.id.name}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      result.push(declarationResult.join(''));\n    }\n\n    retArr.push(result.join(''));\n    if (!inForLoopInit) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${this.astKey(ast, '_')}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ name }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case 'value.value[]':\n        case 'value.value[][]':\n          if (this.removeIstanbulCoverage) {\n            return retArr;\n          }\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    if (functionName === 'atan2') {\n      functionName = 'atan';\n    }\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              if (argument.type === 'Identifier') {\n                retArr.push(`user_${argument.name}`);\n              } else if (argument.type === 'ArrayExpression') {\n                this.astGeneric(argument, retArr);\n              } else {\n                throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              }\n              continue;\n            }\n            break;\n          case 'HTMLImage':\n          case 'HTMLImageArray':\n          case 'HTMLVideo':\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\n              retArr.push(`user_${argument.name},user_${argument.name}Size,user_${argument.name}Dim`);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const arrLen = arrNode.elements.length;\n\n    retArr.push('vec' + arrLen + '(');\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n  'HTMLVideo': 'sampler2D',\n  'HTMLImage': 'sampler2D',\n  'HTMLImageArray': 'sampler2DArray',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};\n},{\"../function-node\":10}],39:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGLKernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGLKernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGLKernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType,\n  kernelValueMaps,\n};\n},{\"./kernel-value/boolean\":40,\"./kernel-value/dynamic-html-image\":41,\"./kernel-value/dynamic-html-video\":42,\"./kernel-value/dynamic-memory-optimized-number-texture\":43,\"./kernel-value/dynamic-number-texture\":44,\"./kernel-value/dynamic-single-array\":45,\"./kernel-value/dynamic-single-array1d-i\":46,\"./kernel-value/dynamic-single-array2d-i\":47,\"./kernel-value/dynamic-single-array3d-i\":48,\"./kernel-value/dynamic-single-input\":49,\"./kernel-value/dynamic-unsigned-array\":50,\"./kernel-value/dynamic-unsigned-input\":51,\"./kernel-value/float\":52,\"./kernel-value/html-image\":53,\"./kernel-value/html-video\":54,\"./kernel-value/integer\":56,\"./kernel-value/memory-optimized-number-texture\":57,\"./kernel-value/number-texture\":58,\"./kernel-value/single-array\":59,\"./kernel-value/single-array1d-i\":60,\"./kernel-value/single-array2\":61,\"./kernel-value/single-array2d-i\":62,\"./kernel-value/single-array3\":63,\"./kernel-value/single-array3d-i\":64,\"./kernel-value/single-array4\":65,\"./kernel-value/single-input\":66,\"./kernel-value/unsigned-array\":67,\"./kernel-value/unsigned-input\":68}],40:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};\n},{\"../../../utils\":113,\"./index\":55}],41:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":113,\"./html-image\":53}],42:[function(require,module,exports){\nconst { WebGLKernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLVideo\n};\n},{\"./dynamic-html-image\":41}],43:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":113,\"./memory-optimized-number-texture\":57}],44:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.checkSize(value.size[0], value.size[1]);\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":113,\"./number-texture\":58}],45:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};\n},{\"../../../utils\":113,\"./single-array\":59}],46:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":113,\"./single-array1d-i\":60}],47:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":113,\"./single-array2d-i\":62}],48:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":113,\"./single-array3d-i\":64}],49:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};\n},{\"../../../utils\":113,\"./single-input\":66}],50:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":113,\"./unsigned-array\":67}],51:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":113,\"./unsigned-input\":68}],52:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};\n},{\"../../../utils\":113,\"./index\":55}],53:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.requestTexture();\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputImage.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};\n},{\"../../../utils\":113,\"./index\":55}],54:[function(require,module,exports){\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueHTMLVideo\n};\n},{\"./html-image\":53}],55:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { Input } = require('../../../input');\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n    this.prevArg = null;\n  }\n\n  checkSize(width, height) {\n    if (!this.kernel.validate) return;\n    const { maxTextureSize } = this.kernel.constructor.features;\n    if (width > maxTextureSize || height > maxTextureSize) {\n      if (width > height) {\n        throw new Error(`Argument width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else {\n        throw new Error(`Argument height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      }\n    }\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n    this.setupTexture();\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n  formatArrayTransfer(value, length, Type) {\n    if (utils.isArray(value[0]) || this.optimizeFloatMemory) {\n      const valuesFlat = new Float32Array(length);\n      utils.flattenTo(value, valuesFlat);\n      return valuesFlat;\n    } else {\n      switch (value.constructor) {\n        case Uint8ClampedArray:\n        case Uint8Array:\n        case Int8Array:\n        case Uint16Array:\n        case Int16Array:\n        case Float32Array:\n        case Int32Array: {\n          const valuesFlat = new(Type || value.constructor)(length);\n          utils.flattenTo(value, valuesFlat);\n          return valuesFlat;\n        }\n        default: {\n          const valuesFlat = new Float32Array(length);\n          utils.flattenTo(value, valuesFlat);\n          return valuesFlat;\n        }\n      }\n    }\n  }\n\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n\n  getVariablePrecisionString() {\n    return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);\n  }\n\n  destroy() {\n    if (this.prevArg) {\n      this.prevArg.delete();\n    }\n    this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};\n},{\"../../../input\":109,\"../../../utils\":113,\"../../kernel-value\":35}],56:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};\n},{\"../../../utils\":113,\"./index\":55}],57:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    this.setupTexture();\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type }) must be from same context`);\n    }\n\n    const { context: gl, kernel } = this;\n    if (kernel.pipeline) {\n      kernel.updateTextureArgumentRefs(this, inputTexture);\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":113,\"./index\":55}],58:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    this.setupTexture();\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      kernel.updateTextureArgumentRefs(this, inputTexture);\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};\n},{\"../../../utils\":113,\"./index\":55}],59:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};\n},{\"../../../utils\":113,\"./index\":55}],60:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};\n},{\"../../../utils\":113,\"./index\":55}],61:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2\n};\n},{\"../../../utils\":113,\"./index\":55}],62:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};\n},{\"../../../utils\":113,\"./index\":55}],63:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3\n};\n},{\"../../../utils\":113,\"./index\":55}],64:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};\n},{\"../../../utils\":113,\"./index\":55}],65:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray4\n};\n},{\"../../../utils\":113,\"./index\":55}],66:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};\n},{\"../../../utils\":113,\"./index\":55}],67:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};\n},{\"../../../utils\":113,\"./index\":55}],68:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0] * (4 / this.bitRatio), this.textureSize[1] * (4 / this.bitRatio));\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};\n},{\"../../../utils\":113,\"./index\":55}],69:[function(require,module,exports){\nconst { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst mrud = require('../../plugins/math-random-uniformly-distributed');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [mrud];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n\n    this.maxTexSize = null;\n    this.onRequestSwitchKernel = null;\n    this.removeIstanbulCoverage = true;\n\n    this.mergeSettings(source.settings || settings);\n\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n    this.texture = null;\n    this.mappedTextures = null;\n    this.textureCache = [];\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      if (settings.pluginNames) { \n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n\n    const onRequestTexture = () => {\n      return this.createTexture();\n    };\n    const onRequestIndex = () => {\n      return textureIndexes++;\n    };\n    const onUpdateValueMismatch = (constructor) => {\n      this.switchKernels({\n        type: 'argumentMismatch',\n        needed: constructor\n      });\n    };\n    const onRequestContextHandle = () => {\n      return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n    };\n\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture,\n        onRequestIndex,\n        onUpdateValueMismatch,\n        onRequestContextHandle,\n      });\n      this.kernelArguments.push(kernelArgument);\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  createTexture() {\n    const texture = this.context.createTexture();\n    this.textureCache.push(texture);\n    return texture;\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    this.forceUploadKernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n      if (kernelValue.forceUploadEachRun) {\n        this.forceUploadKernelConstants.push(kernelValue);\n      }\n    }\n  }\n\n  build() {\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    this._setupOutputTexture();\n    if (\n      this.subKernels !== null &&\n      this.subKernels.length > 0\n    ) {\n      this._setupSubOutputTextures();\n    }\n    this.built = true;\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  setupReturnTypes(functionBuilder) {\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize, forceUploadKernelConstants, context: gl } = this;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\n      const constant = forceUploadKernelConstants[i];\n      constant.updateValue(this.constants[constant.name]);\n      if (this.switchingKernels) return;\n    }\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        this._setupOutputTexture();\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return this.texture.clone();\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    this._setupOutputTexture();\n\n    if (this.subKernels !== null) {\n      this._setupSubOutputTextures();\n      this.drawBuffers();\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n  }\n\n  getInternalFormat() {\n    return this.context.RGBA;\n  }\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n\n  _setupOutputTexture() {\n    const { context: gl, texSize } = this;\n    if (this.texture) {\n      this.texture.beforeMutate();\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = this.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const { context: gl } = this;\n    if (this.mappedTextures && this.mappedTextures.length > 0) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.beforeMutate();\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      INJECTED_NATIVE: this._getInjectedNative(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString(),\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getVertShaderArtifactMap(args) {\n    return {\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float div_with_int_check(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x)/int(y));\n  }\n  return x / y;\n}` :\n      '';\n  }\n\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getInjectedNative() {\n    return this.injectedNative || '';\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        if (!this.constants.hasOwnProperty(name)) continue;\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  getKernelResultDeclaration() {\n    switch (this.returnType) {\n      case 'Array(2)':\n        return 'vec2 kernelResult';\n      case 'Array(3)':\n        return 'vec3 kernelResult';\n      case 'Array(4)':\n        return 'vec4 kernelResult';\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        return 'float kernelResult';\n      default:\n        if (this.graphical) {\n          return 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n  }\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const { subKernels } = this;\n    if (subKernels !== null) {\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`,\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`,\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`,\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`,\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`,\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`,\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n  }\n\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n    if (this.texture) {\n      this.texture.delete();\n      const textureCacheIndex = this.textureCache.indexOf(this.texture.texture);\n      if (textureCacheIndex > -1) {\n        this.textureCache.splice(textureCacheIndex, 1);\n      }\n      this.texture = null;\n    }\n    if (this.mappedTextures && this.mappedTextures.length) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.delete();\n        const textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);\n        if (textureCacheIndex > -1) {\n          this.textureCache.splice(textureCacheIndex, 1);\n        }\n      }\n      this.mappedTextures = null;\n    }\n    if (this.kernelArguments) {\n      for (let i = 0; i < this.kernelArguments.length; i++) {\n        this.kernelArguments[i].destroy();\n      }\n    }\n    if (this.kernelConstants) {\n      for (let i = 0; i < this.kernelConstants.length; i++) {\n        this.kernelConstants[i].destroy();\n      }\n    }\n    while (this.textureCache.length > 0) {\n      const texture = this.textureCache.pop();\n      this.context.deleteTexture(texture);\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};\n},{\"../../plugins/math-random-uniformly-distributed\":111,\"../../utils\":113,\"../function-builder\":9,\"../gl/kernel\":13,\"../gl/kernel-string\":12,\"./fragment-shader\":37,\"./function-node\":38,\"./kernel-value-maps\":39,\"./vertex-shader\":70}],70:[function(require,module,exports){\nconst vertexShader = `__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],71:[function(require,module,exports){\nconst fragmentShader = `#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],72:[function(require,module,exports){\nconst { WebGLFunctionNode } = require('../web-gl/function-node');\n\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\n        retArr.push(`bool(user_${idtNode.name})`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    } else {\n      retArr.push(`user_${idtNode.name}`);\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};\n},{\"../web-gl/function-node\":38}],73:[function(require,module,exports){\nconst { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHTMLImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHTMLImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGL2KernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGL2KernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGL2KernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  kernelValueMaps,\n  lookupKernelValueType\n};\n},{\"./kernel-value/boolean\":74,\"./kernel-value/dynamic-html-image\":76,\"./kernel-value/dynamic-html-image-array\":75,\"./kernel-value/dynamic-html-video\":77,\"./kernel-value/dynamic-memory-optimized-number-texture\":78,\"./kernel-value/dynamic-number-texture\":79,\"./kernel-value/dynamic-single-array\":80,\"./kernel-value/dynamic-single-array1d-i\":81,\"./kernel-value/dynamic-single-array2d-i\":82,\"./kernel-value/dynamic-single-array3d-i\":83,\"./kernel-value/dynamic-single-input\":84,\"./kernel-value/dynamic-unsigned-array\":85,\"./kernel-value/dynamic-unsigned-input\":86,\"./kernel-value/float\":87,\"./kernel-value/html-image\":89,\"./kernel-value/html-image-array\":88,\"./kernel-value/html-video\":90,\"./kernel-value/integer\":91,\"./kernel-value/memory-optimized-number-texture\":92,\"./kernel-value/number-texture\":93,\"./kernel-value/single-array\":94,\"./kernel-value/single-array1d-i\":95,\"./kernel-value/single-array2\":96,\"./kernel-value/single-array2d-i\":97,\"./kernel-value/single-array3\":98,\"./kernel-value/single-array3d-i\":99,\"./kernel-value/single-array4\":100,\"./kernel-value/single-input\":101,\"./kernel-value/unsigned-array\":102,\"./kernel-value/unsigned-input\":103}],74:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};\n},{\"../../web-gl/kernel-value/boolean\":40}],75:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { width, height } = images[0];\n    this.checkSize(width, height);\n    this.dimensions = [width, height, images.length];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImageArray\n};\n},{\"../../../utils\":113,\"./html-image-array\":88}],76:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/dynamic-html-image\":41}],77:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLVideo\n};\n},{\"../../../utils\":113,\"./dynamic-html-image\":76}],78:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\":43}],79:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/dynamic-number-texture\":44}],80:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};\n},{\"../../../utils\":113,\"../../web-gl2/kernel-value/single-array\":94}],81:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":113,\"../../web-gl2/kernel-value/single-array1d-i\":95}],82:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":113,\"../../web-gl2/kernel-value/single-array2d-i\":97}],83:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":113,\"../../web-gl2/kernel-value/single-array3d-i\":99}],84:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0] * this.bitRatio, this.textureSize[1] * this.bitRatio);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};\n},{\"../../../utils\":113,\"../../web-gl2/kernel-value/single-input\":101}],85:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/dynamic-unsigned-array\":50}],86:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/dynamic-unsigned-input\":51}],87:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/float\":52}],88:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('../../web-gl/kernel-value/index');\n\nclass WebGL2KernelValueHTMLImageArray extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.checkSize(value[0].width, value[0].height);\n    this.requestTexture();\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImageArray\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/index\":55}],89:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/html-image\":53}],90:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImage } = require('./html-image');\n\nclass WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLVideo\n};\n},{\"../../../utils\":113,\"./html-image\":89}],91:[function(require,module,exports){\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    const variablePrecision = this.getVariablePrecisionString();\n    if (this.origin === 'constants') {\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};\n},{\"../../web-gl/kernel-value/integer\":56}],92:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/memory-optimized-number-texture\":57}],93:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/number-texture\":58}],94:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/single-array\":59}],95:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/single-array1d-i\":60}],96:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray2 } = require('../../web-gl/kernel-value/single-array2');\n\nclass WebGL2KernelValueSingleArray2 extends WebGLKernelValueSingleArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2\n};\n},{\"../../web-gl/kernel-value/single-array2\":61}],97:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/single-array2d-i\":62}],98:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray3 } = require('../../web-gl/kernel-value/single-array3');\n\nclass WebGL2KernelValueSingleArray3 extends WebGLKernelValueSingleArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3\n};\n},{\"../../web-gl/kernel-value/single-array3\":63}],99:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/single-array3d-i\":64}],100:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray4 } = require('../../web-gl/kernel-value/single-array4');\n\nclass WebGL2KernelValueSingleArray4 extends WebGLKernelValueSingleArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray4\n};\n},{\"../../web-gl/kernel-value/single-array4\":65}],101:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/single-input\":66}],102:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/unsigned-array\":67}],103:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};\n},{\"../../../utils\":113,\"../../web-gl/kernel-value/unsigned-input\":68}],104:[function(require,module,exports){\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\nlet features = null;\n\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      kernelMap: true,\n      isTextureFloat: true,\n      isDrawBuffers: true,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    return super.getIsIntegerDivisionAccurate();\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl2', settings);\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.R32F:\n        return gl.RED;\n      case gl.RG32F:\n        return gl.RG;\n      case gl.RGBA32F:\n        return gl.RGBA;\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n  getInternalFormat() {\n    const { context: gl, optimizeFloatMemory, pipeline, precision } = this;\n\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              return gl.RGBA32F;\n            } else {\n              return gl.R32F;\n            }\n            case 'Array(2)':\n              return gl.RG32F;\n            case 'Array(3)': \n            case 'Array(4)':\n              return gl.RGBA32F;\n            default:\n              throw new Error('Unhandled return type');\n        }\n      }\n      return gl.RGBA32F;\n    }\n    return gl.RGBA;\n  }\n\n  _setupOutputTexture() {\n    const { context: gl } = this;\n    if (this.texture) {\n      this.texture.beforeMutate();\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = gl.createTexture();\n    const { texSize } = this;\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const { context: gl } = this;\n    if (this.mappedTextures && this.mappedTextures.length > 0) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.beforeMutate();\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n      }\n      return;\n    }\n    const { texSize } = this;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      const format = this.getInternalFormat();\n      if (this.precision === 'single') {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  _getHeaderString() {\n    return '';\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    if (subKernels === null || subKernels.length < 1) {\n      return `in ${ variablePrecision } vec2 vTexCoord;\\n`;\n    } else {\n      return `out ${ variablePrecision } vec2 vTexCoord;\\n`;\n    }\n  }\n\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  getKernelString() {\n    const result = [];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        this.getKernelResultDeclaration(),\n        'layout(location = 0) out vec4 data0'\n      );\n      for (let i = 0; i < subKernels.length; i++) {\n        const subKernel = subKernels[i];\n        result.push(\n          subKernel.returnType === 'Integer' ?\n          `int subKernelResult_${ subKernel.name } = 0` :\n          `float subKernelResult_${ subKernel.name } = 0.0`,\n          `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n        );\n      }\n    } else {\n      result.push(\n        'out vec4 data0',\n        this.getKernelResultDeclaration()\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`,\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`,\n      );\n    }\n    return result;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};\n},{\"../../utils\":113,\"../function-builder\":9,\"../web-gl/kernel\":69,\"./fragment-shader\":71,\"./function-node\":72,\"./kernel-value-maps\":73,\"./vertex-shader\":105}],105:[function(require,module,exports){\nconst vertexShader = `#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],106:[function(require,module,exports){\nconst lib = require('./index');\nconst GPU = lib.GPU;\nfor (const p in lib) {\n  if (!lib.hasOwnProperty(p)) continue;\n  if (p === 'GPU') continue; \n  GPU[p] = lib[p];\n}\nObject.defineProperty(window, 'GPU', {\n  get() {\n    return GPU;\n  }\n});\nmodule.exports = lib;\n},{\"./index\":108}],107:[function(require,module,exports){\nconst { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    this.injectedNative = null;\n    this.onIstanbulCoverageVariable = settings.onIstanbulCoverageVariable || null;\n    this.removeIstanbulCoverage = settings.hasOwnProperty('removeIstanbulCoverage') ? settings.removeIstanbulCoverage : null;\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;\n        this.addNativeFunction(p, settings.nativeFunctions[p]);\n      }\n    }\n  }\n\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      this.kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      console.warn('Falling back to CPU');\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        injectedNative: kernelRun.injectedNative,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n        warnVarUsage: kernelRun.warnVarUsage,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(reasons, args, kernel) {\n      if (kernel.debug) {\n        console.warn('Switching kernels');\n      }\n      let newOutput = null;\n      if (kernel.dynamicOutput) {\n        for (let i = reasons.length - 1; i >= 0; i--) {\n          const reason = reasons[i];\n          if (reason.type === 'outputPrecisionMismatch') {\n            newOutput = reason.needed;\n          }\n        }\n      }\n      const argumentTypes = new Array(args.length);\n      for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        const type = kernel.argumentTypes[i];\n        if (arg.type) {\n          argumentTypes[i] = arg.type;\n        } else {\n          switch (type) {\n            case 'Number':\n            case 'Integer':\n            case 'Float':\n            case 'ArrayTexture(1)':\n              argumentTypes[i] = utils.getVariableType(arg);\n              break;\n            default:\n              argumentTypes[i] = type;\n          }\n        }\n      }\n      const signature = kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        return existingKernel;\n      }\n\n      const newKernel = switchableKernels[signature] = new kernel.constructor(source, {\n        argumentTypes,\n        constantTypes: kernel.constantTypes,\n        graphical: kernel.graphical,\n        loopMaxIterations: kernel.loopMaxIterations,\n        constants: kernel.constants,\n        dynamicOutput: kernel.dynamicOutput,\n        dynamicArgument: kernel.dynamicArguments,\n        context: kernel.context,\n        canvas: kernel.canvas,\n        output: newOutput || kernel.output,\n        precision: kernel.precision,\n        pipeline: kernel.pipeline,\n        immutable: kernel.immutable,\n        optimizeFloatMemory: kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernel.fixIntegerDivisionAccuracy,\n        functions: kernel.functions,\n        nativeFunctions: kernel.nativeFunctions,\n        injectedNative: kernel.injectedNative,\n        subKernels: kernel.subKernels,\n        strictIntegers: kernel.strictIntegers,\n        debug: kernel.debug,\n        gpu: kernel.gpu,\n        validate,\n        warnVarUsage: kernel.warnVarUsage,\n        returnType: kernel.returnType,\n        onIstanbulCoverageVariable: kernel.onIstanbulCoverageVariable,\n        removeIstanbulCoverage: kernel.removeIstanbulCoverage,\n        tactic: kernel.tactic,\n        onRequestFallback,\n        onRequestSwitchKernel,\n      });\n      newKernel.build.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      return newKernel;\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      injectedNative: this.injectedNative,\n      onIstanbulCoverageVariable: this.onIstanbulCoverageVariable,\n      removeIstanbulCoverage: this.removeIstanbulCoverage,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernelRun = kernelRunShortcut(new this.Kernel(source, mergedSettings));\n\n    if (!this.canvas) {\n      this.canvas = kernelRun.canvas;\n    }\n\n    if (!this.context) {\n      this.context = kernelRun.context;\n    }\n\n    this.kernels.push(kernelRun);\n\n    return kernelRun;\n  }\n\n  createKernelMap() {\n    let fn;\n    let settings;\n    if (typeof arguments[arguments.length - 2] === 'function') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    return this.createKernel(fn, settingsCopy);\n  }\n\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  addFunction(source, settings) {\n    this.functions.push(utils.functionToIFunction(source, settings));\n    return this;\n  }\n\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    settings = settings || {};\n    const { argumentTypes, argumentNames } = this.Kernel.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.Kernel.nativeFunctionReturnType(source),\n    });\n    return this;\n  }\n\n  injectNative(source) {\n    this.injectedNative = source;\n    return this;\n  }\n\n  destroy() {\n    return new Promise((resolve, reject) => {\n      if (!this.kernels) {\n        resolve();\n      }\n      setTimeout(() => {\n        try {\n          for (let i = 0; i < this.kernels.length; i++) {\n            this.kernels[i].destroy(true); \n          }\n          let firstKernel = this.kernels[0];\n          if (firstKernel) {\n            if (firstKernel.kernel) {\n              firstKernel = firstKernel.kernel;\n            }\n            if (firstKernel.constructor.destroyContext) {\n              firstKernel.constructor.destroyContext(this.context);\n            }\n          }\n        } catch (e) {\n          reject(e);\n        }\n        resolve();\n      }, 0);\n    });\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};\n},{\"./backend/cpu/kernel\":8,\"./backend/headless-gl/kernel\":34,\"./backend/web-gl/kernel\":69,\"./backend/web-gl2/kernel\":104,\"./kernel-run-shortcut\":110,\"./utils\":113,\"gpu-mock.js\":4}],108:[function(require,module,exports){\nconst { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelValueMaps: webGLKernelValueMaps } = require('./backend/web-gl/kernel-value-maps');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { kernelValueMaps: webGL2KernelValueMaps } = require('./backend/web-gl2/kernel-value-maps');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nconst { FunctionTracer } = require('./backend/function-tracer');\n\nconst mathRandom = require('./plugins/math-random-uniformly-distributed');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  webGL2KernelValueMaps,\n\n  WebGLFunctionNode,\n  WebGLKernel,\n  webGLKernelValueMaps,\n\n  GLKernel,\n  Kernel,\n  FunctionTracer,\n\n  plugins: {\n    mathRandom\n  }\n};\n},{\"./alias\":5,\"./backend/cpu/function-node\":6,\"./backend/cpu/kernel\":8,\"./backend/function-builder\":9,\"./backend/function-node\":10,\"./backend/function-tracer\":11,\"./backend/gl/kernel\":13,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/function-node\":38,\"./backend/web-gl/kernel\":69,\"./backend/web-gl/kernel-value-maps\":39,\"./backend/web-gl2/function-node\":72,\"./backend/web-gl2/kernel\":104,\"./backend/web-gl2/kernel-value-maps\":73,\"./gpu\":107,\"./input\":109,\"./plugins/math-random-uniformly-distributed\":111,\"./texture\":112,\"./utils\":113}],109:[function(require,module,exports){\nclass Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n},{\"./utils\":113}],110:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    run = function() {\n      let result = kernel.run.apply(kernel, arguments);\n      if (kernel.switchingKernels) {\n        const reasons = kernel.resetSwitchingKernels();\n        const newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);\n        result = newKernel.run.apply(newKernel, arguments);\n      }\n      if (kernel.renderKernels) {\n        return kernel.renderKernels();\n      } else if (kernel.renderOutput) {\n        return kernel.renderOutput();\n      } else {\n        return result;\n      }\n    };\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n    shortcut.kernel = kernel;\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  shortcut.kernel = kernel;\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          kernel[property].apply(kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        if (property === 'toString') {\n          shortcut.toString = function() {\n            return kernel.toString.apply(kernel, arguments);\n          };\n        } else {\n          shortcut[property] = kernel[property].bind(kernel);\n        }\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => {\n        return kernel[property];\n      });\n      shortcut.__defineSetter__(property, (value) => {\n        kernel[property] = value;\n      });\n    }\n  }\n}\nmodule.exports = {\n  kernelRunShortcut\n};\n},{\"./utils\":113}],111:[function(require,module,exports){\nconst source = `// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}`;\n\nconst name = 'math-random-uniformly-distributed';\n\nconst functionMatch = `Math.random()`;\n\nconst functionReplace = `nrand(vTexCoord)`;\n\nconst functionReturnType = 'Number';\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('randomSeed1', Math.random());\n  kernel.setUniform1f('randomSeed2', Math.random());\n};\n\nconst plugin = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};\n\nmodule.exports = plugin;\n},{}],112:[function(require,module,exports){\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n      kernel,\n      internalFormat,\n      textureFormat\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    if (!texture) throw new Error('settings property \"texture\" required.');\n    if (!kernel) throw new Error('settings property \"kernel\" required.');\n    this.texture = texture;\n    if (texture._refs) {\n      texture._refs++;\n    } else {\n      texture._refs = 1;\n    }\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = kernel;\n    this.type = type;\n    this._deleted = false;\n    this.internalFormat = internalFormat;\n    this.textureFormat = textureFormat;\n  }\n\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clone() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  delete() {\n    if (this._deleted) return;\n    this._deleted = true;\n    if (this.texture._refs) {\n      this.texture._refs--;\n      if (this.texture._refs) return;\n    }\n    return this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  Texture\n};\n},{}],113:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nconst utils = {\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  getFunctionNameFromString(funcStr) {\n    return FUNCTION_NAME.exec(funcStr)[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); \n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value.length > 0 && value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n    switch (value.nodeName) {\n      case 'IMG':\n        return 'HTMLImage';\n      case 'VIDEO':\n        return 'HTMLVideo';\n    }\n    if (value.hasOwnProperty('type')) {\n      return value.type;\n    }\n    return 'Unknown';\n  },\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  functionToIFunction(source, settings) {\n    settings = settings || {};\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  },\n  flipPixels: (pixels, width, height) => {\n    const halfHeight = height / 2 | 0; \n    const bytesPerRow = width * 4;\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n    let indent = 0;\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          indent += 2;\n          for (let i = 0; i < ast.body.length; i++) {\n            const flat = flatten(ast.body[i]);\n            if (flat) {\n              result.push(' '.repeat(indent) + flat, ';\\n');\n            }\n          }\n          indent -= 2;\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          const declarations = utils.normalizeDeclarations(ast)\n            .map(flatten)\n            .filter(r => r !== null);\n          if (declarations.length < 1) {\n            return '';\n          } else {\n            return `${ast.kind} ${declarations.join(',')}`;\n          }\n          case 'VariableDeclarator':\n            if (ast.init.object && ast.init.object.type === 'ThisExpression') {\n              const lookup = thisLookup(ast.init.property.name);\n              if (lookup) {\n                return `${ast.id.name} = ${flatten(ast.init)}`;\n              } else {\n                return null;\n              }\n            } else {\n              return `${ast.id.name} = ${flatten(ast.init)}`;\n            }\n            case 'CallExpression': {\n              if (ast.callee.property.name === 'subarray') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.type === 'ThisExpression') {\n                functionDependencies.push(findDependency('this', ast.callee.property.name));\n                return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else if (ast.callee.object.name) {\n                const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n                if (foundSource === null) {\n                  return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                } else {\n                  functionDependencies.push(foundSource);\n                  return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                }\n              } else if (ast.callee.object.type === 'MemberExpression') {\n                return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else {\n                throw new Error('unknown ast.callee');\n              }\n            }\n            case 'ReturnStatement':\n              return `return ${flatten(ast.argument)}`;\n            case 'BinaryExpression':\n              return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n            case 'UnaryExpression':\n              if (ast.prefix) {\n                return `${ast.operator} ${flatten(ast.argument)}`;\n              } else {\n                return `${flatten(ast.argument)} ${ast.operator}`;\n              }\n              case 'ExpressionStatement':\n                return `${flatten(ast.expression)}`;\n              case 'SequenceExpression':\n                return `(${flatten(ast.expressions)})`;\n              case 'ArrowFunctionExpression':\n                return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n              case 'Literal':\n                return ast.raw;\n              case 'Identifier':\n                return ast.name;\n              case 'MemberExpression':\n                if (ast.object.type === 'ThisExpression') {\n                  return thisLookup(ast.property.name);\n                }\n                if (ast.computed) {\n                  return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n                }\n                return flatten(ast.object) + '.' + flatten(ast.property);\n              case 'ThisExpression':\n                return 'this';\n              case 'NewExpression':\n                return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              case 'ForStatement':\n                return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n              case 'AssignmentExpression':\n                return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n              case 'UpdateExpression':\n                return `${flatten(ast.argument)}${ast.operator}`;\n              case 'IfStatement':\n                return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n              case 'ThrowStatement':\n                return `throw ${flatten(ast.argument)}`;\n              case 'ObjectPattern':\n                return ast.properties.map(flatten).join(', ');\n              case 'ArrayPattern':\n                return ast.elements.map(flatten).join(', ');\n              case 'DebuggerStatement':\n                return 'debugger;';\n              case 'ConditionalExpression':\n                return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n              case 'Property':\n                if (ast.kind === 'init') {\n                  return flatten(ast.key);\n                }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\\n');\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  normalizeDeclarations: (ast) => {\n    if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type \"VariableDeclaration\"');\n    const normalizedDeclarations = [];\n    for (let declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {\n      const declaration = ast.declarations[declarationIndex];\n      if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {\n        const { properties } = declaration.id;\n        for (let propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {\n          const property = properties[propertyIndex];\n          if (property.value.type === 'ObjectPattern' && property.value.properties) {\n            for (let subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {\n              const subProperty = property.value.properties[subPropertyIndex];\n              if (subProperty.type === 'Property') {\n                normalizedDeclarations.push({\n                  type: 'VariableDeclarator',\n                  id: {\n                    type: 'Identifier',\n                    name: subProperty.key.name\n                  },\n                  init: {\n                    type: 'MemberExpression',\n                    object: {\n                      type: 'MemberExpression',\n                      object: declaration.init,\n                      property: {\n                        type: 'Identifier',\n                        name: property.key.name\n                      },\n                      computed: false\n                    },\n                    property: {\n                      type: 'Identifier',\n                      name: subProperty.key.name\n                    },\n                    computed: false\n                  }\n                });\n              } else {\n                throw new Error('unexpected state');\n              }\n            }\n          } else if (property.value.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: property.value && property.value.name ? property.value.name : property.key.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Identifier',\n                  name: property.key.name\n                },\n                computed: false\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {\n        const { elements } = declaration.id;\n        for (let elementIndex = 0; elementIndex < elements.length; elementIndex++) {\n          const element = elements[elementIndex];\n          if (element.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: element.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Literal',\n                  value: elementIndex,\n                  raw: elementIndex.toString(),\n                  start: element.start,\n                  end: element.end\n                },\n                computed: true\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else {\n        normalizedDeclarations.push(declaration);\n      }\n    }\n    return normalizedDeclarations;\n  },\n\n  splitHTMLImageToRGB: (gpu, image) => {\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  splitRGBAToCanvases: (gpu, rgba, width, height) => {\n    const visualKernelR = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelR(rgba);\n\n    const visualKernelG = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelG(rgba);\n\n    const visualKernelB = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelB(rgba);\n\n    const visualKernelA = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelA(rgba);\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  }\n};\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};\n},{\"./input\":109,\"./texture\":112,\"acorn\":1}]},{},[106])(106)\n});\n","const { GPU } = require('gpu.js');\n\nlet gpuInstance = null;\n\nfunction setup(value) {\n  gpuInstance = value;\n}\n\nfunction teardown() {\n  if (gpuInstance) {\n    gpuInstance.destroy();\n  }\n  gpuInstance = null;\n}\n\nfunction makeKernel(fn, settings) {\n  if (gpuInstance === null) {\n    setup(new GPU({ mode: 'gpu' }));\n  }\n  if (settings.hasOwnProperty('map')) {\n    return gpuInstance\n      .createKernelMap(settings.map, fn, settings)\n      .setPipeline(true);\n  }\n  return gpuInstance\n    .createKernel(fn, settings)\n    .setPipeline(true);\n}\n\nfunction makeDevKernel(fn, settings) {\n  if (settings && settings.map) {\n    throw new Error('map kernels are not supported by dev kernels');\n  }\n  const gpu = new GPU({ mode: 'dev' });\n  return gpu.createKernel(fn, settings);\n}\n\nfunction kernelInput(input, size) {\n  return GPU.input(input, size);\n}\n\nfunction release(texture) {\n  if (texture.delete) {\n    texture.delete();\n  }\n}\n\nfunction clone(texture) {\n  if (texture.clone) {\n    return texture.clone();\n  }\n  if (typeof texture[0] === 'number') {\n    return new Float32Array(texture);\n  } else if (typeof texture[0][0] === 'number') {\n    const result = [];\n    for (let y = 0; y < texture.length; y++) {\n      result.push(new Float32Array(texture[y]));\n    }\n    return result;\n  } else if (typeof texture[0][0][0] === 'number') {\n    const result = [];\n    for (let z = 0; z < texture.length; z++) {\n      const row = [];\n      result.push(row);\n      for (let y = 0; y < texture.length; y++) {\n        row.push(new Float32Array(texture[z][y]));\n      }\n    }\n    return result;\n  }\n\n  throw new Error('unrecognized argument');\n}\n\nmodule.exports = { setup, teardown, makeKernel, makeDevKernel, kernelInput, release, clone };\n","module.exports = function zeros(size) {\n  return new Float32Array(size);\n};\n","const zeros = require('./zeros');\n\nmodule.exports = function zeros2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = zeros(width);\n  }\n  return result;\n};\n","/**\n *\n * @param {Base} layer1\n * @param {Base} layer2\n */\nfunction checkSameSize(layer1, layer2) {\n  if (layer1.width !== layer2.width) {\n    throw new Error(\n      `Layer width mismatch of ${layer1.width} and ${\n        layer2.width\n      }`\n    );\n  }\n\n  if (layer1.height !== layer2.height) {\n    throw new Error(\n      `Layer height mismatch of ${layer1.height} and ${\n        layer2.height\n      }`\n    );\n  }\n}\n\nmodule.exports = {\n  checkSameSize\n};\n","const zeros2D = require('./zeros-2d');\n\nmodule.exports = function zeros3D(width, height, depth) {\n  const result = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = zeros2D(width, height);\n  }\n  return result;\n};\n","const { release } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nclass Base {\n  static get defaults() {\n    return {\n      width: 1,\n      height: 1,\n      depth: null,\n      weights: null,\n      deltas: null,\n      name: null,\n      praxisOpts: null,\n    };\n  }\n\n  constructor(settings) {\n    // size\n    this.width = null;\n    this.height = null;\n    this.depth = null;\n\n    // what matters :P\n    this.deltas = null;\n    this.weights = null;\n\n    this.praxis = null;\n    this.praxisOpts = null;\n\n    if (this.constructor !== Base) {\n      Object.assign(this, Base.defaults, settings);\n    }\n    Object.assign(this, this.constructor.defaults, settings);\n\n    // special settings\n    this.setupPraxis(settings);\n  }\n\n  setupPraxis(settings) {\n    if (!settings) return;\n    if (settings.hasOwnProperty('praxis')) {\n      if (typeof settings.praxis === 'function') {\n        this.praxis = settings.praxis(this, settings.praxisOpts);\n      } else {\n        this.praxis = settings.praxis;\n      }\n    }\n  }\n\n  /*\n  get weights() {\n    return this._weights;\n  }\n\n  set weights(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n      }\n    }\n    this._weights = value;\n  }\n\n  get deltas() {\n    return this._deltas;\n  }\n\n  set deltas(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n      }\n    }\n    this._deltas = value;\n  } */\n\n  validate() {\n    if (Number.isNaN(this.height)) {\n      throw new Error(`${this.constructor.name} layer height is not a number`);\n    }\n    if (Number.isNaN(this.width)) {\n      throw new Error(`${this.constructor.name} layer width is not a number`);\n    }\n    if (this.height < 1) {\n      throw new Error(`${this.constructor.name} layer height is less than 1`);\n    }\n    if (this.width < 1) {\n      throw new Error(`${this.constructor.name} layer width is less than 1`);\n    }\n  }\n\n  setupKernels() {\n    // console.log(`${this.constructor.name}-setupKernels is not yet implemented`)\n  }\n\n  reuseKernels(layer) {\n    if (layer.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.width} is not ${\n          this.width\n        }`\n      );\n    }\n    if (layer.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${\n          layer.height\n        } is not ${this.height}`\n      );\n    }\n    if (layer.hasOwnProperty('predictKernel')) {\n      this.predictKernel = layer.predictKernel;\n    }\n    if (layer.hasOwnProperty('compareKernel')) {\n      this.compareKernel = layer.compareKernel;\n    }\n    this.praxis = layer.praxis;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  // eslint-disable-next-line\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    const { weights, deltas } = this;\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    release(weights);\n    release(deltas);\n    // TODO: put into a kernel\n    if (this.depth > 0) {\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else {\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  toArray() {\n    return this.weights.toArray();\n  }\n\n  toJSON() {\n    const jsonLayer = {};\n    const { defaults, name } = this.constructor;\n    if (this.constructor !== Base) {\n      Object.assign(defaults, Base.defaults, defaults);\n    }\n    const keys = Object.keys(defaults);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'deltas') continue;\n      if (key === 'name' && this[key] === null) continue;\n      jsonLayer[key] = this[key];\n    }\n    jsonLayer.type = name;\n    return jsonLayer;\n  }\n}\n\nmodule.exports = {\n  Base\n};\n","const { Base } = require('./base');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nclass Activation extends Base {\n  constructor(inputLayer, settings) {\n    super();\n    this.inputLayer = inputLayer;\n\n    const { width, height, depth } = inputLayer;\n    this.predictKernel = null;\n    this.compareKernel = null;\n    this.width = width;\n    this.height = height;\n    this.validate();\n    if (depth > 0) {\n      this.depth = depth;\n      this.weights = zeros3D(width, height, depth);\n      this.deltas = zeros3D(width, height, depth);\n    } else {\n      this.weights = zeros2D(width, height);\n      this.deltas = zeros2D(width, height);\n    }\n    this.setupPraxis(settings);\n  }\n}\n\nmodule.exports = { Activation };\n","const { Base } = require('./base');\nconst { Activation } = require('./activation');\n\nclass Internal {}\nclass Filter extends Base {}\nclass Model extends Base {}\nclass Modifier extends Base {}\nclass Operator extends Base {}\n\nmodule.exports = { Activation, Internal, Filter, Model, Modifier, Operator };\n","const { makeKernel, release, clone } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { checkSameSize } = require('../utilities/layer-size');\nconst { Operator } = require('./types');\n\nfunction predict(inputWeights1, inputWeights2) {\n  return inputWeights1[this.thread.y][this.thread.x] + inputWeights2[this.thread.y][this.thread.x];\n}\n\nclass Add extends Operator {\n  constructor(inputLayer1, inputLayer2, settings) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.width = this.inputLayer1.width;\n    this.height = this.inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n    this.setupPraxis(settings);\n  }\n\n  validate() {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n  }\n\n  compare() {\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = clone(this.deltas);\n    this.inputLayer2.deltas = clone(this.deltas);\n  }\n}\n\nfunction add(inputLayer1, inputLayer2, settings) {\n  return new Add(inputLayer1, inputLayer2, settings);\n}\n\nmodule.exports = { Add, add, predict };\n","class Base {\n  static get defaults() {\n    return {};\n  }\n\n  constructor(layerTemplate, settings = {}) {\n    this.layerTemplate = layerTemplate;\n    this.width = layerTemplate.width || null;\n    this.height = layerTemplate.height || null;\n    this.depth = layerTemplate.depth || null;\n    Object.assign(this, this.constructor.defaults, settings);\n  }\n\n  setupKernels() {}\n\n  run() {}\n}\n\nmodule.exports = {\n  Base\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Base } = require('./base');\n\nfunction updateChange(value) {\n  return value;\n}\n\nfunction update(changes, weights, incomingWeights, inputDeltas) {\n  const lastChange = changes[this.thread.y][this.thread.x];\n  const inputDelta = inputDeltas[this.thread.y][0];\n  const weight = weights[this.thread.y][this.thread.x];\n  const incoming = incomingWeights[this.thread.x][0];\n\n  const change = this.constants.learningRate * inputDelta * incoming + this.constants.momentum * lastChange;\n  updateChange(change);\n  return weight + change;\n}\n\nclass ArthurDeviationWeights extends Base {\n  static get defaults() {\n    return {\n      learningRate: 0.3,\n      momentum: 0.1\n    };\n  }\n\n  constructor(layer, settings) {\n    super(layer, settings);\n    this.weightsLayer = null;\n    this.incomingLayer = null;\n    this.deltaLayer = null;\n\n    if (settings) {\n      if (settings.weightsLayer) {\n        this.weightsLayer = settings.weightsLayer\n      }\n      if (settings.incomingLayer) {\n        this.incomingLayer = settings.incomingLayer;\n      }\n      if (settings.deltaLayer) {\n        this.deltaLayer = settings.deltaLayer;\n      }\n    }\n\n    this.changes = zeros2D(layer.width, layer.height);\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(\n      this.changes,\n      this.weightsLayer.weights,\n      this.incomingLayer.weights,\n      this.deltaLayer.deltas\n    );\n    this.changes = output.changes;\n    return output.result;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      map: {\n        changes: updateChange\n      },\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.learningRate,\n        momentum: this.momentum\n      }\n    });\n  }\n}\n\nfunction arthurDeviationWeights(layer, settings) {\n  return new ArthurDeviationWeights(layer, settings);\n}\n\nmodule.exports = {\n  ArthurDeviationWeights,\n  arthurDeviationWeights,\n  update,\n  updateChange,\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst { Base } = require('./base');\n\nfunction update(weights, deltas) {\n  return weights[this.thread.y][this.thread.x] + this.constants.learningRate * deltas[this.thread.y][this.thread.x];\n}\n\nclass ArthurDeviationBiases extends Base {\n  static get defaults() {\n    return {\n      learningRate: 0.3\n    };\n  }\n\n  constructor(layer, settings) {\n    super(layer, settings);\n    this.kernel = null;\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(layer.weights, layer.deltas);\n    return output;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.learningRate\n      }\n    });\n  }\n}\n\nfunction arthurDeviationBiases(layer, settings) {\n  return new ArthurDeviationBiases(layer, settings);\n}\n\nmodule.exports = {\n  ArthurDeviationBiases,\n  arthurDeviationBiases,\n  update,\n};\n","module.exports = function randomWeight() {\n  return Math.random() * 0.4 - 0.2;\n}\n","const randomWeight = require('./random-weight');\n\nmodule.exports = function randos(size) {\n  const array = new Float32Array(size);\n  for (let i = 0; i < size; i++) {\n    array[i] = randomWeight();\n  }\n  return array;\n};\n","const randos = require('./randos');\n\nmodule.exports = function randos2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = randos(width);\n  }\n  return result;\n}\n","const { Model } = require('./types');\nconst randos2D = require('../utilities/randos-2d');\nconst zeros2D = require('../utilities/zeros-2d');\n\nclass Random extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = randos2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nfunction random(settings) {\n  return new Random(settings);\n}\n\nmodule.exports = {\n  Random,\n  random\n};\n","const { makeKernel, release } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Operator } = require('./types');\n\nfunction predict(weights1, weights2) {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += weights1[this.thread.y][i] * weights2[i][this.thread.x];\n  }\n  return sum;\n}\n\nfunction compareFromX(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i];\n  }\n  return sum;\n}\n\nfunction compareFromY(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y];\n  }\n  return sum;\n}\n\nclass Multiply extends Operator {\n  constructor(inputLayer1, inputLayer2, settings = {}) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.compareKernel1 = null;\n    this.compareKernel2 = null;\n\n    this.width = inputLayer2.width;\n    this.height = inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n\n    if (settings && settings.name) {\n      this.name = settings.name;\n    }\n    this.setupPraxis(settings);\n  }\n\n  validate() {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.height\n        }`\n      );\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      constants: {\n        size: this.inputLayer2.height,\n      },\n    });\n    this.compareKernel1 = makeKernel(compareFromX, {\n      output: [this.inputLayer1.width, this.inputLayer1.height],\n      constants: {\n        size: this.inputLayer2.width,\n      },\n    });\n    this.compareKernel2 = makeKernel(compareFromY, {\n      output: [this.inputLayer2.width, this.inputLayer2.height],\n      constants: {\n        size: this.inputLayer1.height,\n      },\n    });\n  }\n\n  reuseKernels(layer) {\n    super.reuseKernels(layer);\n    this.compareKernel1 = layer.compareKernel1;\n    this.compareKernel2 = layer.compareKernel2;\n  }\n\n  predict() {\n    const { weights } = this;\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n    release(weights);\n  }\n\n  compare() {\n    const inputLayer1Deltas = this.inputLayer1.deltas;\n    const inputLayer2Deltas = this.inputLayer2.deltas;\n\n    const newDeltas1 = this.compareKernel1(\n      this.deltas,\n      this.inputLayer1.deltas,\n      this.inputLayer2.weights\n    );\n    const newDeltas2 = this.compareKernel2(\n      this.deltas,\n      this.inputLayer2.deltas,\n      this.inputLayer1.weights\n    );\n\n    this.inputLayer2.deltas = newDeltas2;\n    this.inputLayer1.deltas = newDeltas1;\n\n    release(inputLayer1Deltas);\n    release(inputLayer2Deltas);\n  }\n}\n\nfunction multiply(inputLayer1, inputLayer2, settings) {\n  return new Multiply(inputLayer1, inputLayer2, settings);\n}\n\nmodule.exports = { Multiply, multiply, predict, compareFromX, compareFromY };\n","const { Activation } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/sigmoid');\n\nfunction predict2D(inputs) {\n  return 1 / (1 + Math.exp(-inputs[this.thread.y][this.thread.x]));\n}\n\nfunction predict3D(inputs) {\n  return 1 / (1 + Math.exp(-inputs[this.thread.z][this.thread.y][this.thread.x]));\n}\n\nfunction compare2D(weights, deltas) {\n  const weight = weights[this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nfunction compare3D(weights, deltas) {\n  const weight = weights[this.thread.z][this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.z][this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nclass Sigmoid extends Activation {\n  setupKernels() {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    const { weights } = this;\n    this.weights = this.predictKernel(this.inputLayer.weights);\n    release(weights);\n  }\n\n  compare() {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction sigmoid(inputLayer, settings) {\n  return new Sigmoid(inputLayer, settings);\n}\n\nmodule.exports = { Sigmoid, sigmoid, predict2D, predict3D, compare2D, compare3D };\n","const { arthurDeviationWeights } = require('../praxis/arthur-deviation-weights');\nconst { arthurDeviationBiases } = require('../praxis/arthur-deviation-biases');\nconst { add } = require('./add');\nconst { random } = require('./random');\nconst { multiply } = require('./multiply');\nconst { sigmoid } = require('./sigmoid');\n\nfunction noopPraxis() {\n  return { run: (layer) => layer.weights };\n}\n\nfunction arthurFeedForward(settings, inputLayer) {\n  const { height } = settings;\n  function weightsPraxis(layer, settings) {\n    return arthurDeviationWeights(layer, settings);\n  }\n  function biasesPraxis(layer, settings) {\n    return arthurDeviationBiases(layer, settings);\n  }\n  const weightsLayer = random({\n    name: 'weights',\n    height,\n    width: inputLayer.height,\n    praxis: weightsPraxis,\n  });\n\n  const biasesLayer = random({\n    name: 'biases',\n    height,\n    praxis: biasesPraxis,\n  });\n\n  const multiplyLayer = multiply(weightsLayer, inputLayer, { praxis: noopPraxis });\n  const addLayer = add(multiplyLayer, biasesLayer, { praxis: noopPraxis });\n  const sigmoidLayer = sigmoid(addLayer, { praxis: noopPraxis });\n\n  weightsLayer.praxis.weightsLayer = weightsLayer;\n  weightsLayer.praxis.incomingLayer = inputLayer;\n  weightsLayer.praxis.deltaLayer = sigmoidLayer;\n  return sigmoidLayer;\n}\n\nmodule.exports = {\n  arthurFeedForward\n};\n","function setStride(layer, settings) {\n  const { defaults } = layer.constructor;\n\n  if (settings.hasOwnProperty('stride')) {\n    layer.strideX = settings.stride;\n    layer.strideY = settings.stride;\n  } else {\n    if (settings.hasOwnProperty('strideX')) {\n      layer.strideX = settings.strideX;\n    } else {\n      layer.strideX = defaults.stride;\n    }\n\n    if (settings.hasOwnProperty('strideY')) {\n      layer.strideY = settings.strideY;\n    } else {\n      layer.strideY = defaults.stride;\n    }\n  }\n}\n\nfunction setPadding(layer, settings) {\n  const { defaults } = layer.constructor;\n\n  if (settings.hasOwnProperty('padding')) {\n    layer.paddingX = settings.padding;\n    layer.paddingY = settings.padding;\n  } else {\n    if (settings.hasOwnProperty('paddingX')) {\n      layer.paddingX = settings.paddingX;\n    } else {\n      layer.paddingX = defaults.padding;\n    }\n\n    if (settings.hasOwnProperty('paddingY')) {\n      layer.paddingY = settings.paddingY;\n    } else {\n      layer.paddingY = defaults.padding;\n    }\n  }\n}\n\nmodule.exports = { setStride, setPadding };\n","const rondos2D = require('./randos-2d');\n\nmodule.exports = function randos3D(width, height, depth) {\n  const result = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = rondos2D(width, height);\n  }\n  return result;\n}\n","module.exports = function values(size, value) {\n  return new Float32Array(size).fill(value);\n}","const { makeKernel, release, clone } = require('../utilities/kernel');\nconst { setStride, setPadding } = require('../utilities/layer-setup');\nconst { Filter } = require('./types');\nconst randos = require('../utilities/randos');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros3D = require('../utilities/zeros-3d');\nconst values = require('../utilities/values');\n\nfunction predict(inputs, filters, biases) {\n  const startFilterX = this.constants.paddingX - (this.thread.x * this.constants.strideX);\n  const startInputX = (this.thread.x * this.constants.strideX) - this.constants.paddingX;\n  const endFilterX = Math.min(this.constants.filterWidth, startFilterX + this.constants.inputWidth);\n\n  const startFilterY = this.constants.paddingY - (this.thread.y * this.constants.strideY);\n  const startInputY = (this.thread.y * this.constants.strideY) - this.constants.paddingY;\n  const endFilterY = Math.min(this.constants.filterHeight, startFilterY + this.constants.inputHeight);\n\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let filterY = Math.max(0, startFilterY), inputY = Math.max(0, startInputY); filterY < endFilterY; filterY++, inputY++) {\n      for (let filterX = Math.max(0, startFilterX), inputX = Math.max(0, startInputX); filterX < endFilterX; filterX++, inputX++) {\n        sum += filters[z][filterY][filterX] * inputs[z][inputY][inputX];\n      }\n    }\n  }\n  return sum + biases[this.thread.z];\n}\n\nfunction compareFilterDeltas(filterDeltas, inputs, deltas) {\n  const startDeltaX = Math.max(0, Math.ceil((this.constants.paddingX - this.thread.x) / this.constants.strideX));\n  const startInputX = startDeltaX * this.constants.strideX + this.thread.x - this.constants.paddingX;\n  const endDeltaX = Math.min(this.constants.deltaWidth, Math.floor(((this.constants.inputWidth - 1) - this.thread.x + this.constants.paddingX) / this.constants.strideX) + 1);\n\n  const startDeltaY = Math.max(0, Math.ceil((this.constants.paddingY - this.thread.y) / this.constants.strideY));\n  const startInputY = startDeltaY * this.constants.strideY + this.thread.y - this.constants.paddingY;\n  const endDeltaY = Math.min(this.constants.deltaHeight, Math.floor(((this.constants.inputHeight - 1) - this.thread.y + this.constants.paddingY) / this.constants.strideY) + 1);\n\n  let sum = filterDeltas[this.thread.z][this.thread.y][this.thread.x];\n  for (let deltaY = startDeltaY, inputY = startInputY; deltaY < endDeltaY; deltaY++, inputY += this.constants.strideY) {\n    for (let deltaX = startDeltaX, inputX = startInputX; deltaX < endDeltaX; deltaX++, inputX += this.constants.strideX) {\n      sum += inputs[this.thread.z][inputY][inputX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nfunction compareInputDeltas(inputDeltas, filters, deltas) {\n  const x = this.thread.x + this.constants.paddingX;\n  const startDeltaX = x < this.constants.filterWidth ? 0 : Math.floor((x - this.constants.filterWidth + this.constants.strideX) / this.constants.strideX);\n  const startFilterX = x - startDeltaX * this.constants.strideX;\n  const endDeltaX = Math.min(startDeltaX + Math.floor(startFilterX / this.constants.strideX) + 1, this.constants.deltaWidth);\n\n  const y = this.thread.y + this.constants.paddingY;\n  const startDeltaY = y < this.constants.filterHeight ? 0 : Math.floor((y - this.constants.filterHeight + this.constants.strideY) / this.constants.strideY);\n  const startFilterY = y - startDeltaY * this.constants.strideY;\n  const endDeltaY = Math.min(startDeltaY + Math.floor(startFilterY / this.constants.strideY) + 1, this.constants.deltaHeight);\n\n  let sum = inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n  let deltaY = startDeltaY;\n  for (let filterY = startFilterY; deltaY < endDeltaY; filterY -= this.constants.strideY, deltaY++) {\n    let deltaX = startDeltaX;\n    for (let filterX = startFilterX; deltaX < endDeltaX; filterX -= this.constants.strideX, deltaX++) {\n      sum += filters[this.thread.z][filterY][filterX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nfunction compareBiases(biasDeltas, deltas) {\n  let sum = 0;\n  for (let y = 0; y < this.constants.deltaHeight; y++) {\n    for (let x = 0; x < this.constants.deltaWidth; x++) {\n      sum += deltas[this.thread.z][y][x];\n    }\n  }\n  return biasDeltas[this.thread.z][this.thread.y][this.thread.x] + sum;\n}\n\nclass Convolution extends Filter {\n  static get defaults() {\n    return {\n      stride: 0,\n      padding: 0,\n      bias: 0.1,\n      filterCount: 1,\n      filterWidth: 0,\n      filterHeight: 0,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n\n    this.stride = null;\n    this.strideX = null;\n    this.strideY = null;\n    setStride(this, settings);\n\n    this.padding = null;\n    this.paddingX = null;\n    this.paddingY = null;\n    setPadding(this, settings);\n\n    this.filterCount = settings.filterCount;\n    this.filterWidth = settings.filterWidth;\n    this.filterHeight = settings.filterHeight;\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    );\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n    this.depth = this.filterCount;\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.biases = values(this.depth, this.bias);\n    this.biasDeltas = randos(this.depth);\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount);\n\n    this.learnFilters = null;\n    this.learnInputs = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n    });\n\n    this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n      constants: {\n        deltasWidth: this.width,\n        deltasHeight: this.height,\n        deltasDepth: this.depth,\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n    });\n\n    this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n      constants: {\n        filterCount: this.filterCount,\n      },\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n    });\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [1, 1, this.depth],\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n      },\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare() {\n    const { filterDeltas, biasDeltas } = this;\n    this.filterDeltas = this.compareFilterDeltasKernel(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(filterDeltas);\n    this.biasDeltas = this.compareBiasesKernel(biasDeltas, this.deltas);\n    release(biasDeltas);\n    release(this.deltas);\n    this.deltas = this.compareInputDeltasKernel(this.filters, this.inputLayer.deltas);\n\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = clone(this.deltas);\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    // TODO: handle filters\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    release(this.weights);\n    release(this.deltas);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n  }\n}\n\nfunction convolution(settings, inputLayer) {\n  return new Convolution(settings, inputLayer);\n}\n\nmodule.exports = {\n  Convolution,\n  convolution,\n  predict,\n  compareFilterDeltas,\n  compareInputDeltas,\n  compareBiases\n};\n","const { Filter } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\n\nfunction setDropout(dropout) {\n  return dropout;\n}\nfunction trainingPredict(inputs) {\n  if (setDropout(Math.random()) < this.constants.probability) {\n    return 0;\n  }\n  return inputs[this.thread.y][this.thread.x];\n}\n\nfunction predict(inputs) {\n  return inputs[this.thread.y][this.thread.x] * this.constants.probability;\n}\n\nfunction compare(dropouts, deltas) {\n  if (dropouts[this.thread.y][this.thread.x] === 0) {\n    return 0;\n  }\n  return deltas[this.thread.y][this.thread.x];\n}\n\nclass Dropout extends Filter {\n  static get defaults() {\n    return {\n      width: 1,\n      height: 1,\n      depth: null,\n      probability: 0.5\n    };\n  }\n\n  constructor(inputLayer, settings) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.height = inputLayer.height;\n    this.width = inputLayer.width;\n    this.dropouts = null;\n    this.validate();\n  }\n\n  setupKernels(isTraining) {\n    const output = [this.width, this.height];\n\n    if (isTraining) {\n      this.predictKernel = makeKernel(trainingPredict, { output, map: { dropouts: setDropout } });\n      this.compareKernel = makeKernel(compare, { output });\n    } else {\n      this.predictKernel = makeKernel(predict, { output });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    release(this.dropouts);\n    const { result, dropouts } = this.predictKernel(this.inputLayer.weights);\n    this.weights = result;\n    this.dropouts = dropouts;\n  }\n\n  compare() {\n    release(this.deltas);\n    this.deltas = this.compareKernel(this.dropouts, this.inputLayer.deltas);\n  }\n}\n\nfunction dropout(settings, inputLayer) {\n  return new Dropout(settings, inputLayer);\n}\n\nmodule.exports = { Dropout, dropout, setDropout, trainingPredict, predict, compare };\n","const { random } = require('./random');\nconst { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { sigmoid } = require('./sigmoid');\n\nfunction feedForward(settings, input) {\n  const { height, praxisOpts } = settings;\n  const weights = random({ name: 'weights', height, width: input.height, praxisOpts });\n  const biases = random({ name: 'biases', height, praxisOpts });\n  return sigmoid(add(multiply(weights, input, { praxisOpts }), biases, { praxisOpts }), { praxisOpts });\n}\n\nmodule.exports = {\n  feedForward\n};\n","const { Filter } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst values = require('../utilities/values');\nconst randos2D = require('../utilities/randos-2d');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nfunction predict(inputs, filters, biases) {\n  let output = 0;\n  let i = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      output += inputs[y][x] * filters[this.thread.x][i];\n      i++;\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nfunction predict3D(inputs, filters, biases) {\n  let output = 0;\n  let i = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        output += inputs[z][y][x] * filters[this.thread.x][i];\n        i++;\n      }\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nfunction compareInputDeltas(inputDeltas, deltas, filters) {\n  let sum = 0;\n  const filterX = this.thread.x + (this.thread.y * this.output.x);\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.y][this.thread.x];\n}\n\nfunction compareInputDeltas3D(inputDeltas, deltas, filters) {\n  let sum = 0;\n  const filterX = this.thread.x + (this.thread.y * this.output.x);\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n}\n\nfunction compareBiases(biases, deltas) {\n  return biases[this.thread.x] + deltas[this.thread.y][this.thread.x];\n}\n\nfunction compareFilterDeltas(filterDeltas, inputWeights, deltas) {\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[this.thread.y][this.thread.x] * deltas[this.constants.deltaY][this.constants.deltaX]);\n}\n\nfunction compareFilterDeltas3D(filterDeltas, inputWeights, deltas) {\n  const inputZ = Math.floor(this.thread.x / (this.constants.inputWidth * this.constants.inputHeight));\n  const inputY = Math.floor((this.thread.x - inputZ * this.constants.inputWidth * this.constants.inputHeight) / this.constants.inputWidth);\n  const inputX = this.thread.x - this.constants.inputWidth * (inputY + this.constants.inputHeight * inputZ);\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[inputZ][inputY][inputX] * deltas[0][this.thread.y]);\n}\n\nclass FullyConnected extends Filter {\n  static get defaults() {\n    return {\n      bias: 0.1,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n    this.compareFilterDeltasKernel = null;\n    this.compareInputDeltasKernel = null;\n    this.compareBiasesKernel = null;\n\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n\n    this.biases = values(this.height, this.bias);\n    this.biasDeltas = zeros(this.height);\n\n    this.filters = randos2D(connectionCount, this.height);\n    this.filterDeltas = zeros2D(connectionCount, this.height);\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height);\n      this.deltas = zeros3D(this.width, this.height);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  validate() {\n    super.validate();\n    if (this.depth > 0) throw new Error('depth not supported');\n  }\n\n  setupKernels() {\n    const { inputLayer } = this;\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n    if (inputLayer.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n          inputDepth: inputLayer.depth,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas3D, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas3D, {\n        output: [inputLayer.width, inputLayer.height, inputLayer.depth],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n        output: [inputLayer.width, inputLayer.height],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    }\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare() {\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = this.compareInputDeltasKernel(\n      inputLayerDeltas,\n      this.deltas,\n      this.filters\n    );\n    release(inputLayerDeltas);\n\n    const { biasDeltas, filterDeltas } = this;\n    // TODO: handle biasDeltas learn\n    this.biasDeltas = this.compareBiasesKernel(this.biases, this.deltas);\n\n    // TODO: handle filterDeltas learn\n    this.filterDeltas = this.compareFilterDeltasKernel(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(biasDeltas);\n    release(filterDeltas);\n  }\n}\n\nfunction fullyConnected(settings, inputLayer) {\n  return new FullyConnected(settings, inputLayer);\n}\n\nmodule.exports = { FullyConnected, fullyConnected, predict, predict3D, compareInputDeltas, compareInputDeltas3D, compareBiases, compareFilterDeltas, compareFilterDeltas3D };\n","const { makeKernel, release } = require('../utilities/kernel');\nconst { Modifier } = require('./types');\n\nfunction predict(weights) {\n  return -weights[this.thread.y][this.thread.x];\n}\n\nclass Negative extends Modifier {\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    const { weights } = this;\n    this.weights = this.predictKernel(this.inputLayer.weights);\n    release(weights);\n  }\n}\n\nfunction negative(settings, inputLayer) {\n  return new Negative(settings, inputLayer);\n}\n\nmodule.exports = { Negative, negative, predict };\n","const { makeKernel, release } = require('../utilities/kernel');\nconst { Operator } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { checkSameSize } = require('../utilities/layer-size');\n\nfunction predict(weights, inputLayerWeights) {\n  return (\n    weights[this.thread.y][this.thread.x] *\n    inputLayerWeights[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare(weights, deltas) {\n  return (\n    weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nclass MultiplyElement extends Operator {\n  constructor(inputLayer1, inputLayer2) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n\n    this.width = inputLayer1.width;\n    this.height = inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  validate() {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    const { weights } = this;\n    this.weights = this.predictKernel(weights, this.inputLayer.weights);\n    release(weights);\n  }\n\n  compare() {\n    const { deltas } = this;\n    this.deltas = this.compareKernel(this.weights, deltas);\n    release(deltas);\n  }\n}\n\nfunction multiplyElement(inputLayer1, inputLayer2) {\n  return new MultiplyElement(inputLayer1, inputLayer2);\n}\n\nmodule.exports = { MultiplyElement, multiplyElement };\n","module.exports = function ones(size) {\n  return new Float32Array(size).fill(1);\n}\n","const ones = require('./ones');\n\nmodule.exports = function ones2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = ones(width);\n  }\n  return result;\n}\n","const ones2D = require('../utilities/ones-2d');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Model } = require('./types');\n\nclass Ones extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = ones2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n}\n\nfunction ones(settings) {\n  return new Ones(settings);\n}\n\nmodule.exports = {\n  Ones,\n  ones\n};\n","const { Activation } = require('./activation');\nconst { makeKernel } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/tanh');\nconst { release } = require('../utilities/kernel');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, errors) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    errors[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare3D(weights, errors) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    errors[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass Tanh extends Activation {\n  setupKernels() {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate]\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate]\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    const { weights } = this;\n    this.weights = this.predictKernel(this.inputLayer.weights);\n    release(weights);\n  }\n\n  compare() {\n    const { deltas } = this;\n    this.deltas = this.compareKernel(this.weights, this.deltas);\n    release(deltas);\n  }\n}\n\nfunction tanh(inputLayer, settings) {\n  return new Tanh(inputLayer, settings);\n}\n\nmodule.exports = { Tanh, tanh, predict2D, predict3D, compare2D, compare3D };\n","const zeros2D = require('../utilities/zeros-2d');\nconst { Model } = require('./types');\n\nclass Zeros extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nfunction zeros(settings) {\n  return new Zeros(settings);\n}\n\nmodule.exports = {\n  Zeros,\n  zeros\n};\n","const { add } = require('./add');\nconst { negative } = require('./negative');\nconst { multiply } = require('./multiply');\nconst { multiplyElement } = require('./multiply-element');\nconst { ones } = require('./ones');\nconst { sigmoid } = require('./sigmoid');\nconst { random } = require('./random');\nconst { tanh } = require('./tanh');\nconst { zeros } = require('./zeros');\n\nfunction gru(settings, recurrentInput, input) {\n  const { height } = settings;\n  const updateGateWeights = random({ height, width: input.height });\n  const updateGatePeepholes = random({ width: height, height });\n  const updateGateBias = zeros({ height });\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(updateGateWeights, input),\n        multiply(updateGatePeepholes, recurrentInput)\n      ),\n      updateGateBias\n    )\n  );\n\n  const resetGateWeights = random({ height, width: input.height });\n  const resetGatePeepholes = random({ width: height, height });\n  const resetGateBias = zeros({ height });\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(resetGateWeights, input),\n        multiply(resetGatePeepholes, recurrentInput)\n      ),\n      resetGateBias\n    )\n  );\n\n  const cellWeights = random({ height, width: input.height });\n  const cellPeepholes = random({ width: height, height });\n  const cellBias = zeros({ height });\n  const cell = tanh(\n    add(\n      add(\n        multiply(cellWeights, input),\n        multiply(cellPeepholes, multiplyElement(resetGate, recurrentInput))\n      ),\n      cellBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(ones(updateGate.rows, updateGate.columns), negative(updateGate)),\n      cell\n    ),\n    multiplyElement(recurrentInput, updateGate)\n  );\n}\n\nmodule.exports = {\n  gru\n};\n","const { Model } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { makeKernel, release, kernelInput } = require('../utilities/kernel');\n\nclass Input extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = null;\n    this.reshapeInput = null;\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels() {\n    if (this.width === 1) {\n      this.predict = this.predict1D;\n      this.reshapeInput = makeKernel(function(value) {\n        return value[this.thread.y];\n      }, {\n        output: [1, this.height]\n      });\n    } else {\n      this.reshapeInput = (inputs) => inputs;\n    }\n  }\n\n  predict(inputs) {\n    if (inputs.length === this.height * this.width) {\n      release(this.weights);\n      this.weights = kernelInput(inputs, [this.width, this.height]);\n    } else if (\n      inputs.length === this.height &&\n      inputs[0].length === this.width\n    ) {\n      this.weights = inputs;\n    } else {\n      throw new Error('Inputs are not of sized correctly');\n    }\n  }\n\n  predict1D(inputs) {\n    if (this.weights) release(this.weights);\n    this.weights = this.reshapeInput(inputs);\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    release(this.deltas);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  toJSON() {\n    const jsonLayer = {};\n    const { defaults, name } = this.constructor;\n    const keys = Object.keys(defaults);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n\n      if (key === 'deltas' || key === 'weights') continue;\n      jsonLayer[key] = this[key];\n    }\n    jsonLayer.type = name;\n    return jsonLayer;\n  }\n}\n\nfunction input(settings) {\n  return new Input(settings);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n","const { Activation } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/leaky-relu');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare3D(weights, deltas) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass LeakyRelu extends Activation {\n  setupKernels() {\n    const { width, height, depth } = this.inputLayer;\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    const { deltas } = this;\n    this.deltas = this.compareKernel(this.weights, deltas);\n    release(deltas);\n  }\n}\n\nfunction leakyRelu(inputLayer, settings) {\n  return new LeakyRelu(inputLayer, settings);\n}\n\nmodule.exports = { LeakyRelu, leakyRelu, predict2D, predict3D, compare2D, compare3D };\n","const { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { multiplyElement } = require('./multiply-element');\nconst { random } = require('./random');\nconst { sigmoid } = require('./sigmoid');\nconst { tanh } = require('./tanh');\nconst { zeros } = require('./zeros');\n\nfunction lstm(settings, recurrentInput, input) {\n  const { height } = settings;\n  const inputGateWeights = random({ height, width: input.height });\n  const inputGatePeepholes = random({ width: height, height });\n  const inputGateBias = zeros({ height });\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(inputGateWeights, input),\n        multiply(inputGatePeepholes, recurrentInput)\n      ),\n      inputGateBias\n    )\n  );\n\n  const forgetGateWeights = random({ height, width: input.height });\n  const forgetGatePeepholes = random({ width: height, height });\n  const forgetGateBias = zeros({ height });\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(forgetGateWeights, input),\n        multiply(forgetGatePeepholes, recurrentInput)\n      ),\n      forgetGateBias\n    )\n  );\n\n  const outputGateWeights = random({ height, width: input.height });\n  const outputGatePeepholes = random({ width: height, height });\n  const outputGateBias = zeros({ height });\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(outputGateWeights, input),\n        multiply(outputGatePeepholes, recurrentInput)\n      ),\n      outputGateBias\n    )\n  );\n\n  const memoryWeights = random({ height, width: input.height });\n  const memoryPeepholes = random({ width: height, height });\n  const memoryBias = zeros({ height });\n  const memory = tanh(\n    add(\n      add(\n        multiply(memoryWeights, input),\n        multiply(memoryPeepholes, recurrentInput)\n      ),\n      memoryBias\n    )\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, input); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, memory); // what do we write to cell\n  const cell = add(retainCell, writeCell); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell));\n}\n\nmodule.exports = {\n  lstm\n};\n","const { makeKernel, release, clone } = require('../utilities/kernel');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\nconst { Filter } = require('./types');\n\nfunction compare1D(weights, targetValues) {\n  // return targetValues[this.thread.x] - weights[this.thread.y][this.thread.x];\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x];\n}\n\nfunction compare2D(weights, targetValues) {\n  // return targetValues[this.thread.y][this.thread.x] - weights[this.thread.y][this.thread.x];\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.y][this.thread.x];\n}\n\nclass Target extends Filter {\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.width = inputLayer.width;\n    this.height = inputLayer.height;\n    this.depth = inputLayer.depth;\n    this.validate();\n    if (this.depth > 0) {\n      throw new Error('Target layer not implemented for depth');\n    } else if (this.height > 1) {\n      this.weights = zeros2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n      this.errors = zeros2D(this.width, this.height);\n    } else {\n      this.weights = zeros(this.width);\n      this.deltas = zeros(this.width);\n      this.errors = zeros(this.width);\n    }\n  }\n\n  setupKernels() {\n    const compareFn = this.width === 1 ? compare1D : compare2D;\n    this.compareKernel = makeKernel(compareFn, {\n      output: [this.width, this.height]\n    });\n  }\n\n  predict() {\n    // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights);\n  }\n\n  compare(targetValues) {\n    // this is where weights attach to deltas\n    // deltas will be zero on learn, so save it in error for comparing to mse later\n    release(this.deltas);\n    release(this.errors);\n    release(this.inputLayer.deltas);\n    this.deltas = this.compareKernel(this.weights, targetValues);\n    this.inputLayer.deltas = clone(this.deltas);\n    this.errors = clone(this.deltas);\n  }\n}\n\nfunction target(settings, inputLayer) {\n  return new Target(settings, inputLayer);\n}\n\nmodule.exports = {\n  Target,\n  target\n};\n","const { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { random } = require('./random');\nconst { target } = require('./target');\nconst { zeros } = require('./zeros');\n\nfunction output(settings, inputLayer) {\n  const { height } = settings;\n  const outputGate = random({ height, width: inputLayer.height, name: 'outputGate' });\n  const output = zeros({ height, name: 'output' });\n  const outputGateConnector = multiply(outputGate, inputLayer, { name: 'outputGateConnected' });\n  return target({ name: 'target', ...settings }, add(outputGateConnector, output));\n}\n\nmodule.exports = {\n  output\n};\n","const { Filter } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst { setPadding, setStride } = require('../utilities/layer-setup');\nconst zeros3D = require('../utilities/zeros-3d');\nconst randos3D = require('../utilities/randos-3d');\n\nfunction setSwitchY(value) {\n  return value;\n}\n\nfunction setSwitchX(value) {\n  return value;\n}\n\nfunction predict(inputs) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.inputWidth -\n      this.constants.paddingX\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.inputHeight -\n      this.constants.paddingY\n  );\n  let largestValue = -Infinity;\n  let largestX = -1;\n  let largestY = -1;\n\n  // convolve centered at this particular location\n  for (let filterY = 0; filterY < this.constants.filterHeight; filterY++) {\n    // coordinates in the original input array coordinates\n    const inputY = filterY + y;\n    for (let filterX = 0; filterX < this.constants.filterWidth; filterX++) {\n      const inputX = filterX + x;\n      if (\n        inputY >= 0 &&\n        inputY < this.constants.inputHeight &&\n        inputX >= 0 &&\n        inputX < this.constants.inputWidth\n      ) {\n        const input = inputs[this.thread.z][inputY][inputX];\n        if (input > largestValue) {\n          largestValue = input;\n          largestY = inputY;\n          largestX = inputX;\n        }\n      }\n    }\n  }\n  setSwitchY(largestY);\n  setSwitchX(largestX);\n  return largestValue;\n}\n\nfunction compare(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[deltasY][deltasX];\n      const switchYValue = switchY[deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction compare3D(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[this.thread.z][deltasY][deltasX];\n      const switchYValue = switchY[this.thread.z][deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[this.thread.z][deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nclass Pool extends Filter {\n  static get defaults() {\n    return {\n      padding: 0,\n      bias: 0,\n      filterWidth: 0,\n      filterHeight: 0,\n      filterCount: 0,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n\n    this.stride = null;\n    this.strideX = null;\n    this.strideY = null;\n    setStride(this, settings);\n\n    this.padding = null;\n    this.paddingX = null;\n    this.paddingY = null;\n    setPadding(this, settings);\n\n    this.filterCount = settings.filterCount;\n    this.filterWidth = settings.filterWidth;\n    this.filterHeight = settings.filterHeight;\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    );\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n    // TODO: handle 1 depth?\n    this.depth = this.filterCount;\n\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount);\n\n    this.learnFilters = null;\n    this.learnInputs = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height, this.depth],\n      map: {\n        switchX: setSwitchX,\n        switchY: setSwitchY,\n      },\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterHeight: this.filterHeight,\n        filterWidth: this.filterWidth,\n      },\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.inputLayer.width, this.inputLayer.height, this.inputLayer.depth],\n      constants: {\n        outputWidth: this.width,\n        outputHeight: this.height,\n        outputDepth: this.depth,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n      },\n    });\n  }\n\n  predict() {\n    const { switchX, switchY, weights: prevWeights } = this;\n    release(this.switchX);\n    release(this.switchY);\n    const weights = this.predictKernel(this.inputLayer.weights);\n    this.switchX = weights.switchX;\n    this.switchY = weights.switchY;\n    this.weights = weights.result;\n    release(prevWeights);\n    return this.weights;\n  }\n\n  compare() {\n    debugger;\n    const depth = this.inputLayer.deltas.length;\n    const height = this.inputLayer.deltas[0].length;\n    const width = this.inputLayer.deltas[0][0].length;\n    const type = typeof this.inputLayer.deltas[0][0][0];\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = this.compareKernel(\n      this.deltas,\n      this.switchX,\n      this.switchY\n    );\n    release(inputLayerDeltas);\n    debugger;\n    if (depth !== this.inputLayer.deltas.length) debugger;\n    if (height !== this.inputLayer.deltas[0].length) debugger;\n    if (width !== this.inputLayer.deltas[0][0].length) debugger;\n    if (type !== typeof this.inputLayer.deltas[0][0][0]) debugger;\n  }\n}\n\nfunction pool(settings, inputLayer) {\n  return new Pool(settings, inputLayer);\n}\n\nmodule.exports = { Pool, pool, predict, compare, compare3D };\n","const { Activation } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/relu');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare3D(weights, deltas) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass Relu extends Activation {\n  setupKernels() {\n    const { width, height, depth } = this.inputLayer;\n    if (depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    const { weights } = this;\n    this.weights = this.predictKernel(this.inputLayer.weights);\n    release(weights);\n  }\n\n  compare() {\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n    release(inputLayerDeltas);\n  }\n}\n\nfunction relu(inputLayer, settings) {\n  return new Relu(inputLayer, settings);\n}\n\nmodule.exports = { Relu, relu, predict2D, compare2D, predict3D, compare3D };\n","const { relu } = require('./relu');\nconst { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { random } = require('./random');\nconst { zeros } = require('./zeros');\n\nfunction recurrent(settings, input, recurrentInput) {\n  const { height } = settings;\n\n  recurrentInput.setDimensions(1, height);\n\n  // wxh\n  const weight = random({ name: 'weight', height, width: input.height });\n  // whh\n  const transition = random({ name: 'transition', height, width: height });\n  // bhh\n  const bias = zeros({ name: 'bias', height });\n\n  return relu(\n    add(\n      add(multiply(weight, input), multiply(transition, recurrentInput)),\n      bias\n    )\n  );\n}\n\nmodule.exports = {\n  recurrent\n};\n","const { Base } = require('./base');\n\nclass Regression extends Base {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n  }\n\n  predict() {\n    this.weights = this.inputs;\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(inputs, targets) {\n  return inputs[this.thread.x] - targets[this.thread.x];\n}\n\n// TODO: handle `loss += 0.5*dy*dy;` total and sum in learn\nfunction regression(settings, inputLayer) {\n  return new Regression(settings, inputLayer);\n}\n\nmodule.exports = {\n  Regression,\n  regression,\n  learn\n};\n","const { makeKernel, release, clone } = require('../utilities/kernel');\nconst { Filter } = require('./types');\nconst randos = require('../utilities/randos');\nconst randos2D = require('../utilities/randos-2d');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nfunction getMaxValue(inputs) {\n  let maxInput = -Infinity;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    const input = inputs[x];\n    if (input > maxInput) {\n      maxInput = input;\n    }\n  }\n  return maxInput;\n}\n\nfunction getMaxValue2D(inputs) {\n  let maxInput = -Infinity;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      const input = inputs[y][x];\n      if (input > maxInput) {\n        maxInput = input;\n      }\n    }\n  }\n  return maxInput;\n}\n\nfunction getMaxValue3D(inputs) {\n  let maxInput = -Infinity;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        const input = inputs[z][y][x];\n        if (input > maxInput) {\n          maxInput = input;\n        }\n      }\n    }\n  }\n  return maxInput;\n}\n\nfunction getSum(inputs) {\n  let sum = 0;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    sum += inputs[x];\n  }\n  return sum;\n}\n\nfunction getSum2D(inputs) {\n  let sum = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      sum += inputs[y][x];\n    }\n  }\n  return sum;\n}\n\nfunction getSum3D(inputs) {\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        sum += inputs[z][y][x];\n      }\n    }\n  }\n  return sum;\n}\n\nfunction getExponentials(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.x] - maxInput[0]\n  );\n}\n\nfunction getExponentials2D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nfunction getExponentials3D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nfunction predict(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.x] / exponentialsSum[0]\n  );\n}\n\nfunction predict2D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nfunction predict3D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.z][this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nfunction compare(target, exponentials) {\n  let indicator = 0;\n  if (this.thread.x === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.x]);\n}\n\nfunction compare2D(target, exponentials) {\n  let indicator = 0;\n  const index = this.thread.x + (this.thread.y * this.output.x);\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.y][this.thread.x]);\n}\n\nfunction compare3D(target, exponentials) {\n  let indicator = 0;\n  const index = this.thread.x\n    + (this.thread.y * this.output.x)\n    + (this.thread.z * this.output.x * this.output.y);\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction loss(exponentials) {\n  return -Math.log();\n}\n\n// TODO: handle: `return -Math.log(this.es[y]);` in learn\n\nclass SoftMax extends Filter {\n  constructor(inputLayer) {\n    super();\n    this.width = inputLayer.width;\n    this.height = inputLayer.height;\n    this.depth = inputLayer.depth;\n    this.getExponentialsKernel = null;\n    this.getMaxValueKernel = null;\n    this.getSumKernel = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    } else {\n      this.weights = randos(this.width);\n      this.deltas = zeros(this.width);\n    }\n  }\n\n  setupKernels() {\n    const { width, height, depth } = this;\n    if (depth > 0) {\n      this.getExponentialsKernel = makeKernel(getExponentials3D, {\n        output: [width, height, depth],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n      });\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n      });\n    } else {\n      this.getExponentialsKernel = makeKernel(getExponentials, {\n        output: [width, height],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n      });\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n      });\n    }\n  }\n\n  predict() {\n    const maxValue = this.getMaxValueKernel(this.inputLayer.weights);\n    const exponentials = this.getExponentialsKernel(\n      this.inputLayer.weights,\n      maxValue\n    );\n    const exponentialsSum = this.getSumKernel(exponentials);\n    this.weights = this.predictKernel(exponentials, exponentialsSum);\n  }\n\n  compare(targetValues) {\n    const { deltas, errors } = this;\n    this.errors = this.compareKernel(targetValues[0], deltas);\n    this.deltas = clone(this.errors);\n    release(deltas);\n    release(errors);\n\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = clone(this.deltas);\n    release(inputLayerDeltas);\n  }\n}\n\nfunction softMax(settings, inputLayer) {\n  return new SoftMax(settings, inputLayer);\n}\n\nmodule.exports = {\n  SoftMax, softMax,\n  getMaxValue, getMaxValue2D, getMaxValue3D,\n  getSum, getSum2D, getSum3D,\n  getExponentials, getExponentials2D, getExponentials3D,\n  predict, predict2D, predict3D,\n  compare, compare2D, compare3D,\n  loss\n};\n","const { Base } = require('./base');\n\nclass SVM extends Base {\n  predict() {\n    this.weights = this.inputs;\n    this.validate();\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(target) {\n  // if(y === i) { continue; }\n  // var ydiff = -yscore + x.w[i] + margin;\n  // if(ydiff > 0) {\n  //   // violating dimension, apply loss\n  //   x.dw[i] += 1;\n  //   x.dw[y] -= 1;\n  //   loss += ydiff;\n  // }\n}\n\nfunction svm(settings, inputLayer) {\n  return new SVM(settings, inputLayer);\n}\n\nmodule.exports = {\n  SVM,\n  svm\n};\n","const { Modifier } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\n\nfunction predict(array) {\n  return array[this.thread.x][this.thread.y];\n}\n\nconst compare = predict;\n\nclass Transpose extends Modifier {\n  constructor(inputLayer) {\n    super();\n    this.inputLayer = inputLayer;\n    this.width = this.inputLayer.height;\n    this.height = this.inputLayer.width;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.height, this.width],\n    });\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    const { weights } = this;\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    release(this.inputLayer.deltas);\n    // TODO: needs switched to this.compareKernel?\n    this.inputLayer.deltas = this.predictKernel(this.deltas);\n  }\n}\n\nfunction transpose(inputLayer) {\n  return new Transpose(inputLayer);\n}\n\nmodule.exports = {\n  Transpose,\n  transpose,\n};\n","const { Add, add } = require('./add');\nconst { arthurFeedForward } = require('./arthur-feed-forward');\nconst { Base } = require('./base');\nconst { Convolution, convolution } = require('./convolution');\nconst { Dropout, dropout } = require('./dropout');\nconst { feedForward } = require('./feed-forward');\nconst { FullyConnected, fullyConnected } = require('./fully-connected');\nconst { gru } = require('./gru');\nconst { Input, input } = require('./input');\nconst { LeakyRelu, leakyRelu } = require('./leaky-relu');\nconst { lstm } = require('./lstm');\nconst { Multiply, multiply } = require('./multiply');\nconst { MultiplyElement, multiplyElement } = require('./multiply-element');\nconst { Negative, negative } = require('./negative');\nconst { Ones, ones } = require('./ones');\nconst { output } = require('./output');\nconst { Pool, pool } = require('./pool');\nconst { Random, random } = require('./random');\nconst { recurrent } = require('./recurrent');\nconst { Regression, regression } = require('./regression');\nconst { Relu, relu } = require('./relu');\nconst { Sigmoid, sigmoid } = require('./sigmoid');\nconst { SoftMax, softMax } = require('./soft-max');\nconst { SVM, svm } = require('./svm');\nconst { Tanh, tanh } = require('./tanh');\nconst { Target, target } = require('./target');\nconst { Transpose, transpose } = require('./transpose');\nconst { Zeros, zeros } = require('./zeros');\n\n/**\n * @description Layer API, to make it easier to use layers for the world\n */\nmodule.exports = {\n  Add,\n  add,\n  arthurFeedForward,\n  Base,\n  Convolution,\n  convolution,\n  Dropout,\n  dropout,\n  feedForward,\n  FullyConnected,\n  fullyConnected,\n  gru,\n  Input,\n  input,\n  LeakyRelu,\n  leakyRelu,\n  lstm,\n  Multiply,\n  multiply,\n  MultiplyElement,\n  multiplyElement,\n  Negative,\n  negative,\n  Ones,\n  ones,\n  output,\n  Pool,\n  pool,\n  Random,\n  random,\n  recurrent,\n  Regression,\n  regression,\n  Relu,\n  relu,\n  Sigmoid,\n  sigmoid,\n  SoftMax,\n  softMax,\n  SVM,\n  svm,\n  Tanh,\n  tanh,\n  Target,\n  target,\n  Transpose,\n  transpose,\n  Zeros,\n  zeros,\n};\n","/**\n *\n * @param {*} input\n * @param {brain.NeuralNetwork} net\n * @returns {*}\n */\nmodule.exports = function likely(input, net) {\n  const output = net.run(input);\n  let maxProp = null;\n  let maxValue = -1;\n\n  Object.keys(output).forEach(key => {\n    const value = output[key];\n    if (value > maxValue) {\n      maxProp = key;\n      maxValue = value;\n    }\n  });\n\n  return maxProp;\n};\n","/* Functions for turning sparse hashes into arrays and vice versa */\nclass lookup {\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} hashes\n   * @returns {Object}\n   */\n  static toTable(hashes) {\n    const hash = hashes.reduce((memo, hash) => {\n      return Object.assign(memo, hash);\n    }, {});\n\n    return lookup.toHash(hash);\n  }\n\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} objects2D\n   * @returns {Object}\n   */\n  static toTable2D(objects2D) {\n    const table = {};\n    let valueIndex = 0;\n    for (let i = 0; i < objects2D.length; i++) {\n      const objects = objects2D[i];\n      for (let j = 0; j < objects.length; j++) {\n        const object = objects[j];\n        for (const p in object) {\n          if (object.hasOwnProperty(p) && !table.hasOwnProperty(p)) {\n            table[p] = valueIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  static toInputTable(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      for (let p in data[dataIndex].input) {\n        if (!table.hasOwnProperty(p)) {\n          table[p] = tableIndex++;\n        }\n      }\n    }\n    return table;\n  }\n\n  static toInputTable2D(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const input = data[dataIndex].input;\n      for (let i = 0; i < input.length; i++) {\n        const object = input[i];\n        for (let p in object) {\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  static toOutputTable(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      for (let p in data[dataIndex].output) {\n        if (!table.hasOwnProperty(p)) {\n          table[p] = tableIndex++;\n        }\n      }\n    }\n    return table;\n  }\n\n  static toOutputTable2D(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const output = data[dataIndex].output;\n      for (let i = 0; i < output.length; i++) {\n        const object = output[i];\n        for (let p in object) {\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  /**\n   * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\n   * @param {Object} hash\n   * @returns {Object}\n   */\n  static toHash(hash) {\n    let lookup = {};\n    let index = 0;\n    for (let i in hash) {\n      lookup[i] = index++;\n    }\n    return lookup;\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\n   * @param {*} lookup\n   * @param {*} object\n   * @param {*} arrayLength\n   * @returns {Float32Array}\n   */\n  static toArray(lookup, object, arrayLength) {\n    const result = new Float32Array(arrayLength);\n    for (let p in lookup) {\n      result[lookup[p]] = object.hasOwnProperty(p) ? object[p] : 0;\n    }\n    return result;\n  }\n\n  static toArrayShort(lookup, object) {\n    const result = [];\n    for (let p in lookup) {\n      if (!object.hasOwnProperty(p)) break;\n      result[lookup[p]] = object[p];\n    }\n    return Float32Array.from(result);\n  }\n\n  static toArrays(lookup, objects, arrayLength) {\n    const result = [];\n    for (let i = 0; i < objects.length; i++) {\n      result.push(this.toArray(lookup, objects[i], arrayLength));\n    }\n    return result;\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\n   * @param {Object} lookup\n   * @param {Array} array\n   * @returns {Object}\n   */\n  static toObject(lookup, array) {\n    const object = {};\n    for (let p in lookup) {\n      object[p] = array[lookup[p]];\n    }\n    return object;\n  }\n\n  static toObjectPartial(lookup, array, offset = 0, limit = 0) {\n    const object = {};\n    let i = 0;\n    for (let p in lookup) {\n      if (offset > 0) {\n        if (i++ < offset) continue;\n      }\n      if (limit > 0) {\n        if (i++ >= limit) continue;\n      }\n      object[p] = array[lookup[p] - offset];\n    }\n    return object;\n  }\n\n  /**\n   *\n   * @param {Array} array\n   * @returns {*}\n   */\n  static lookupFromArray(array) {\n    let lookup = {};\n    let z = 0;\n    let i = array.length;\n    while (i-- > 0) {\n      lookup[array[i]] = z++;\n    }\n    return lookup;\n  }\n\n  static dataShape(data) {\n    const shape = [];\n\n    if (data.input) {\n      shape.push('datum');\n      data = data.input;\n    } else if (Array.isArray(data)) {\n      if (data[0].input) {\n        shape.push('array', 'datum');\n        data = data[0].input;\n      } else {\n        shape.push('array');\n        data = data[0];\n      }\n    }\n\n    let p;\n    while (data) {\n      for (p in data) { break; }\n      if (!data.hasOwnProperty(p)) break;\n      if (Array.isArray(data) || data.buffer instanceof ArrayBuffer) {\n        shape.push('array');\n        data = data[p];\n      } else if (typeof data === 'object') {\n        shape.push('object');\n        data = data[p];\n      } else {\n        throw new Error('unhandled signature');\n      }\n    }\n    shape.push(typeof data);\n    return shape;\n  }\n\n  static addKeys(value, table) {\n    if (Array.isArray(value)) return;\n    table = table || {};\n    let i = Object.keys(table).length;\n    for (const p in value) {\n      if (!value.hasOwnProperty(p)) continue;\n      if (table.hasOwnProperty(p)) continue;\n      table[p] = i++;\n    }\n    return table;\n  }\n}\n\nmodule.exports = lookup;\n","// TODO: implement and test\nclass Adam {}\n\nfunction adam() {\n  // gradient = grad_fun(theta)\n  //\n  //           # Update moment estimates\n  // moment1 = beta1 * moment1 + (1 - beta1) * gradient\n  // moment2 = beta2 * moment2 + (1 - beta2) * np.square(gradient)\n  //\n  //           # Yield adapted gradient\n  // theta = ( theta - alpha * (1 - beta2**t)**0.5 / (1 - beta1**t) *\n  //   moment1 / (epsilon + np.sqrt(moment2)) )\n  // yield theta\n  // t += 1\n  // adam update\n  // gsumi[j] = gsumi[j] * this.beta1 + (1- this.beta1) * gij; // update biased first moment estimate\n  // xsumi[j] = xsumi[j] * this.beta2 + (1-this.beta2) * gij * gij; // update biased second moment estimate\n  // var biasCorr1 = gsumi[j] * (1 - Math.pow(this.beta1, this.k)); // correct bias first moment estimate\n  // var biasCorr2 = xsumi[j] * (1 - Math.pow(this.beta2, this.k)); // correct bias second moment estimate\n  // var dx =  - this.learning_rate * biasCorr1 / (Math.sqrt(biasCorr2) + this.eps);\n  // p[j] += dx;\n}\n\nmodule.exports = {\n  Adam, adam\n};\n","const { makeKernel, release } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\n\nconst { Base } = require('./base');\n\nfunction getMomentum(delta, decay, previousMomentum) {\n  return previousMomentum * decay + (1 - decay) * delta * delta;\n}\n\nfunction clipByValue(value, max, min) {\n  if (value > max) {\n    return max;\n  }\n  if (value < min) {\n    return min;\n  }\n  return value;\n}\n\n/**\n * @description Momentum Root Mean Square Propagation Function\n * @returns {number}\n */\nfunction update(\n  weights,\n  deltas,\n  previousMomenta\n) {\n  const delta = deltas[this.thread.y][this.thread.x];\n  const clippedDelta = clipByValue(\n    delta,\n    this.constants.clipValue,\n    -this.constants.clipValue\n  );\n  const weight = weights[this.thread.y][this.thread.x];\n  const previousMomentum = previousMomenta[this.thread.y][this.thread.x];\n  const momentum = getMomentum(\n    delta,\n    this.constants.decayRate,\n    previousMomentum\n  );\n  return (\n    weight +\n    (-this.constants.learningRate * clippedDelta) /\n      Math.sqrt(momentum + this.constants.smoothEps) -\n    this.constants.regularizationStrength * weight\n  );\n}\n\nfunction isClippedByValue(value, max, min) {\n  if (value > max) {\n    return 1;\n  }\n  if (value < min) {\n    return 1;\n  }\n  return 0;\n}\n\nclass MomentumRootMeanSquaredPropagation extends Base {\n  static get defaults() {\n    return {\n      decayRate: 0.999,\n      regularizationStrength: 0.000001,\n      learningRate: 0.01,\n      smoothEps: 1e-8,\n      clipValue: 5\n    };\n  }\n\n  constructor(layerTemplate, settings = {}) {\n    super(layerTemplate, settings);\n    this.momenta = zeros2D(layerTemplate.width, layerTemplate.height);\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const { momenta, result } = this.kernel(layer.weights, layer.deltas, this.momenta);\n    release(this.momenta);\n    this.momenta = momenta;\n    return result;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        clipValue: this.clipValue,\n        decayRate: this.decayRate,\n        learningRate: this.learningRate,\n        regularizationStrength: this.regularizationStrength,\n        smoothEps: this.smoothEps,\n      },\n      functions: [clipByValue],\n      map: {\n        momenta: getMomentum,\n      },\n    });\n  }\n}\n\nfunction momentumRootMeanSquaredPropagation(layer, settings) {\n  return new MomentumRootMeanSquaredPropagation(layer, settings);\n}\n\n/**\n * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\n * @type {MomentumRootMeanSquaredPropagation}\n */\nconst MRmsProp = MomentumRootMeanSquaredPropagation;\nconst mRmsProp = momentumRootMeanSquaredPropagation;\n\nmodule.exports = {\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp,\n  getMomentum, clipByValue, isClippedByValue\n};\n","const { Adam, adam } = require('./adam');\nconst { ArthurDeviationBiases, arthurDeviationBiases } = require('./arthur-deviation-biases');\nconst { ArthurDeviationWeights, arthurDeviationWeights } = require('./arthur-deviation-weights');\nconst {\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp\n} = require('./momentum-root-mean-squared-propagation');\n\nmodule.exports = {\n  Adam, adam,\n  ArthurDeviationBiases, arthurDeviationBiases,\n  ArthurDeviationWeights, arthurDeviationWeights,\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp,\n};\n","module.exports = function mse2d(errors) {\n  // mean squared error 2d\n  let sum = 0;\n  const length = errors.length * errors[0].length;\n  for (let y = 0; y < errors.length; y++) {\n    for (let x = 0; x < errors[y].length; x++) {\n      sum += errors[y][x] ** 2;\n    }\n  }\n  return sum / length;\n};\n","const layer = require('../layer');\n\nmodule.exports = function layerFromJSON(jsonLayer) {\n  if (!layer.hasOwnProperty(jsonLayer.type)) return null;\n  const Layer = layer[jsonLayer.type];\n\n  // eslint-disable-next-line\n  const realLayer = Reflect.construct(Layer, arguments)\n\n  Object.keys(jsonLayer).forEach(p => {\n    if (p !== 'type') {\n      realLayer[p] = jsonLayer[p];\n    }\n  });\n\n  return realLayer;\n}\n","module.exports = function traverseLayersFrom(layer, cb) {\n  if (layer.hasOwnProperty('inputLayer')) {\n    traverseLayersFrom(layer.inputLayer, cb);\n  } else {\n    if (layer.hasOwnProperty('inputLayer1')) {\n      traverseLayersFrom(layer.inputLayer1, cb);\n    }\n    if (layer.hasOwnProperty('inputLayer2')) {\n      traverseLayersFrom(layer.inputLayer2, cb);\n    }\n  }\n  cb(layer);\n}\n","const traverseLayersFrom = require('./traverse-layers-from');\n\nmodule.exports = function flattenLayers(layers) {\n  const result = layers.slice(0);\n  for (let i = 0; i < result.length; i++) {\n    let offset = 0;\n    traverseLayersFrom(result[i], layer => {\n      if (result.indexOf(layer) === -1) {\n        result.splice(i + offset, 0, layer);\n        offset++;\n      }\n    });\n  }\n  return result;\n}\n","const lookup = require('./lookup');\nconst mse2d = require('./utilities/mse-2d');\nconst layerFromJSON = require('./utilities/layer-from-json');\nconst praxis = require('./praxis');\nconst flattenLayers = require('./utilities/flatten-layers');\nconst { makeKernel } = require('./utilities/kernel');\n\nclass FeedForward {\n  static get trainDefaults() {\n    return {\n      iterations: 20000,\n      errorThresh: 0.005,\n      log: false,\n      logPeriod: 10,\n      learningRate: 0.3,\n      callback: null,\n      callbackPeriod: 10,\n      errorCheckInterval: 100,\n      reinforce: false,\n    };\n  }\n\n  static get defaults() {\n    return {\n      learningRate: 0.3,\n      binaryThresh: 0.5,\n      hiddenLayers: null,\n      inputLayer: null,\n      outputLayer: null,\n      praxisOpts: null,\n      praxis: (layer, settings) => praxis.momentumRootMeanSquaredPropagation(layer, layer.praxisOpts || settings),\n    };\n  }\n\n  /**\n   *\n   * @param options\n   * @private\n   */\n  static _validateTrainingOptions(options) {\n    const validations = {\n      iterations: val => typeof val === 'number' && val > 0,\n      errorThresh: val => typeof val === 'number' && val > 0 && val < 1,\n      log: val => typeof val === 'function' || typeof val === 'boolean',\n      logPeriod: val => typeof val === 'number' && val > 0,\n      learningRate: val => typeof val === 'number' && val > 0 && val < 1,\n      callback: val => typeof val === 'function' || val === null,\n      callbackPeriod: val => typeof val === 'number' && val > 0,\n      timeout: val => typeof val === 'number' && val > 0,\n    };\n    Object.keys(FeedForward.trainDefaults).forEach(key => {\n      if (validations.hasOwnProperty(key) && !validations[key](options[key])) {\n        throw new Error(\n          `[${key}, ${\n            options[key]\n          }] is out of normal training range, your network will probably not train.`\n        );\n      }\n    });\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  _setLogMethod(log) {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      // eslint-disable-next-line\n      this.trainOpts.log = console.log\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param opts\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number)\n   */\n  _updateTrainingOptions(opts) {\n    Object.keys(this.constructor.trainDefaults).forEach(opt => {\n      this.trainOpts[opt] = opts.hasOwnProperty(opt)\n        ? opts[opt]\n        : this.trainOpts[opt];\n    });\n    this.constructor._validateTrainingOptions(this.trainOpts);\n    this._setLogMethod(opts.log || this.trainOpts.log);\n  }\n\n  static get structure() {\n    return {\n      layers: null,\n      _inputLayer: null,\n      _outputLayer: null,\n    };\n  }\n\n  /**\n   *\n   * @param {object} options\n   * @constructor\n   */\n  constructor(options = {}) {\n    this.layers = null;\n    this.inputLayer = null;\n    this.hiddenLayers = null;\n    this.outputLayer = null;\n    this.praxisOpts = null;\n    this.praxis = null;\n    Object.assign(this, this.constructor.defaults, options);\n    this.trainOpts = {};\n    this._updateTrainingOptions(\n      Object.assign({}, this.constructor.trainDefaults, options)\n    );\n    Object.assign(this, this.constructor.structure);\n    this._inputLayer = null;\n    this._hiddenLayers = null;\n    this._outputLayer = null;\n  }\n\n  _connectLayers() {\n    const layers = [];\n    this._inputLayer = this.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(this._inputLayer);\n    this._outputLayer = this.outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      hiddenLayers.length\n    );\n    layers.push(this._inputLayer);\n    layers.push(...hiddenLayers);\n    layers.push(this._outputLayer);\n    this.layers = flattenLayers(layers);\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    this._hiddenLayers = [];\n    const hiddenLayers = [];\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, i);\n      hiddenLayers.push(hiddenLayer);\n      this._hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n    }\n    return hiddenLayers;\n  }\n\n  initialize() {\n    this._connectLayers();\n    this.initializeLayers(this.layers);\n  }\n\n  initializeLayers(layers) {\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      // TODO: optimize for when training or just running\n      layer.setupKernels(true);\n      if (layer.hasOwnProperty('praxis') && layer.praxis === null) {\n        layer.praxis = this.praxis(layer, layer.praxisOpts || this.praxisOpts);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input);\n    }\n\n    let output = this.runInput(input);\n\n    if (output.toArray) {\n      output = output.toArray();\n    }\n\n    if (this.outputLookup) {\n      output = lookup.toHash(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  runInput(input) {\n    this.layers[0].predict(input);\n    for (let i = 1; i < this.layers.length; i++) {\n      this.layers[i].predict();\n    }\n    return this.layers[this.layers.length - 1].weights;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    let status;\n    let endTime;\n    ({ data, status, endTime } = this._prepTraining(data, options));\n\n    while (this._trainingTick(data, status, endTime));\n    return status;\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param {Number} endTime\n   */\n  _trainingTick(data, status, endTime) {\n    if (\n      status.iterations >= this.trainOpts.iterations ||\n      status.error <= this.trainOpts.errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (\n      this.trainOpts.log &&\n      status.iterations % this.trainOpts.logPeriod === 0\n    ) {\n      status.error = this._calculateTrainingError(data);\n      this.trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      );\n    } else if (status.iterations % this.trainOpts.errorCheckInterval === 0) {\n      status.error = this._calculateTrainingError(data);\n    } else {\n      this._trainPatterns(data);\n    }\n\n    if (\n      this.trainOpts.callback &&\n      status.iterations % this.trainOpts.callbackPeriod === 0\n    ) {\n      this.trainOpts.callback(Object.assign(status));\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  _prepTraining(data, options) {\n    this._updateTrainingOptions(options);\n    if (this.trainOpts.callback && this.trainOpts.callbackPeriod !== this.trainOpts.errorCheckInterval) {\n      console.warn(`options.callbackPeriod with value of ${ this.trainOpts.callbackPeriod } does not match options.errorCheckInterval with value of ${ this.trainOpts.errorCheckInterval }, if logging error, it will repeat.  These values may need to match`);\n    }\n    const formattedData = this._formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    if (!options.reinforce) {\n      this.initialize();\n    }\n\n    const transferredData = new Array(formattedData.length);\n    const transferInput = makeKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      immutable: true,\n      output: [formattedData[0].input.length]\n    });\n    const transferOutput = makeKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      immutable: true,\n      output: [formattedData[0].output.length]\n    });\n\n    for (let i = 0; i < formattedData.length; i++) {\n      const formattedDatum = formattedData[i];\n      transferredData[i] = {\n        input: transferInput(formattedDatum.input),\n        output: transferOutput(formattedDatum.output),\n      };\n    }\n\n    return {\n      data: transferredData,\n      status,\n      endTime,\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  _calculateTrainingError(data) {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this._trainPattern(data[i].input, data[i].output, true);\n    }\n    return sum / data.length;\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false);\n    }\n  }\n\n  /**\n   *\n   * @param input\n   * @param target\n   * @param {Boolean} logErrorRate\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return mse2d(\n        this._outputLayer.errors.toArray\n          ? this._outputLayer.errors.toArray()\n          : this._outputLayer.errors\n      );\n    }\n    return null;\n  }\n\n  _calculateDeltas(target) {\n    for (let i = this.layers.length - 1; i > -1; i--) {\n      this.layers[i].compare(target);\n    }\n  }\n\n  /**\n   *\n   */\n  adjustWeights() {\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].learn(\n        this.layers[i - 1],\n        this.layers[i + 1],\n        this.trainOpts.learningRate\n      );\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  _formatData(data) {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = [];\n      tmp.push(data);\n      data = tmp;\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    const inputDatumCheck = data[0].input;\n    if (!Array.isArray(inputDatumCheck) && !(inputDatumCheck instanceof Float32Array)) {\n      if (!this.inputLookup) {\n        this.inputLookup = lookup.buildLookup(data.map(value => value.input));\n      }\n      data = data.map(datumParam => {\n        const array = lookup.toArray(this.inputLookup, datumParam.input);\n        return Object.assign({}, datumParam, { input: array });\n      }, this);\n    }\n\n    const outputDatumCheck = data[0].output;\n    if (!Array.isArray(outputDatumCheck) && !(outputDatumCheck instanceof Float32Array)) {\n      if (!this.outputLookup) {\n        this.outputLookup = lookup.buildLookup(data.map(value => value.output));\n      }\n      data = data.map(datumParam => {\n        const array = lookup.toArray(this.outputLookup, datumParam.output);\n        return Object.assign({}, datumParam, { output: array });\n      }, this);\n    }\n    return data;\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test() {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`);\n  }\n\n  /**\n   *\n   */\n  toJSON() {\n    if (!this.layers) {\n      this.initialize();\n    }\n    const jsonLayers = [];\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      const jsonLayer = layer.toJSON();\n      if (layer.hasOwnProperty('inputLayer')) {\n        jsonLayer.inputLayerIndex = this.layers.indexOf(layer.inputLayer);\n      } else if (\n        layer.hasOwnProperty('inputLayer1') &&\n        layer.hasOwnProperty('inputLayer2')\n      ) {\n        jsonLayer.inputLayer1Index = this.layers.indexOf(layer.inputLayer1);\n        jsonLayer.inputLayer2Index = this.layers.indexOf(layer.inputLayer2);\n      }\n      jsonLayers.push(jsonLayer);\n    }\n\n    return {\n      type: this.constructor.name,\n      sizes: [this._inputLayer.height]\n        .concat(this._hiddenLayers.map(l => l.height))\n        .concat([this._outputLayer.height]),\n      layers: jsonLayers,\n    };\n  }\n\n  /**\n   *\n   * @param json\n   * @param [getLayer]\n   * @returns {FeedForward}\n   */\n  static fromJSON(json, getLayer) {\n    const jsonLayers = json.layers;\n    const layers = [];\n    const inputLayer = layerFromJSON(jsonLayers[0]) || getLayer(jsonLayers[0]);\n    layers.push(inputLayer);\n\n    for (let i = 1; i < jsonLayers.length; i++) {\n      const jsonLayer = jsonLayers[i];\n      if (jsonLayer.hasOwnProperty('inputLayerIndex')) {\n        const inputLayer1 = layers[jsonLayer.inputLayerIndex];\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer1) ||\n            getLayer(jsonLayer, inputLayer1)\n        );\n      } else {\n        if (!jsonLayer.hasOwnProperty('inputLayer1Index'))\n          throw new Error('inputLayer1Index not defined');\n        if (!jsonLayer.hasOwnProperty('inputLayer2Index'))\n          throw new Error('inputLayer2Index not defined');\n        const inputLayer1 = layers[jsonLayer.inputLayer1Index];\n        const inputLayer2 = layers[jsonLayer.inputLayer2Index];\n\n        if (inputLayer1 === undefined)\n          throw new Error(\n            `layer of index ${jsonLayer.inputLayer1Index} not found`\n          );\n        if (inputLayer2 === undefined)\n          throw new Error(\n            `layer of index ${jsonLayer.inputLayer2Index} not found`\n          );\n\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer) ||\n            getLayer(jsonLayer, inputLayer1, inputLayer2)\n        );\n      }\n    }\n\n    const net = new FeedForward(json);\n    net.layers = layers;\n    return net;\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  /**\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\n   * @param opts training options\n   * @returns {TrainStream|*}\n   */\n  createTrainStream() {\n    throw new Error(\n      `${this.constructor.name}-createTrainStream is not yet implemented`\n    );\n  }\n}\n\nmodule.exports = {\n  FeedForward\n};\n","//private variables\nlet thawing = false;\nlet thaws = [];\n\n/**\n * thaw an array of items\n * @param {Array} items\n * @param {Object} [options]\n * @constructor\n */\nexport default class Thaw {\n  /**\n   *\n   * @type {{each: null, done: null}}\n   */\n  static get defaultSettings() {\n    return {\n      each: null,\n      done: null\n    };\n  }\n\n  /**\n   * returns if Thaw.js is thawing\n   * @returns {boolean}\n   */\n  static get isThawing() {\n    return thawing;\n  }\n\n  /**\n   * Stops all Thaw instances\n   */\n  static stopAll() {\n    for(let i = 0;i< thaws.length; i++) {\n      thaws[i].stop();\n    }\n  }\n\n  constructor(items, options = {}) {\n    const { each, done } = {...this.constructor.defaultSettings, ...options};\n    this.items = items;\n    this.i = 0;\n    this.options = options;\n    const tick = this.tick = () => {\n      if (this.i < 0) return;\n\n      this.timeout = setTimeout(tick, 0);\n\n      if (thawing) return;\n      const item = items[this.i];\n      if (this.i >= items.length) {\n        if (done !== null) {\n          thawing = true;\n          done(item, this.i);\n          thawing = false;\n        }\n\n        this.i = -1;\n        clearTimeout(this.timeout);\n        return;\n      }\n      if (each !== null) {\n        thawing = true;\n        each(item, this.i);\n        thawing = false;\n      } else if (item !== undefined) {\n        item();\n      }\n      this.i++;\n    };\n\n    thaws.push(this);\n    if (!options.delay) {\n      tick();\n    }\n  }\n\n  /**\n   * readies thaw to continue\n   * @returns {boolean} if had to get ready\n   */\n  makeReady() {\n    if (this.i < 0) {\n      this.i = this.items.length;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n   * @param item\n   * @returns {Thaw}\n   */\n  add(item) {\n    const doTick = this.makeReady();\n\n    this.items.push(item);\n\n    if (doTick) {\n      this.tick();\n    }\n    return this;\n  }\n\n  /**\n   * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n   * @param item\n   * @returns {Thaw}\n   */\n  insert(item) {\n    const doTick = this.makeReady();\n\n    this.items.splice(this.i, 0, item);\n\n    if (doTick) {\n      this.tick();\n    }\n\n    return this;\n  }\n\n  /**\n   * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n   * @param {Array} items\n   * @returns {Thaw}\n   */\n  addArray(items) {\n    const doTick = this.makeReady();\n\n    this.items = this.items.concat(items);\n\n    if (doTick) {\n      this.tick();\n    }\n\n    return this;\n  }\n\n  /**\n   * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n   * @param {Array} items\n   * @returns {Thaw}\n   */\n  insertArray(items) {\n    const doTick = this.makeReady();\n    const left = this.items;\n    const middle = items;\n    const right = this.items.splice(this.i, (this.items.length - this.i) + 1);\n\n    this.items = left.concat(middle, right);\n\n    if (doTick) {\n      this.tick();\n    }\n    return this;\n  }\n\n  /**\n   * Stops this instance of Thaw\n   * @returns {Thaw}\n   */\n  stop() {\n    this.i = -1;\n    clearTimeout(this.timeout);\n    if (this.options.done) {\n      this.options.done();\n    }\n    return this;\n  }\n}\n\n/**\n * simple thaw\n * @param {Array} items\n * @param {Object} [options]\n * @returns Thaw\n */\nexport function thaw(items, options = {}) {\n  return new Thaw(items, options);\n}","import Thaw from './';\n\n/**\n *\n * @param {Object} [options]\n * @param {Number} [count]\n * @constructor\n */\nexport default class Block {\n  constructor(options, count) {\n    this.index = 0;\n    this.thaws = [];\n    this.count = count || 200;\n    this.options = options;\n  }\n\n  /**\n   * add an item to the end of items\n   * @param item\n   * @returns {Block}\n   */\n  add(item) {\n    const next = this._next();\n    next.add(item);\n\n    return this;\n  }\n\n  /**\n   * add an Array to the end of items\n   * @param items\n   * @returns {Block}\n   */\n  addArray(items) {\n    const next = this._next();\n    next.addArray(items);\n\n    return this;\n  }\n\n  /**\n   * insert an item into items @ current position\n   * @param item\n   * @returns {Block}\n   */\n  insert(item) {\n    const next = this._next();\n    next.insert(item);\n\n    return this;\n  }\n\n  /**\n   * insert and array into items @ current position\n   * @param items\n   * @returns {Block}\n   */\n  insertArray(items) {\n    const next = this._next();\n    next.insertArray(items);\n\n    return this;\n  }\n\n  /**\n   * Stops all thaws in this block\n   * @returns {Block}\n   */\n  stop() {\n    for (let i = 0;i < this.thaws.length;i++) {\n      this.thaws[i].stop();\n    }\n    return this;\n  }\n\n  /**\n   * Get next available in block\n   * @returns {*}\n   * @private\n   */\n  _next() {\n    let thaw = null;\n    const thaws = this.thaws;\n\n    if (thaws.length < this.count) {\n      thaws.push(thaw = new Thaw([], this.options));\n    } else {\n      thaw = thaws[this.index];\n    }\n    this.index++;\n    if (this.index >= this.count) {\n      this.index = 0;\n    }\n\n    return thaw;\n  }\n};","const activation = require('./activation');\nconst CrossValidate = require('./cross-validate');\nconst layer = require('./layer');\nconst layerTypes = require('./layer/types');\nconst likely = require('./likely');\nconst lookup = require('./lookup');\nconst praxis = require('./praxis');\nconst { FeedForward } = require('./feed-forward');\nconst NeuralNetwork = require('./neural-network');\nconst NeuralNetworkGPU = require('./neural-network-gpu');\nconst TrainStream = require('./train-stream');\nconst { Recurrent } = require('./recurrent');\nconst RNNTimeStep = require('./recurrent/rnn-time-step');\nconst LSTMTimeStep = require('./recurrent/lstm-time-step');\nconst GRUTimeStep = require('./recurrent/gru-time-step');\nconst RNN = require('./recurrent/rnn');\nconst LSTM = require('./recurrent/lstm');\nconst GRU = require('./recurrent/gru');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst ones = require('./utilities/ones');\nconst random = require('./utilities/random');\nconst randomWeight = require('./utilities/random-weight');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst DataFormatter = require('./utilities/data-formatter');\nconst zeros = require('./utilities/zeros');\nconst toSVG = require('./utilities/to-svg');\n\nconst brain = {\n  activation,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n    toSVG,\n  },\n};\n\nif (typeof window !== 'undefined') {\n  window.brain = brain //eslint-disable-line\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = brain;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('events').EventEmitter;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","const { Writable } = require('stream');\n\n/**\n *\n * @param opts\n * @returns {TrainStream}\n * @constructor\n */\nclass TrainStream extends Writable {\n  constructor(options) {\n    super({\n      objectMode: true\n    });\n\n    options = options || {};\n\n    // require the neuralNetwork\n    if (!options.neuralNetwork) {\n      throw new Error('no neural network specified');\n    }\n\n    const { neuralNetwork } = options;\n    this.neuralNetwork = neuralNetwork;\n    this.dataFormatDetermined = false;\n    this.i = 0; // keep track of internal iterations\n    this.size = 0;\n    this.count = 0;\n    this.sum = 0;\n    this.floodCallback = options.floodCallback;\n    this.doneTrainingCallback = options.doneTrainingCallback;\n\n    // inherit trainOpts settings from neuralNetwork\n    neuralNetwork.updateTrainingOptions(options);\n    const { trainOpts } = neuralNetwork;\n    this.iterations = trainOpts.iterations;\n    this.errorThresh = trainOpts.errorThresh;\n    this.log = trainOpts.log;\n    this.logPeriod = trainOpts.logPeriod;\n    this.callbackPeriod = trainOpts.callbackPeriod;\n    this.callback = trainOpts.callback;\n\n    this.on('finish', this.finishStreamIteration.bind(this));\n  }\n\n  endInputs() {\n    this.write(false);\n  }\n\n  /**\n   * _write expects data to be in the form of a datum. ie. {input: {a: 1 b: 0}, output: {z: 0}}\n   * @param chunk\n   * @param enc\n   * @param next\n   * @returns {*}\n   * @private\n   */\n  _write(chunk, enc, next) {\n    if (!chunk) {\n      // check for the end of one iteration of the stream\n      this.emit('finish');\n      return next();\n    }\n\n    if (!this.dataFormatDetermined) {\n      this.size++;\n      this.neuralNetwork.addFormat(chunk);\n      this.firstDatum = this.firstDatum || chunk;\n      return next();\n    }\n\n    this.count++;\n\n    const data = this.neuralNetwork.formatData(chunk);\n    this.sum += this.neuralNetwork.trainPattern(data[0], true);\n\n    // tell the Readable Stream that we are ready for more data\n    next();\n  }\n\n  /**\n   *\n   * @returns {*}\n   */\n  finishStreamIteration() {\n    if (this.dataFormatDetermined && this.size !== this.count) {\n      this.log('This iteration\\'s data length was different from the first.');\n    }\n\n    if (!this.dataFormatDetermined) {\n      const data = this.neuralNetwork.formatData(this.firstDatum);\n      this.neuralNetwork.verifyIsInitialized(data);\n      this.dataFormatDetermined = true;\n\n      if (typeof this.floodCallback === 'function') {\n        this.floodCallback();\n      }\n      return;\n    }\n\n    const error = this.sum / this.size;\n\n    if (this.log && (this.i % this.logPeriod === 0)) {\n      this.log(`iterations: ${ this.i}, training error: ${ error }`);\n    }\n    if (this.callback && (this.i % this.callbackPeriod === 0)) {\n      this.callback({\n        error: error,\n        iterations: this.i\n      });\n    }\n\n    this.sum = 0;\n    this.count = 0;\n    // update the iterations\n    this.i++;\n\n    // do a check here to see if we need the stream again\n    if (this.i < this.iterations && error > this.errorThresh) {\n      if (typeof this.floodCallback === 'function') {\n        return this.floodCallback();\n      }\n    } else {\n      // done training\n      if (typeof this.doneTrainingCallback === 'function') {\n        return this.doneTrainingCallback({\n          error: error,\n          iterations: this.i\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = TrainStream;\n","/**\n *\n * @param values\n * @returns {*}\n */\nmodule.exports = function toArray(values) {\n  if (Array.isArray(values)) {\n    return values;\n  }\n  return new Float32Array(Object.values(values));\n};\n","const toArray = require('./to-array');\n/**\n *\n * @param values\n * @returns {number}\n */\nmodule.exports = function max(values) {\n  return Math.max(...toArray(values));\n}\n","module.exports = function mse(errors) {\n  // mean squared error\n  let sum = 0;\n  for (let i = 0; i < errors.length; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / errors.length;\n}\n","/**\n *\n * @param start\n * @param end\n * @returns {Array}\n */\nmodule.exports = function range(start, end) {\n  const result = [];\n  for (; start < end; start++) {\n    result.push(start);\n  }\n  return result;\n}\n","function LookupTable(data, prop) {\n  this.length = 0;\n  if (prop) {\n    this.prop = prop;\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      const object = datum[prop];\n      for (let p in object) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  } else if (Array.isArray(data[0])) {\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const array = data[i];\n      for (let j = 0; j < array.length; j++) {\n        const object = array[j];\n        for (let p in object) {\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    }\n  } else {\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const object = data[i];\n      for (let p in object) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  }\n}\n\nmodule.exports = LookupTable;\n","function arraysToFloat32Arrays(arrays) {\n  const result = [];\n  for (let i = 0; i < arrays.length; i++) {\n    result.push(Float32Array.from(arrays[i]));\n  }\n  return result;\n}\nfunction arrayToFloat32Arrays(array) {\n  const result = [];\n  for (let i = 0; i < array.length; i++) {\n    result.push(Float32Array.from([array[i]]));\n  }\n  return result;\n}\nfunction arrayToFloat32Array(array) {\n  return Float32Array.from(array)\n}\nfunction objectsToFloat32Arrays(objects, table, length) {\n  const results = [];\n  for (let i = 0; i < objects.length; i++) {\n    const object = objects[i];\n    const result = new Float32Array(length);\n    for (let p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[table[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\nfunction objectToFloat32Arrays(object) {\n  const result = [];\n  for (let p in object) {\n    result.push(Float32Array.from([object[p]]));\n  }\n  return result;\n}\nfunction objectToFloat32Array(object, table, length) {\n  const result = new Float32Array(length);\n  for (let p in object) {\n    if (object.hasOwnProperty(p)) {\n      result[table[p]] = object[p];\n    }\n  }\n  return result;\n}\n\nmodule.exports = {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  arrayToFloat32Array,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array,\n};\n","const Thaw = require('thaw.js').default;\nconst lookup = require('./lookup');\nconst TrainStream = require('./train-stream');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst zeros = require('./utilities/zeros');\nconst LookupTable = require('./utilities/lookup-table');\nconst { arrayToFloat32Array } = require('./utilities/cast');\n\n/**\n * @param {object} options\n * @constructor\n */\nclass NeuralNetwork {\n  static get trainDefaults() {\n    return {\n      iterations: 20000,    // the maximum times to iterate the training data\n      errorThresh: 0.005,   // the acceptable error percentage from training data\n      log: false,           // true to use console.log, when a function is supplied it is used\n      logPeriod: 10,        // iterations between logging out\n      learningRate: 0.3,    // multiply's against the input and the delta then adds to momentum\n      momentum: 0.1,        // multiply's against the specified \"change\" then adds to learning rate for change\n      callback: null,       // a periodic call back that can be triggered while training\n      callbackPeriod: 10,   // the number of iterations through the training data between callback calls\n      timeout: Infinity,    // the max number of milliseconds to train for\n      praxis: null,\n      beta1: 0.9,\n      beta2: 0.999,\n      epsilon: 1e-8,\n    };\n  }\n\n  static get defaults() {\n    return {\n      leakyReluAlpha: 0.01,\n      binaryThresh: 0.5,\n      hiddenLayers: null,     // array of ints for the sizes of the hidden layers in the network\n      activation: 'sigmoid'  // Supported activation types ['sigmoid', 'relu', 'leaky-relu', 'tanh']\n    };\n  }\n\n  constructor(options = {}) {\n    Object.assign(this, this.constructor.defaults, options);\n    this.trainOpts = {};\n    this.updateTrainingOptions(Object.assign({}, this.constructor.trainDefaults, options));\n\n    this.sizes = null;\n    this.outputLayer = null;\n    this.biases = null; // weights for bias nodes\n    this.weights = null;\n    this.outputs = null;\n\n    // state for training\n    this.deltas = null;\n    this.changes = null; // for momentum\n    this.errors = null;\n    this.errorCheckInterval = 1;\n    if (!this.constructor.prototype.hasOwnProperty('runInput')) {\n      this.runInput = null;\n    }\n    if (!this.constructor.prototype.hasOwnProperty('calculateDeltas')) {\n      this.calculateDeltas = null;\n    }\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n\n    if (options.inputSize && options.hiddenLayers && options.outputSize) {\n      this.sizes = [options.inputSize]\n        .concat(options.hiddenLayers)\n        .concat([options.outputSize]);\n    }\n  }\n\n  /**\n   *\n   * Expects this.sizes to have been set\n   */\n  initialize() {\n    if (!this.sizes) throw new Error ('Sizes must be set before initializing');\n\n    this.outputLayer = this.sizes.length - 1;\n    this.biases = []; // weights for bias nodes\n    this.weights = [];\n    this.outputs = [];\n\n    // state for training\n    this.deltas = [];\n    this.changes = []; // for momentum\n    this.errors = [];\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      let size = this.sizes[layer];\n      this.deltas[layer] = zeros(size);\n      this.errors[layer] = zeros(size);\n      this.outputs[layer] = zeros(size);\n\n      if (layer > 0) {\n        this.biases[layer] = randos(size);\n        this.weights[layer] = new Array(size);\n        this.changes[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          let prevSize = this.sizes[layer - 1];\n          this.weights[layer][node] = randos(prevSize);\n          this.changes[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.setActivation();\n    if (this.trainOpts.praxis === 'adam') {\n      this._setupAdam();\n    }\n  }\n\n  /**\n   *\n   * @param activation supported inputs: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  setActivation(activation) {\n    this.activation = activation ? activation : this.activation;\n    switch (this.activation) {\n      case 'sigmoid':\n        this.runInput = this.runInput || this._runInputSigmoid;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasSigmoid;\n        break;\n      case 'relu':\n        this.runInput = this.runInput || this._runInputRelu;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasRelu;\n        break;\n      case 'leaky-relu':\n        this.runInput = this.runInput || this._runInputLeakyRelu;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        this.runInput = this.runInput || this._runInputTanh;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasTanh;\n        break;\n      default:\n        throw new Error('unknown activation ' + this.activation + ', The activation should be one of [\\'sigmoid\\', \\'relu\\', \\'leaky-relu\\', \\'tanh\\']');\n    }\n  }\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable(){\n    if(!this.runInput){\n      console.error('Activation function has not been initialized, did you run train()?');\n      return false;\n    }\n\n    const checkFns = [\n      'sizes',\n      'outputLayer',\n      'biases',\n      'weights',\n      'outputs',\n      'deltas',\n      'changes',\n      'errors',\n    ].filter(c => this[c] === null);\n\n    if(checkFns.length > 0){\n      console.error(`Some settings have not been initialized correctly, did you run train()? Found issues with: ${checkFns.join(', ')}`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n\n    let output = this.runInput(input).slice(0);\n\n    if (this.outputLookup) {\n      output = lookup.toObject(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  /**\n   * trains via sigmoid\n   * @param input\n   * @returns {*}\n   */\n  _runInputSigmoid(input) {\n    this.outputs[0] = input;  // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeLayer = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeLayer; node++) {\n        let weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //sigmoid\n        activeOutputs[node] = 1 / (1 + Math.exp(-sum));\n      }\n      output = input = this.outputs[layer];\n    }\n    return output;\n  }\n\n  _runInputRelu(input) {\n    this.outputs[0] = input;  // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        let weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //relu\n        currentOutputs[node] = (sum < 0 ? 0 : sum);\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  _runInputLeakyRelu(input) {\n    this.outputs[0] = input;  // set output state of input layer\n    let alpha = this.leakyReluAlpha;\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        let weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //leaky relu\n        currentOutputs[node] = (sum < 0 ? 0 : alpha * sum);\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  _runInputTanh(input) {\n    this.outputs[0] = input;  // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        let weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        //tanh\n        currentOutputs[node] = Math.tanh(sum);\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (this.sizes) return;\n\n    this.sizes = [];\n    this.sizes.push(data[0].input.length);\n    if (!this.hiddenLayers) {\n      this.sizes.push(Math.max(3, Math.floor(data[0].input.length / 2)));\n    } else {\n      this.hiddenLayers.forEach(size => {\n        this.sizes.push(size);\n      });\n    }\n    this.sizes.push(data[0].output.length);\n\n    this.initialize();\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options) {\n    const trainDefaults = this.constructor.trainDefaults;\n    for (const p in trainDefaults) {\n      if (!trainDefaults.hasOwnProperty(p)) continue;\n      this.trainOpts[p] = options.hasOwnProperty(p)\n        ? options[p]\n        : trainDefaults[p];\n    }\n    this.validateTrainingOptions(this.trainOpts);\n    this.setLogMethod(options.log || this.trainOpts.log);\n    this.activation = options.activation || this.activation;\n  }\n\n  /**\n   *\n   * @param options\n   */\n  validateTrainingOptions(options) {\n    const validations = {\n      iterations: (val) => { return typeof val === 'number' && val > 0; },\n      errorThresh: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\n      log: (val) => { return typeof val === 'function' || typeof val === 'boolean'; },\n      logPeriod: (val) => { return typeof val === 'number' && val > 0; },\n      learningRate: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\n      momentum: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\n      callback: (val) => { return typeof val === 'function' || val === null },\n      callbackPeriod: (val) => { return typeof val === 'number' && val > 0; },\n      timeout: (val) => { return typeof val === 'number' && val > 0 }\n    };\n    for (const p in validations) {\n      if (!validations.hasOwnProperty(p)) continue;\n      if (!options.hasOwnProperty(p)) continue;\n      if (!validations[p](options[p])) {\n        throw new Error(`[${p}, ${options[p]}] is out of normal training range, your network will probably not train.`);\n      }\n    }\n  }\n\n  /**\n   *\n   *  Gets JSON of trainOpts object\n   *    NOTE: Activation is stored directly on JSON object and not in the training options\n   */\n  getTrainOptsJSON() {\n    return Object.keys(this.constructor.trainDefaults)\n      .reduce((opts, opt) => {\n        if (opt === 'timeout' && this.trainOpts[opt] === Infinity) return opts;\n        if (opt === 'callback') return opts;\n        if (this.trainOpts[opt]) opts[opt] = this.trainOpts[opt];\n        if (opt === 'log') opts.log = typeof opts.log === 'function';\n        return opts;\n      }, {});\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  setLogMethod(log) {\n    if (typeof log === 'function'){\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = this.logTrainingStatus;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param status\n   * log training status\n   */\n  logTrainingStatus(status) {\n    console.log(`iterations: ${status.iterations}, training error: ${status.error}`);\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  calculateTrainingError(data) {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this.trainPattern(data[i], true);\n    }\n    return sum / data.length;\n  }\n\n  /**\n   * @param data\n   */\n  trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this.trainPattern(data[i]);\n    }\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param endTime\n   */\n  trainingTick(data, status, endTime) {\n    const {\n      callback,\n      callbackPeriod,\n      errorThresh,\n      iterations,\n      log,\n      logPeriod,\n    } = this.trainOpts;\n\n    if (status.iterations >= iterations || status.error <= errorThresh || Date.now() >= endTime) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (log && (status.iterations % logPeriod === 0)) {\n      status.error = this.calculateTrainingError(data);\n      log(status);\n    } else {\n      if (status.iterations % this.errorCheckInterval === 0) {\n        status.error = this.calculateTrainingError(data);\n      } else {\n        this.trainPatterns(data);\n      }\n    }\n\n    if (callback && (status.iterations % callbackPeriod === 0)) {\n      callback({\n        iterations: status.iterations,\n        error: status.error\n      });\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return {object} { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(data);\n\n    return {\n      data,\n      status,\n      endTime,\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {object} {error: number, iterations: number}\n   */\n  train(data, options = {}) {\n    let status, endTime;\n    ({ data, status, endTime } = this.prepTraining(data, options));\n\n    while (this.trainingTick(data, status, endTime));\n    return status;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {Promise}\n   * @resolves {{error: number, iterations: number}}\n   * @rejects {{trainError: string, status: {error: number, iterations: number}}\n   */\n  trainAsync(data, options = {}) {\n    let status, endTime;\n    ({ data, status, endTime } = this.prepTraining(data, options));\n\n    return new Promise((resolve, reject) => {\n      try {\n        const thawedTrain = new Thaw(new Array(this.trainOpts.iterations), {\n          delay: true,\n          each: () => this.trainingTick(data, status, endTime) || thawedTrain.stop(),\n          done: () => resolve(status)\n        });\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject({trainError, status});\n      }\n    });\n  }\n\n  /**\n   *\n   * @param {object} value\n   * @param {boolean} [logErrorRate]\n   */\n  trainPattern(value, logErrorRate) {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if  (logErrorRate) {\n      return mse(this.errors[this.outputLayer]);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasSigmoid(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const activeSize = this.sizes[layer];\n      const activeOutput = this.outputs[layer];\n      const activeError = this.errors[layer];\n      const activeDeltas = this.deltas[layer];\n      const nextLayer = this.weights[layer + 1];\n\n      for (let node = 0; node < activeSize; node++) {\n        let output = activeOutput[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          let deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * nextLayer[k][node];\n          }\n        }\n        activeError[node] = error;\n        activeDeltas[node] = error * output * (1 - output);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasRelu(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextWeights = this.weights[layer + 1];\n      const nextDeltas = this.deltas[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        let output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : 0;\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasLeakyRelu(target) {\n    let alpha = this.leakyReluAlpha;\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        let output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : alpha * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasTanh(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        let output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        }\n        else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = (1 - output * output) * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * Changes weights of networks\n   */\n  adjustWeights() {\n    const { learningRate, momentum } = this.trainOpts;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      let incoming = this.outputs[layer - 1];\n      const activeSize = this.sizes[layer];\n      const activeDelta = this.deltas[layer];\n      const activeChanges = this.changes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n\n      for (let node = 0; node < activeSize; node++) {\n        let delta = activeDelta[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          let change = activeChanges[node][k];\n\n          change = (learningRate * delta * incoming[k])\n            + (momentum * change);\n\n          activeChanges[node][k] = change;\n          activeWeights[node][k] += change;\n        }\n        activeBiases[node] += learningRate * delta;\n      }\n    }\n  }\n\n  _setupAdam() {\n    this.biasChangesLow = [];\n    this.biasChangesHigh = [];\n    this.changesLow = [];\n    this.changesHigh = [];\n    this.iterations = 0;\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      let size = this.sizes[layer];\n      if (layer > 0) {\n        this.biasChangesLow[layer] = zeros(size);\n        this.biasChangesHigh[layer] = zeros(size);\n        this.changesLow[layer] = new Array(size);\n        this.changesHigh[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          let prevSize = this.sizes[layer - 1];\n          this.changesLow[layer][node] = zeros(prevSize);\n          this.changesHigh[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.adjustWeights = this._adjustWeightsAdam;\n  }\n\n  _adjustWeightsAdam() {\n    this.iterations++;\n\n    const { iterations } = this;\n    const {\n      beta1,\n      beta2,\n      epsilon,\n      learningRate\n    } = this.trainOpts;\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const currentSize = this.sizes[layer];\n      const currentDeltas = this.deltas[layer];\n      const currentChangesLow = this.changesLow[layer];\n      const currentChangesHigh = this.changesHigh[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentBiasChangesLow = this.biasChangesLow[layer];\n      const currentBiasChangesHigh = this.biasChangesHigh[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const delta = currentDeltas[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          const gradient = delta * incoming[k];\n          const changeLow = currentChangesLow[node][k] * beta1 + (1 - beta1) * gradient;\n          const changeHigh = currentChangesHigh[node][k] * beta2 + (1 - beta2) * gradient * gradient;\n\n          const momentumCorrection = changeLow / (1 - Math.pow(beta1, iterations));\n          const gradientCorrection = changeHigh / (1 - Math.pow(beta2, iterations));\n\n          currentChangesLow[node][k] = changeLow;\n          currentChangesHigh[node][k] = changeHigh;\n          currentWeights[node][k] += learningRate * momentumCorrection / (Math.sqrt(gradientCorrection) + epsilon);\n        }\n\n        const biasGradient = currentDeltas[node];\n        const biasChangeLow = currentBiasChangesLow[node] * beta1 + (1 - beta1) * biasGradient;\n        const biasChangeHigh = currentBiasChangesHigh[node] * beta2 + (1 - beta2) * biasGradient * biasGradient;\n\n        const biasMomentumCorrection = currentBiasChangesLow[node] / (1 - Math.pow(beta1, iterations));\n        const biasGradientCorrection = currentBiasChangesHigh[node] / (1 - Math.pow(beta2, iterations));\n\n        currentBiasChangesLow[node] = biasChangeLow;\n        currentBiasChangesHigh[node] = biasChangeHigh;\n        currentBiases[node] += learningRate * biasMomentumCorrection / (Math.sqrt(biasGradientCorrection) + epsilon);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    if (!Array.isArray(data)) { // turn stream datum into array\n      data = [data];\n    }\n\n    if (!Array.isArray(data[0].input)) {\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      } else {\n        const inputLookup = new LookupTable(data, 'input');\n        this.inputLookup = inputLookup.table;\n        this.inputLookupLength = inputLookup.length;\n      }\n    }\n\n    if (!Array.isArray(data[0].output)) {\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      } else {\n        const lookup = new LookupTable(data, 'output');\n        this.outputLookup = lookup.table;\n        this.outputLookupLength = lookup.length;\n      }\n    }\n\n    if (typeof this._formatInput === 'undefined') {\n      this._formatInput = getTypedArrayFn(data[0].input, this.inputLookup);\n      this._formatOutput = getTypedArrayFn(data[0].output, this.outputLookup);\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    if (this._formatInput && this._formatOutput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: this._formatInput(data[i].input),\n          output: this._formatOutput(data[i].output),\n        });\n      }\n      return result;\n    } else if (this._formatInput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: this._formatInput(data[i].input),\n          output: data[i].output\n        });\n      }\n      return result;\n    } else if (this._formatOutput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: data[i].input,\n          output: this._formatOutput(data[i].output)\n        });\n      }\n      return result;\n    }\n    return data;\n  }\n\n  addFormat(data) {\n    this.inputLookup = lookup.addKeys(data.input, this.inputLookup);\n    if (this.inputLookup) {\n      this.inputLookupLength = Object.keys(this.inputLookup).length;\n    }\n    this.outputLookup = lookup.addKeys(data.output, this.outputLookup);\n    if (this.outputLookup) {\n      this.outputLookupLength = Object.keys(this.outputLookup).length;\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array,\n   *  }\n   * }\n   */\n  test(data) {\n    data = this.formatData(data);\n    // for binary classification problems with one output node\n    const isBinary = data[0].output.length === 1;\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n\n    if (isBinary) {\n      let falsePos = 0;\n      let falseNeg = 0;\n      let truePos = 0;\n      let trueNeg = 0;\n\n      for (let i = 0; i < data.length; i++) {\n        const output = this.runInput(data[i].input);\n        const target = data[i].output;\n        const actual = output[0] > this.binaryThresh ? 1 : 0;\n        const expected = target[0];\n\n        if (actual !== expected) {\n          const misclass = data[i];\n          misclasses.push({\n            input: misclass.input,\n            output: misclass.output,\n            actual,\n            expected\n          });\n        }\n\n        if (actual === 0 && expected === 0) {\n          trueNeg++;\n        } else if (actual === 1 && expected === 1) {\n          truePos++;\n        } else if (actual === 0 && expected === 1) {\n          falseNeg++;\n        } else if (actual === 1 && expected === 0) {\n          falsePos++;\n        }\n\n        errorSum += mse(output.map((value, i) => {\n          return target[i] - value;\n        }));\n      }\n\n      return {\n        error: errorSum / data.length,\n        misclasses: misclasses,\n        total: data.length,\n        trueNeg: trueNeg,\n        truePos: truePos,\n        falseNeg: falseNeg,\n        falsePos: falsePos,\n        precision: truePos > 0 ? truePos / (truePos + falsePos) : 0,\n        recall: truePos > 0 ? truePos / (truePos + falseNeg) : 0,\n        accuracy: (trueNeg + truePos) / data.length\n      };\n    }\n\n    for (let i = 0; i < data.length; i++) {\n      const output = this.runInput(data[i].input);\n      const target = data[i].output;\n      const actual = output.indexOf(max(output));\n      const expected = target.indexOf(max(target));\n\n      if (actual !== expected) {\n        const misclass = data[i];\n        misclasses.push({\n          input: misclass.input,\n          output: misclass.output,\n          actual,\n          expected\n        });\n      }\n\n      errorSum += mse(output.map((value, i) => {\n        return target[i] - value;\n      }));\n    }\n    return {\n      error: errorSum / data.length,\n      misclasses: misclasses,\n      total: data.length\n    };\n  }\n\n  /**\n   *\n   * @returns\n   *  {\n   *    layers: [\n   *      {\n   *        x: {},\n   *        y: {}\n   *      },\n   *      {\n   *        '0': {\n   *          bias: -0.98771313,\n   *          weights: {\n   *            x: 0.8374838,\n   *            y: 1.245858\n   *          },\n   *        '1': {\n   *          bias: 3.48192004,\n   *          weights: {\n   *            x: 1.7825821,\n   *            y: -2.67899\n   *          }\n   *        }\n   *      },\n   *      {\n   *        f: {\n   *          bias: 0.27205739,\n   *          weights: {\n   *            '0': 1.3161821,\n   *            '1': 2.00436\n   *          }\n   *        }\n   *      }\n   *    ]\n   *  }\n   */\n  toJSON() {\n    if (this.sizes === null) {\n      this.initialize();\n    }\n    const layers = [];\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      layers[layer] = {};\n\n      let nodes;\n      // turn any internal arrays back into hashes for readable json\n      if (layer === 0 && this.inputLookup) {\n        nodes = Object.keys(this.inputLookup);\n      } else if (this.outputLookup && layer === this.outputLayer) {\n        nodes = Object.keys(this.outputLookup);\n      } else {\n        nodes = range(0, this.sizes[layer]);\n      }\n\n      for (let j = 0; j < nodes.length; j++) {\n        const node = nodes[j];\n        layers[layer][node] = {};\n\n        if (layer > 0) {\n          layers[layer][node].bias = this.biases[layer][j];\n          layers[layer][node].weights = {};\n          for (let k in layers[layer - 1]) {\n            let index = k;\n            if (layer === 1 && this.inputLookup) {\n              index = this.inputLookup[k];\n            }\n            layers[layer][node].weights[k] = this.weights[layer][j][index];\n          }\n        }\n      }\n    }\n    return {\n      sizes: this.sizes.slice(0),\n      layers,\n      outputLookup: this.outputLookup !== null,\n      inputLookup: this.inputLookup !== null,\n      activation: this.activation,\n      trainOpts: this.getTrainOptsJSON()\n    };\n  }\n\n  /**\n   *\n   * @param json\n   * @returns {NeuralNetwork}\n   */\n  fromJSON(json) {\n    Object.assign(this, this.constructor.defaults, json);\n    this.sizes = json.sizes;\n    this.initialize();\n\n    for (let i = 0; i <= this.outputLayer; i++) {\n      let layer = json.layers[i];\n      if (i === 0 && (!layer[0] || json.inputLookup)) {\n        this.inputLookup = lookup.toHash(layer);\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      }\n      else if (i === this.outputLayer && (!layer[0] || json.outputLookup)) {\n        this.outputLookup = lookup.toHash(layer);\n      }\n      if (i > 0) {\n        const nodes = Object.keys(layer);\n        this.sizes[i] = nodes.length;\n        for (let j in nodes) {\n          if (nodes.hasOwnProperty(j)) {\n            const node = nodes[j];\n            this.biases[i][j] = layer[node].bias;\n            this.weights[i][j] = toArray(layer[node].weights);\n          }\n        }\n      }\n    }\n    if (json.hasOwnProperty('trainOpts')) {\n      this.updateTrainingOptions(json.trainOpts);\n    }\n    return this;\n  }\n\n  /**\n   * @param {Function} [cb]\n   * @returns {Function}\n   */\n  toFunction(cb) {\n    const activation = this.activation;\n    const leakyReluAlpha = this.leakyReluAlpha;\n    let needsVar = false;\n    function nodeHandle(layers, layerNumber, nodeKey) {\n      if (layerNumber === 0) {\n        return typeof nodeKey === 'string'\n          ? `(input['${nodeKey}']||0)`\n          : `(input[${nodeKey}]||0)`;\n      }\n\n      const layer = layers[layerNumber];\n      const node = layer[nodeKey];\n      let result = ['(' , node.bias];\n      for (let w in node.weights) {\n        if (node.weights[w] < 0) {\n          result.push(`${node.weights[w]}*${nodeHandle(layers, layerNumber - 1, w)}`);\n        } else {\n          result.push(`+${node.weights[w]}*${nodeHandle(layers, layerNumber - 1, w)}`);\n        }\n      }\n      result.push(')');\n\n      switch (activation) {\n        case 'sigmoid':\n          return `1/(1+1/Math.exp(${result.join('')}))`;\n        case 'relu': {\n          needsVar = true;\n          return `((v=${result.join('')})<0?0:v)`;\n        }\n        case 'leaky-relu': {\n          needsVar = true;\n          return `((v=${result.join('')})<0?0:${leakyReluAlpha}*v)`;\n        }\n        case 'tanh':\n          return `Math.tanh(${result.join('')})`;\n        default:\n          throw new Error(`unknown activation type ${activation}`);\n      }\n    }\n\n    const layers = this.toJSON().layers;\n    const layersAsMath = [];\n    let result;\n    for (let i in layers[layers.length - 1]) {\n      layersAsMath.push(nodeHandle(layers, layers.length - 1, i));\n    }\n    if (this.outputLookup) {\n      result = `{${\n        Object.keys(this.outputLookup)\n          .map((key, i) => `'${key}':${layersAsMath[i]}`)\n        }}`;\n    } else {\n      result = `[${layersAsMath.join(',')}]`;\n    }\n\n    const source = `${ needsVar ? 'var v;' : '' }return ${result};`;\n    return new Function('input', cb ? cb(source) : source);\n  }\n}\n\n\nfunction getTypedArrayFn(value, table) {\n  if (value.buffer instanceof ArrayBuffer) {\n    return null;\n  } else if (Array.isArray(value)) {\n    return arrayToFloat32Array;\n  } else {\n    const length = Object.keys(table).length;\n    return (v) => {\n      const array = new Float32Array(length);\n      for (let p in table) {\n        array[table[p]] = v[p] || 0;\n      }\n      return array;\n    }\n  }\n}\n\n\nmodule.exports = NeuralNetwork;\n","const { GPU, alias } = require('gpu.js');\nconst NeuralNetwork = require('./neural-network');\nconst lookup = require('./lookup');\nconst { release } = require('./utilities/kernel');\n\nfunction weightedSumSigmoid(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output, targets) {\n  return targets[this.thread.x] - output;\n}\n\nfunction calcDeltasSigmoid(error, output) {\n  // sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error, output) {\n  // relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error, output) {\n  // leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error, output) {\n  // tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(nextWeights, nextDeltas) {\n  let error = 0;\n  for (let k = 0; k < this.constants.size; k++) {\n    error += nextDeltas[k] * nextWeights[k][this.thread.x];\n  }\n  return error;\n}\n\nfunction calcChanges(previousChanges, deltas, previousOutputs) {\n  return (\n    this.constants.learningRate *\n      deltas[this.thread.y] *\n      previousOutputs[this.thread.x] +\n    this.constants.momentum * previousChanges[this.thread.y][this.thread.x]\n  );\n}\n\nfunction addWeights(change, weights) {\n  return change + weights[this.thread.y][this.thread.x];\n}\n\nfunction addBiases(biases, deltas) {\n  return (\n    biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate\n  );\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(errors) {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / this.constants.size;\n}\n\n/**\n *\n * @param {object} options\n * @constructor\n */\nclass NeuralNetworkGPU extends NeuralNetwork {\n  constructor(options = {}) {\n    super(options);\n    this.forwardPropagate = [];\n    this.backwardPropagate = [];\n    this.changesPropagate = [];\n    this.biasesPropagate = [];\n    this.errorCheckInterval = 100;\n    this.gpu = new GPU({ mode: options.mode });\n  }\n\n  /**\n   *\n   */\n  initialize() {\n    super.initialize();\n    this.buildRunInput();\n    this.buildCalculateDeltas();\n    this.buildGetChanges();\n    this.buildChangeBiases();\n    this.buildGetMSE();\n  }\n\n  setActivation() {\n    return;\n    throw new Error(\n      `${this.constructor.name}-setActivation is not yet implemented`\n    );\n  }\n\n  /**\n   *\n   * @param value\n   * @param logErrorRate\n   */\n  trainPattern(value, logErrorRate) {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return this.getMSE(this.errors[this.outputLayer])[0];\n    } else {\n      return null;\n    }\n  }\n\n  adjustWeights() {\n    this.getChanges();\n    this.changeBiases();\n  }\n\n  buildRunInput() {\n    let weightedSum = null;\n\n    switch (this.activation) {\n      case 'sigmoid':\n        weightedSum = weightedSumSigmoid;\n        break;\n      case 'relu':\n        weightedSum = weightedSumRelu;\n        break;\n      case 'leaky-relu':\n        weightedSum = weightedSumLeakyRelu;\n        break;\n      case 'tanh':\n        weightedSum = weightedSumTanh;\n        break;\n      default:\n        throw new Error(`unknown activation ${this.activation}`);\n    }\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          size: this.sizes[layer - 1],\n        },\n      });\n    }\n\n    this.texturizeInputData = this.gpu.createKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      output: [this.sizes[1]],\n      pipeline: true\n    });\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  runInput(input) {\n    let output;\n    this.outputs[0] = input;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      release(this.outputs[layer]);\n      this.outputs[layer] = this.forwardPropagate[layer](\n        this.weights[layer],\n        this.biases[layer],\n        input\n      );\n      output = input = this.outputs[layer];\n    }\n    return output;\n  }\n\n  buildCalculateDeltas() {\n    let calcDeltas = null;\n\n    switch (this.activation) {\n      case 'sigmoid':\n        calcDeltas = calcDeltasSigmoid;\n        break;\n      case 'relu':\n        calcDeltas = calcDeltasRelu;\n        break;\n      case 'leaky-relu':\n        calcDeltas = calcDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        calcDeltas = calcDeltasTanh;\n        break;\n      default:\n        throw new Error(`unknown activation ${this.activation}`);\n    }\n\n    this.gpu.addFunction(alias( 'calcDeltas', calcDeltas));\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      if (layer === this.outputLayer) {\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: alias('calcErrorOutput', calcErrorOutput)\n          },\n          function (outputs, targets) {\n            const output = outputs[this.thread.x];\n            return calcDeltas(calcErrorOutput(output, targets), output);\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n          }\n        );\n      } else {\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: alias('calcError', calcError)\n          },\n          function (nextWeights, outputs, nextDeltas) {\n            const output = outputs[this.thread.x];\n            return calcDeltas(calcError(nextWeights, nextDeltas), output);\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n            constants: {\n              size: this.deltas[layer + 1].length,\n            },\n          }\n        );\n      }\n    }\n  }\n\n  calculateDeltas(target) {\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      let output;\n      release(this.deltas[layer]);\n      release(this.errors[layer]);\n\n      if (layer === this.outputLayer) {\n        output = this.backwardPropagate[layer](\n          this.outputs[layer],\n          target);\n      } else {\n        output = this.backwardPropagate[layer](\n          this.weights[layer + 1],\n          this.outputs[layer],\n          this.deltas[layer + 1],\n        );\n      }\n      this.deltas[layer] = output.result;\n      this.errors[layer] = output.error;\n    }\n  }\n\n  buildGetChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.changesPropagate[layer] = this.gpu.createKernelMap(\n        {\n          weights: alias('addWeights', addWeights),\n          changes: alias('calcChanges', calcChanges),\n        },\n        function (previousOutputs, deltas, weights, changes) {\n          const change = calcChanges(changes, deltas, previousOutputs);\n\n          return addWeights(change, weights);\n        },\n        {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            size: this.outputs[layer - 1].length,\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum,\n          },\n        }\n      );\n    }\n  }\n\n  getChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const weights = this.weights[layer];\n      const changes = this.changes[layer];\n      const output = this.changesPropagate[layer](\n        this.outputs[layer - 1],\n        this.deltas[layer],\n        weights,\n        changes\n      );\n      release(weights);\n      release(changes);\n      this.weights[layer] = output.weights;\n      this.changes[layer] = output.changes;\n      release(output.result);\n    }\n  }\n\n  buildChangeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          learningRate: this.trainOpts.learningRate,\n        },\n      });\n    }\n  }\n\n  changeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const biases = this.biases[layer];\n      this.biases[layer] = this.biasesPropagate[layer](\n        biases,\n        this.deltas[layer]\n      );\n      release(biases);\n    }\n  }\n\n  buildGetMSE() {\n    this.getMSE = this.gpu.createKernel(mse, {\n      output: [1],\n      constants: {\n        size: this.sizes[this.outputLayer],\n      },\n    });\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n    const inputTexture = this.texturizeInputData(input);\n    const outputTextures = this.runInput(inputTexture);\n    let output = outputTextures.toArray ? outputTextures.toArray() : outputTextures;\n\n    if (this.outputLookup) {\n      output = lookup.toObject(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(data);\n\n    const texturizeOutputData = this.gpu.createKernel(\n      function(value) { return value[this.thread.x]; },\n      {\n        output: [data[0].output.length],\n        pipeline: true\n      }\n    );\n\n    return {\n      data: data.map(set => ({\n        input: this.texturizeInputData(set.input),\n        output: texturizeOutputData(set.output),\n      })),\n      status,\n      endTime,\n    };\n  }\n\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n  toJSON() {\n    if (!this.weights[1].toArray) {\n      // in fallback mode\n      return super.toJSON();\n    }\n\n    // in GPU mode\n    const weights = [];\n    const biases = [];\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      weights[layer] = Array.from(this.weights[layer].toArray());\n      biases[layer] = Array.from(this.biases[layer].toArray());\n    }\n\n    // pseudo lo-fi decorator\n    return NeuralNetwork.prototype.toJSON.call({\n      activation: this.activation,\n      inputLookup: this.inputLookup,\n      outputLookup: this.outputLookup,\n      outputLayer: this.outputLayer,\n      sizes: this.sizes,\n      getTrainOptsJSON: () => this.getTrainOptsJSON(),\n      weights,\n      biases,\n    });\n  }\n}\n\nmodule.exports = NeuralNetworkGPU;\n","const { Internal } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { release } = require('../utilities/kernel');\n\nclass RecurrentConnection extends Internal {\n  setLayer(layer) {\n    this.layer = layer;\n  }\n\n  get width() {\n    return this.layer.width;\n  }\n\n  set width(value) {\n    throw new Error(`${this.constructor.name}-width is not yet implemented`);\n  }\n\n  get height() {\n    return this.layer.height;\n  }\n\n  set height(value) {\n    throw new Error(`${this.constructor.name}-height is not yet implemented`);\n  }\n\n  get deltas() {\n    return this.layer.deltas;\n  }\n\n  set deltas(deltas) {\n    release(this.layer.deltas);\n    this.layer.deltas = deltas;\n  }\n\n  get weights() {\n    return this.layer.weights;\n  }\n\n  set weights(weights) {\n    release(this.layer.weights);\n    this.layer.weights = weights;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    const layerDeltas = this.layer.deltas;\n    this.layer.deltas = zeros2D(this.width, this.height);\n    release(layerDeltas);\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n\nmodule.exports = {\n  RecurrentConnection\n};\n","const { Internal } = require('./types');\nconst { Base } = require('./base');\nconst { release } = require('../utilities/kernel');\n\nclass RecurrentInput extends Internal {\n  setRecurrentInput(recurrentInput) {\n    this.recurrentInput = recurrentInput;\n    this.validate();\n  }\n\n  get deltas() {\n    return this.recurrentInput.deltas;\n  }\n\n  set deltas(deltas) {\n    const recurrentInputDeltas = this.recurrentInput.deltas;\n    this.recurrentInput.deltas = deltas;\n    release(recurrentInputDeltas);\n  }\n\n  get weights() {\n    return this.recurrentInput.weights;\n  }\n\n  set weights(weights) {\n    const recurrentInputWeights = this.recurrentInput.weights;\n    this.recurrentInput.weights = weights;\n    release(recurrentInputWeights);\n  }\n\n  validate() {\n    Base.prototype.validate.call(this);\n    if (this.width !== this.recurrentInput.width) {\n      throw new Error(\n        `${this.constructor.name} layer width ${this.width} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.width}) are not same`\n      );\n    }\n\n    if (this.height !== this.recurrentInput.height) {\n      throw new Error(\n        `${this.constructor.name} layer height ${this.height} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.height}) are not same`\n      );\n    }\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n\nmodule.exports = {\n  RecurrentInput\n};\n","const zeros2D = require('../utilities/zeros-2d');\nconst { Internal } = require('./types');\nconst { release } = require('../utilities/kernel');\n\nclass RecurrentZeros extends Internal {\n  setDimensions(width, height) {\n    this.praxis = null;\n    this.width = width;\n    this.height = height;\n    this.weights = zeros2D(width, height);\n    this.deltas = zeros2D(width, height);\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    const { weights } = this;\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    release(weights);\n\n    //TODO: put this on the GPU\n    release(this.deltas);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  validate() {\n    throw new Error(`${this.constructor.name}-validate is not yet implemented`);\n  }\n\n  reset() {\n    throw new Error(`${this.constructor.name}-reset is not yet implemented`);\n  }\n}\n\nfunction recurrentZeros() {\n  return new RecurrentZeros();\n}\n\nmodule.exports = {\n  RecurrentZeros,\n  recurrentZeros,\n};\n","const { RecurrentConnection } = require('./layer/recurrent-connection');\nconst { RecurrentInput } = require('./layer/recurrent-input');\nconst { RecurrentZeros } = require('./layer/recurrent-zeros');\nconst flattenLayers = require('./utilities/flatten-layers');\nconst mse2d = require('./utilities/mse-2d');\nconst { FeedForward } = require('./feed-forward');\n// const Base from './layer/base'\n\nclass Recurrent extends FeedForward {\n  static get structure() {\n    return {\n      /**\n       *\n       * _inputLayers are a 1 dimensional array of input layers defined once\n       * @type Object[]\n       * @private\n       */\n      _inputLayers: null,\n\n      /**\n       * _hiddenLayers are a 1 dimensional array of hidden layers defined from results from settings.hiddenLayers\n       * @type Object[]\n       * @private\n       */\n      _hiddenLayers: null,\n\n      /**\n       * _hiddenLayerSets are a 2 dimensional array of hidden layers defined for each recursion\n       * @type Object[][]\n       * @private\n       */\n      _hiddenLayerSets: null,\n\n      /**\n       * _outputLayers are a 1 dimensional array of output layers defined once\n       * @type Object[]\n       * @private\n       */\n      _outputLayers: null,\n      _outputConnection: null,\n      _previousInputs: null,\n      _model: null,\n      _recurrentIndices: null,\n    };\n  }\n\n  _connectLayers() {\n    const initialLayers = [];\n    const inputLayer = this.inputLayer();\n    this._inputLayer = inputLayer;\n    this.layers.push(inputLayer);\n    const hiddenLayers = this._connectHiddenLayers(inputLayer);\n    this._hiddenLayerSets = hiddenLayers;\n    this._outputConnection.setLayer(hiddenLayers[hiddenLayers.length - 1]);\n    const outputLayer = this.outputLayer(\n      this._outputConnection,\n      hiddenLayers.length\n    );\n    this._outputLayer = outputLayer;\n    this.layers.push(outputLayer);\n    initialLayers.push(inputLayer);\n    initialLayers.push(...hiddenLayers);\n    initialLayers.push(outputLayer);\n    const flattenedLayers = flattenLayers(initialLayers);\n    this._inputLayers = flattenedLayers.slice(\n      0,\n      flattenedLayers.indexOf(inputLayer) + 1\n    );\n    this._hiddenLayerSets = [\n      flattenedLayers.slice(\n        flattenedLayers.indexOf(inputLayer) + 1,\n        flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1\n      ),\n    ];\n    this._outputLayers = flattenedLayers.slice(\n      flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1\n    );\n    this._outputLayers.unshift();\n    this._recurrentIndices = [];\n    this._model = [];\n    for (let i = 0; i < this._hiddenLayerSets[0].length; i++) {\n      if (\n        Object.getPrototypeOf(this._hiddenLayerSets[0][i].constructor).name ===\n        'Model'\n      ) {\n        this._model.push(this._hiddenLayerSets[0][i]);\n        this._hiddenLayerSets[0].splice(i, 1);\n      }\n    }\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      this._recurrentIndices.push(\n        this._hiddenLayerSets[0].indexOf(hiddenLayers[i])\n      );\n    }\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    this._hiddenLayers = [];\n    const hiddenLayers = [];\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const recurrentInput = new RecurrentZeros();\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, recurrentInput, i);\n      this._hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n      hiddenLayers.push(hiddenLayer);\n      this.layers.push(hiddenLayer);\n    }\n    return hiddenLayers;\n  }\n\n  _connectHiddenLayersDeep() {\n    const hiddenLayers = [];\n    const previousHiddenLayers = this._hiddenLayerSets[\n      this._hiddenLayerSets.length - 1\n    ];\n    const firstLayer = this._hiddenLayerSets[0];\n    let recurrentIndex = 0;\n    for (let i = 0; i < previousHiddenLayers.length; i++) {\n      const previousHiddenLayer = previousHiddenLayers[i];\n      let layer = null;\n      switch (Object.getPrototypeOf(firstLayer[i].constructor).name) {\n        case 'Activation': {\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(inputLayer);\n          break;\n        }\n        case 'Filter': {\n          const settings = previousHiddenLayer;\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(settings, inputLayer);\n          break;\n        }\n        case 'Internal': {\n          switch (previousHiddenLayer.constructor.name) {\n            case 'RecurrentConnection':\n              break;\n            case 'RecurrentInput':\n            case 'RecurrentZeros':\n            default:\n              layer = new RecurrentInput();\n              layer.setDimensions(\n                previousHiddenLayer.width,\n                previousHiddenLayer.height\n              );\n              layer.setRecurrentInput(\n                previousHiddenLayers[this._recurrentIndices[recurrentIndex]]\n              );\n              recurrentIndex++;\n              break;\n          }\n          break;\n        }\n        case 'Model': {\n          layer = previousHiddenLayer;\n          break;\n        }\n        case 'Modifier': {\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(inputLayer);\n          break;\n        }\n        case 'Operator': {\n          const inputLayer1 =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer1)\n            ] || previousHiddenLayer.inputLayer1;\n          const inputLayer2 =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer2)\n            ] || previousHiddenLayer.inputLayer2;\n          layer = new previousHiddenLayer.constructor(inputLayer1, inputLayer2);\n          break;\n        }\n        default:\n          throw new Error(\n            `hidden layer ${\n              previousHiddenLayer.constructor.name\n            } extends unknown hidden layer ${\n              Object.getPrototypeOf(previousHiddenLayer.constructor).name\n            }`\n          );\n      }\n\n      hiddenLayers[i] = layer;\n    }\n    this._hiddenLayerSets.push(hiddenLayers);\n    return hiddenLayers;\n  }\n\n  initialize() {\n    this.layers = [];\n    this._previousInputs = [];\n    this._outputConnection = new RecurrentConnection();\n    this._connectLayers();\n    this.initializeLayers(this._model);\n    this.initializeLayers(this._inputLayers);\n    this.initializeLayers(this._hiddenLayerSets[0]);\n    this.initializeLayers(this._outputLayers);\n  }\n\n  initializeDeep() {\n    const hiddenLayers = this._connectHiddenLayersDeep();\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      const hiddenLayer = hiddenLayers[i];\n      hiddenLayer.reuseKernels(this._hiddenLayerSets[0][i]);\n    }\n  }\n\n  runInput(input) {\n    const max = input.length - 1;\n    for (let x = 0; x < max; x++) {\n      const hiddenLayers = this._hiddenLayerSets[x];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n\n      this._inputLayers[0].predict([input[x]]);\n      this._previousInputs.push(this._inputLayers[0].weights);\n      for (let i = 1; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].predict();\n      }\n      for (let i = 0; i < this._hiddenLayerSets[x].length; i++) {\n        this._hiddenLayerSets[x][i].predict();\n      }\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].predict();\n      }\n    }\n    return this._outputLayers[this._outputLayers.length - 1].weights;\n  }\n\n  _prepTraining(data, options) {\n    const stats = super._prepTraining(data, options);\n    this.initializeDeep();\n    return stats;\n  }\n\n  _calculateDeltas(target, offset) {\n    for (let x = target.length - 1; x >= 0; x--) {\n      const hiddenLayersIndex = offset + x;\n      const hiddenLayers = this._hiddenLayerSets[hiddenLayersIndex];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n      if (this._previousInputs.length > 0) {\n        this._inputLayers[0].weights = this._previousInputs.pop();\n      }\n\n      this._outputLayers[this._outputLayers.length - 1].compare([[target[x]]]);\n      for (let i = this._outputLayers.length - 2; i >= 0; i--) {\n        this._outputLayers[i].compare();\n      }\n      for (let i = hiddenLayers.length - 1; i >= 0; i--) {\n        hiddenLayers[i].compare();\n      }\n      for (let i = this._inputLayers.length - 1; i >= 1; i--) {\n        this._inputLayers[i].compare();\n      }\n    }\n  }\n\n  adjustWeights() {\n    for (\n      let hiddenLayersIndex = 0;\n      hiddenLayersIndex < this._hiddenLayerSets.length;\n      hiddenLayersIndex++\n    ) {\n      const hiddenLayers = this._hiddenLayerSets[hiddenLayersIndex];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n      for (let i = 0; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].learn();\n      }\n\n      for (let i = 0; i < hiddenLayers.length; i++) {\n        hiddenLayers[i].learn();\n      }\n\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].learn();\n      }\n\n      for (let i = 0; i < this._model.length; i++) {\n        this._model[i].learn();\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {number[]} input\n   * @param {number[]} target\n   * @param {Boolean} [logErrorRate]\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target, input.length - 1);\n    this._calculateDeltas(input.slice(1), 0);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      const outputLayer = this._outputLayers[this._outputLayers.length - 1];\n      return mse2d(\n        outputLayer.errors.hasOwnProperty('toArray')\n          ? outputLayer.errors.toArray()\n          : outputLayer.errors\n      );\n    }\n    return null;\n  }\n}\n\nmodule.exports = {\n  Recurrent\n};\n","const zeros = require('../../utilities/zeros');\n\n/**\n * A matrix\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nclass Matrix {\n  constructor(rows, columns) {\n    if (rows === undefined) return;\n    if (columns === undefined) return;\n\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n    this.deltas = zeros(rows * columns);\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @returns {Float32Array|Array}\n   */\n  getWeights(row, col) {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('get accessor is skewed');\n    return this.weights[ix];\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setWeight(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed');\n    this.weights[ix] = v;\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setDeltas(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed');\n    this.deltas[ix] = v;\n  }\n\n  /**\n   *\n   * @returns {{rows: *, columns: *, weights: Array}}\n   */\n  toJSON() {\n    return {\n      rows: this.rows,\n      columns: this.columns,\n      weights: this.weights.slice(0),\n    };\n  }\n\n  static fromJSON(json) {\n    const matrix = new Matrix(json.rows, json.columns);\n    for (let i = 0, max = json.rows * json.columns; i < max; i++) {\n      matrix.weights[i] = json.weights[i]; // copy over weights\n    }\n    return matrix;\n  }\n\n  /**\n   *\n   * @param weightRows\n   * @param [deltasRows]\n   * @returns {Matrix}\n   */\n  static fromArray(weightRows, deltasRows) {\n    const rows = weightRows.length;\n    const columns = weightRows[0].length;\n    const m = new Matrix(rows, columns);\n\n    deltasRows = deltasRows || weightRows;\n\n    for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\n      const weightValues = weightRows[rowIndex];\n      const deltasValues = deltasRows[rowIndex];\n      for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\n        m.setWeight(rowIndex, columnIndex, weightValues[columnIndex]);\n        m.setDeltas(rowIndex, columnIndex, deltasValues[columnIndex]);\n      }\n    }\n\n    return m;\n  }\n\n  weightsToArray() {\n    const deltas = [];\n    let row = 0;\n    let column = 0;\n    for (let i = 0; i < this.weights.length; i++) {\n      if (column === 0) {\n        deltas.push([]);\n      }\n      deltas[row].push(this.weights[i]);\n      column++;\n      if (column >= this.columns) {\n        column = 0;\n        row++;\n      }\n    }\n    return deltas;\n  }\n\n  deltasToArray() {\n    const deltas = [];\n    let row = 0;\n    let column = 0;\n    for (let i = 0; i < this.deltas.length; i++) {\n      if (column === 0) {\n        deltas.push([]);\n      }\n      deltas[row].push(this.deltas[i]);\n      column++;\n      if (column >= this.columns) {\n        column = 0;\n        row++;\n      }\n    }\n    return deltas;\n  }\n}\n\nmodule.exports = Matrix;\n","function randomFloat(a, b) {\n  return Math.random() * (b - a) + a;\n}\n\n// Random numbers utils\nfunction gaussRandom() {\n  if (gaussRandom.returnV) {\n    gaussRandom.returnV = false;\n    return gaussRandom.vVal;\n  }\n  const u = 2 * Math.random() - 1;\n  const v = 2 * Math.random() - 1;\n  const r = u * u + v * v;\n  if (r === 0 || r > 1) {\n    return gaussRandom();\n  }\n  const c = Math.sqrt((-2 * Math.log(r)) / r);\n  gaussRandom.vVal = v * c; // cache this\n  gaussRandom.returnV = true;\n  return u * c;\n}\n\nfunction randomInteger(a, b) {\n  return Math.floor(Math.random() * (b - a) + a);\n}\n\nfunction randomN(mu, std) {\n  return mu + gaussRandom() * std;\n}\n\ngaussRandom.returnV = false;\ngaussRandom.vVal = 0;\n\nmodule.exports = { randomFloat, randomInteger, randomN };\n","const Matrix = require('.');\nconst { randomFloat } = require('../../utilities/random');\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @param std\n * @constructor\n */\nclass RandomMatrix extends Matrix {\n  constructor(rows, columns, std) {\n    super(rows, columns);\n    this.rows = rows;\n    this.columns = columns;\n    this.std = std;\n    for (let i = 0, max = this.weights.length; i < max; i++) {\n      this.weights[i] = randomFloat(-std, std);\n    }\n  }\n}\n\nmodule.exports = RandomMatrix;\n","const Matrix = require('.');\nconst ones = require('../../utilities/ones');\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nclass OnesMatrix extends Matrix {\n  constructor(rows, columns) {\n    super(rows, columns);\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = ones(rows * columns);\n    this.deltas = ones(rows * columns);\n  }\n}\n\nmodule.exports = OnesMatrix;\n","/*\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function copy(product, left) {\n  product.rows = parseInt(left.rows, 10);\n  product.columns = parseInt(left.columns, 10);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n};\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function cloneNegative(product, left) {\n  product.rows = parseInt(left.rows, 10);\n  product.columns = parseInt(left.columns, 10);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = -left.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * add {left} and {right} matrix weights into {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function add(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * adds {from} deltas to {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function addB(product, left, right) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = product.deltas[i];\n    right.deltas[i] = product.deltas[i];\n  }\n};\n","/**\n * makes matrix weights and deltas all ones\n * @param {Matrix} product\n */\nmodule.exports = function allOnes(product) {\n  for (let i = 0; i < product.weights.length; i++) {\n    product.weights[i] = 1;\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * multiply {left} and {right} matrix weights to {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiply(product, left, right) {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRow = 0; leftRow < leftRows; leftRow++) {\n    const leftRowBase = leftColumns * leftRow;\n    const rightRowBase = rightColumns * leftRow;\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // dot product loop\n      let dot = 0;\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftIndex = leftRowBase + leftColumn;\n        const rightIndex = rightColumnBase + rightColumn;\n        dot += left.weights[leftIndex] * right.weights[rightIndex];\n        left.deltas[leftIndex] = 0;\n        right.deltas[rightIndex] = 0;\n      }\n      product.weights[rightRowBase + rightColumn] = dot;\n    }\n  }\n};\n","/**\n * multiplies {from} deltas to {left} and {right}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyB(product, left, right) {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRowRoot = 0; leftRowRoot < leftRows; leftRowRoot++) {\n    const leftRowBase = leftColumns * leftRowRoot;\n    const rightRowBase = rightColumns * leftRowRoot;\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftRow = leftRowBase + leftColumn;\n        const rightRow = rightColumnBase + rightColumn;\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\n      }\n    }\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyElement(product, left, right) {\n  const { weights } = left;\n  for (let i = 0; i < weights.length; i++) {\n    product.weights[i] = left.weights[i] * right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyElementB(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i];\n    right.deltas[i] = left.weights[i] * product.deltas[i];\n  }\n}\n","/**\n *\n * relu {m} weights to {into} weights\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function relu(product, left) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n * @param {Matrix} product\n * @param {Matrix} m\n */\nmodule.exports = function reluB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowPluckIndex\n */\nmodule.exports = function rowPluck(product, left, rowPluckIndex) {\n  const { columns } = left;\n  const rowBase = columns * rowPluckIndex;\n  for (let column = 0; column < columns; column++) {\n    product.weights[column] = left.weights[rowBase + column];\n    product.deltas[column] = 0;\n  }\n};\n","/**\n * adds {from} deltas into {m} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowIndex\n */\nmodule.exports = function rowPluckB(product, left, rowIndex) {\n  const { columns } = left;\n  const rowBase = columns * rowIndex;\n  for (let column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function sigmoid(product, left) {\n  // sigmoid nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));\n    product.deltas[i] = 0;\n  }\n}\n\nfunction sig(x) {\n  // helper function for computing sigmoid\n  return 1 / (1 + Math.exp(-x));\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function sigmoidB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    const mwi = product.weights[i];\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function tanh(product, left) {\n  // tanh nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.tanh(left.weights[i]);\n    product.deltas[i] = 0;\n  }\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function tanhB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    // grad for z = tanh(x) is (1 - z^2)\n    const mwi = product.weights[i];\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\n  }\n}\n","const Matrix = require('.');\n\n/**\n *\n * @param {Matrix} m\n * @returns {Matrix}\n */\nmodule.exports = function softmax(m) {\n  const result = new Matrix(m.rows, m.columns); // probability volume\n  let maxVal = -999999;\n  for (let i = 0; i < m.weights.length; i++) {\n    if (m.weights[i] > maxVal) {\n      maxVal = m.weights[i];\n    }\n  }\n\n  let s = 0;\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] = Math.exp(m.weights[i] - maxVal);\n    s += result.weights[i];\n  }\n\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] /= s;\n  }\n\n  // no backward pass here needed\n  // since we will use the computed probabilities outside\n  // to set gradients directly on m\n  return result;\n};\n","const Matrix = require('./');\nconst OnesMatrix = require('./ones-matrix');\nconst copy = require('./copy');\nconst cloneNegative = require('./clone-negative');\nconst add = require('./add');\nconst addB = require('./add-b');\nconst allOnes = require('./all-ones');\nconst multiply = require('./multiply');\nconst multiplyB = require('./multiply-b');\nconst multiplyElement = require('./multiply-element');\nconst multiplyElementB = require('./multiply-element-b');\nconst relu = require('./relu');\nconst reluB = require('./relu-b');\nconst rowPluck = require('./row-pluck');\nconst rowPluckB = require('./row-pluck-b');\nconst sigmoid = require('./sigmoid');\nconst sigmoidB = require('./sigmoid-b');\nconst tanh = require('./tanh');\nconst tanhB = require('./tanh-b');\nconst softmax = require('./softmax');\n\nclass Equation {\n  constructor() {\n    this.inputRow = 0;\n    this.inputValue = null;\n    this.states = [];\n  }\n\n  /**\n   * connects two matrices together by add\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  add(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, left.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: add,\n      backpropagationFn: addB,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param {Number} rows\n   * @param {Number} columns\n   * @returns {Matrix}\n   */\n  allOnes(rows, columns) {\n    const product = new Matrix(rows, columns);\n    this.states.push({\n      left: product,\n      product,\n      forwardFn: allOnes,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  cloneNegative(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: cloneNegative,\n    });\n    return product;\n  }\n\n  /**\n   * connects two matrices together by subtract\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  subtract(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    return this.add(\n      this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)),\n      right\n    );\n  }\n\n  /**\n   * connects two matrices together by multiply\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiply(left, right) {\n    if (left.columns !== right.rows) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, right.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiply,\n      backpropagationFn: multiplyB,\n    });\n    return product;\n  }\n\n  /**\n   * connects two matrices together by multiplyElement\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiplyElement(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, left.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiplyElement,\n      backpropagationFn: multiplyElementB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to relu\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  relu(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: relu,\n      backpropagationFn: reluB,\n    });\n    return product;\n  }\n\n  /**\n   * copy a matrix\n   * @param {Matrix} input\n   * @returns {Matrix}\n   */\n  input(input) {\n    this.states.push({\n      product: input,\n      forwardFn: (product) => {\n        product.weights = input.weights = this.inputValue;\n      }\n    });\n    return input;\n  }\n\n  /**\n   * connects a matrix via a row\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  inputMatrixToRow(m) {\n    const self = this;\n    const product = new Matrix(m.columns, 1);\n    this.states.push({\n      left: m,\n      get right() {\n        return self.inputRow;\n      },\n      product,\n      forwardFn: rowPluck,\n      backpropagationFn: rowPluckB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to sigmoid\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  sigmoid(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: sigmoid,\n      backpropagationFn: sigmoidB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to tanh\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  tanh(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: tanh,\n      backpropagationFn: tanhB,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param m\n   * @returns {Matrix}\n   */\n  observe(m) {\n    let iForward = 0;\n    let iBackpropagate = 0;\n    this.states.push({\n      forwardFn() {\n        iForward++;\n      },\n      backpropagationFn() {\n        iBackpropagate++;\n      },\n    });\n    return m;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runIndex(rowIndex = 0) {\n    this.inputRow = rowIndex;\n    let state;\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue;\n      }\n      state.forwardFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runInput(inputValue) {\n    this.inputValue = inputValue;\n    let state;\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue;\n      }\n      state.forwardFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  backpropagate() {\n    let i = this.states.length;\n    let state;\n    while (i-- > 0) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('backpropagationFn')) {\n        continue;\n      }\n      state.backpropagationFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  backpropagateIndex(rowIndex = 0) {\n    this.inputRow = rowIndex;\n\n    let i = this.states.length;\n    let state;\n    while (i-- > 0) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('backpropagationFn')) {\n        continue;\n      }\n      state.backpropagationFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  predictTarget(input, target) {\n    const output = this.runInput(input);\n    let errorSum = 0;\n    for (let i = 0; i < output.weights.length; i++) {\n      const error = output.weights[i] - target[i];\n      // set gradients into log probabilities\n      errorSum += Math.abs(error);\n      // write gradients into log probabilities\n      output.deltas[i] = error;\n    }\n    return errorSum;\n  }\n\n  predictTargetIndex(input, target) {\n    const output = this.runIndex(input);\n    // set gradients into log probabilities\n    const logProbabilities = output; // interpret output as log probabilities\n    let probabilities = softmax(output); // compute the softmax probabilities\n\n    // write gradients into log probabilities\n    logProbabilities.deltas = probabilities.weights.slice(0);\n    logProbabilities.deltas[target] -= 1;\n\n    // accumulate base 2 log prob and do smoothing\n    return -Math.log2(probabilities.weights[target]);\n  }\n}\n\nmodule.exports = Equation;\n","const { randomFloat } = require('../../utilities/random');\n\n/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nmodule.exports = function sampleI(m) {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  const r = randomFloat(0, 1);\n  let x = 0;\n  let i = 0;\n  const w = m.weights;\n\n  while (true) {\n    x += w[i];\n    if (x > r) {\n      return i;\n    }\n    i++;\n  }\n};\n","/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nmodule.exports = function maxI(m) {\n  // argmax of array w\n  const { weights } = m;\n  let maxv = weights[0];\n  let maxix = 0;\n  for (let i = 1; i < weights.length; i++) {\n    const v = weights[i];\n    if (v < maxv) continue;\n\n    maxix = i;\n    maxv = v;\n  }\n  return maxix;\n};\n","/**\n *\n * @param {String[]|Number[]} values\n * @param maxThreshold\n * @constructor\n */\nclass DataFormatter {\n  constructor(values, maxThreshold = 0) {\n    if (values === undefined) return;\n\n    this.values = values;\n    // go over all characters and keep track of all unique ones seen\n    // count up all characters\n    this.indexTable = {};\n    this.characterTable = {};\n    this.characters = [];\n    this.specialIndexes = [];\n    this.buildCharactersFromIterable(values);\n    this.buildTables(maxThreshold);\n  }\n\n  buildCharactersFromIterable(values) {\n    const tempCharactersTable = {};\n    for (\n      let dataFormatterIndex = 0, dataFormatterLength = values.length;\n      dataFormatterIndex < dataFormatterLength;\n      dataFormatterIndex++\n    ) {\n      const characters = values[dataFormatterIndex];\n\n      if (characters.hasOwnProperty('length')) {\n        for (\n          let characterIndex = 0, charactersLength = characters.length;\n          characterIndex < charactersLength;\n          characterIndex++\n        ) {\n          const character = characters[characterIndex];\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else {\n        const character = values[dataFormatterIndex];\n        if (tempCharactersTable.hasOwnProperty(character)) continue;\n        tempCharactersTable[dataFormatterIndex] = true;\n        this.characters.push(character);\n      }\n    }\n  }\n\n  buildTables(maxThreshold) {\n    // filter by count threshold and create pointers\n    const charactersLength = this.characters.length;\n    for (\n      let characterIndex = 0;\n      characterIndex < charactersLength;\n      characterIndex++\n    ) {\n      const character = this.characters[characterIndex];\n      if (characterIndex >= maxThreshold) {\n        // add character to dataFormatter\n        this.indexTable[character] = characterIndex;\n        this.characterTable[characterIndex] = character;\n      }\n    }\n  }\n\n  toIndexes(value, maxThreshold = 0) {\n    const result = [];\n    const { indexTable } = this;\n\n    for (let i = 0, max = value.length; i < max; i++) {\n      const character = value[i];\n      let index = indexTable[character];\n      if (index === undefined) {\n        if (indexTable['unrecognized']) {\n          index = indexTable['unrecognized'];\n        } else {\n          throw new Error(`unrecognized character \"${ character }\"`);\n        }\n      }\n      if (index < maxThreshold) continue;\n      result.push(index);\n    }\n    return result;\n  }\n\n  toIndexesInputOutput(value1, value2 = null, maxThreshold = 0) {\n    let result = null;\n    if (typeof value1 === 'string') {\n      result = this.toIndexes(\n        value1.split('').concat(['stop-input', 'start-output']),\n        maxThreshold\n      );\n    } else {\n      result = this.toIndexes(\n        value1.concat(['stop-input', 'start-output']),\n        maxThreshold\n      );\n    }\n\n    if (value2 === null) return result;\n\n    if (typeof value2 === 'string') {\n      return result.concat(this.toIndexes(value2.split(''), maxThreshold));\n    } else {\n      return result.concat(this.toIndexes(value2, maxThreshold));\n    }\n  }\n\n  toCharacters(indices, maxThreshold = 0) {\n    const result = [];\n    const { indexTable, characterTable } = this;\n\n    for (let i = 0, max = indices.length; i < max; i++) {\n      let index = indices[i];\n      if (index < maxThreshold) continue;\n      let character = characterTable[index];\n      if (character === undefined) {\n        if (indexTable['unrecognized']) {\n          character = characterTable[indexTable['unrecognized']];\n        } else {\n          throw new Error(`unrecognized index \"${ index }\"`);\n        }\n      } else if (character !== null) {\n        result.push(character);\n      }\n    }\n\n    return result;\n  }\n\n  toString(indices, maxThreshold) {\n    return this.toCharacters(indices, maxThreshold).join('');\n  }\n\n  addInputOutput() {\n    this.addSpecial('stop-input');\n    this.addSpecial('start-output');\n  }\n\n  addUnrecognized() {\n    this.addSpecial('unrecognized');\n  }\n\n  static fromAllPrintable(maxThreshold, values = ['\\n']) {\n    for (let i = 32; i <= 126; i++) {\n      values.push(String.fromCharCode(i));\n    }\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromAllPrintableInputOutput(maxThreshold, values = ['\\n']) {\n    const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromStringInputOutput(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string));\n    const dataFormatter = new DataFormatter(values, maxThreshold);\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromArrayInputOutput(array, maxThreshold) {\n    const dataFormatter = new DataFormatter(\n      array.filter((v, i, a) => a.indexOf(v) === i),\n      maxThreshold\n    );\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromString(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string));\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromJSON(json) {\n    const dataFormatter = new DataFormatter();\n    dataFormatter.indexTable = json.indexTable;\n    dataFormatter.characterTable = json.characterTable;\n    dataFormatter.values = json.values;\n    dataFormatter.characters = json.characters;\n    dataFormatter.specialIndexes = json.specialIndexes;\n    return dataFormatter;\n  }\n\n  addSpecial(special, character = null) {\n    let specialIndex = this.indexTable[special] = this.characters.length;\n    this.characterTable[specialIndex] = character;\n    this.specialIndexes.push(this.characters.length);\n    this.characters.push(special);\n  }\n\n  countSpecial(output) {\n    let sum = 0;\n    for (let i = 0; i < this.specialIndexes; i++) {\n      let index = -1;\n      while (index = output.indexOf(this.specialIndexes[i], index) > -1) {\n        sum++;\n      }\n    }\n    return sum;\n  }\n\n  toFunctionString() {\n    return `\nvar characterTable = ${ JSON.stringify(this.characterTable) };\nvar indexTable = ${ JSON.stringify(this.indexTable) };\nvar characters = ${ JSON.stringify(this.characters) };\nvar dataFormatter = {\n  ${ this.toIndexes.toString() },\n  ${ this.toIndexesInputOutput.toString() },\n  ${ this.toCharacters.toString() }\n};`;\n  }\n}\n\nmodule.exports = DataFormatter;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst Equation = require('./matrix/equation');\nconst sampleI = require('./matrix/sample-i');\nconst maxI = require('./matrix/max-i');\nconst softmax = require('./matrix/softmax');\nconst copy = require('./matrix/copy');\nconst { randomFloat } = require('../utilities/random');\nconst zeros = require('../utilities/zeros');\nconst DataFormatter = require('../utilities/data-formatter');\nconst NeuralNetwork = require('../neural-network');\n\nclass RNN {\n  constructor(options = {}) {\n    const { defaults } = this.constructor;\n\n    Object.assign(this, defaults, options);\n    this.trainOpts = {};\n    this.updateTrainingOptions(Object.assign({}, this.constructor.trainDefaults, options));\n\n    this.stepCache = {};\n    this.runs = 0;\n    this.ratioClipped = null;\n    this.model = null;\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  initialize() {\n    this.model = {\n      input: null,\n      hiddenLayers: [],\n      output: null,\n      equations: [],\n      allMatrices: [],\n      equationConnections: [],\n      outputConnector: null,\n    };\n\n    if (this.dataFormatter) {\n      this.inputSize =\n      this.inputRange =\n      this.outputSize = this.dataFormatter.characters.length;\n    }\n    this.mapModel();\n  }\n\n  createHiddenLayers() {\n    //0 is end, so add 1 to offset\n    this.model.hiddenLayers.push(this.constructor.getModel(this.hiddenLayers[0], this.inputSize));\n    let prevSize = this.hiddenLayers[0];\n\n    for (let d = 1; d < this.hiddenLayers.length; d++) { // loop over depths\n      let hiddenSize = this.hiddenLayers[d];\n      this.model.hiddenLayers.push(this.constructor.getModel(hiddenSize, prevSize));\n      prevSize = hiddenSize;\n    }\n  }\n\n  /**\n   *\n   * @param {Number} hiddenSize\n   * @param {Number} prevSize\n   * @returns {object}\n   */\n  static getModel(hiddenSize, prevSize) {\n    return {\n      //wxh\n      weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      //whh\n      transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      //bhh\n      bias: new Matrix(hiddenSize, 1)\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const relu = equation.relu.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n\n    return relu(\n      add(\n        add(\n          multiply(\n            hiddenLayer.weight,\n            inputMatrix\n          ),\n          multiply(\n            hiddenLayer.transition,\n            previousResult\n          )\n        ),\n        hiddenLayer.bias\n      )\n    );\n  }\n\n  createInputMatrix() {\n    // 0 is end, so add 1 to offset\n    this.model.input = new RandomMatrix(\n      this.inputRange + 1,\n      this.inputSize,\n      0.08\n    );\n  }\n\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    // 0 is end, so add 1 to offset\n    // whd\n    model.outputConnector = new RandomMatrix(\n      outputSize + 1,\n      lastHiddenSize,\n      0.08\n    );\n    // 0 is end, so add 1 to offset\n    // bd\n    model.output = new Matrix(outputSize + 1, 1);\n  }\n\n  bindEquation() {\n    const model = this.model;\n    const equation = new Equation();\n    const outputs = [];\n    const equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.constructor.getEquation(equation, equation.inputMatrixToRow(model.input), equationConnection[0], model.hiddenLayers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = this.hiddenLayers.length; i < max; i++) {\n      output = this.constructor.getEquation(equation, output, equationConnection[i], model.hiddenLayers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    const model = this.model;\n    const hiddenLayers = model.hiddenLayers;\n    const allMatrices = model.allMatrices;\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n\n    this.createInputMatrix();\n    if (!model.input) throw new Error('net.model.input not set');\n    allMatrices.push(model.input);\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      let hiddenMatrix = hiddenLayers[i];\n      for (let property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  /**\n   *\n   * @param {Number[]|string[]|string} input\n   * @param {boolean} [logErrorRate]\n   * @returns {number}\n   */\n  trainPattern(input, logErrorRate) {\n    const error = this.trainInput(input);\n    this.backpropagate(input);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n  }\n\n  /**\n   *\n   * @param {Number[]} input\n   * @returns {number}\n   */\n  trainInput(input) {\n    this.runs++;\n    let model = this.model;\n    let max = input.length;\n    let log2ppl = 0;\n    let equation;\n    while (model.equations.length <= input.length + 1) {//last is zero\n      this.bindEquation();\n    }\n    for (let inputIndex = -1, inputMax = input.length; inputIndex < inputMax; inputIndex++) {\n      // start and end tokens are zeros\n      let equationIndex = inputIndex + 1;\n      equation = model.equations[equationIndex];\n\n      let source = (inputIndex === -1 ? 0 : input[inputIndex] + 1); // first step: start with START token\n      let target = (inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1); // last step: end with END token\n      log2ppl += equation.predictTargetIndex(source, target);\n    }\n    return Math.pow(2, log2ppl / (max - 1)) / 100;\n  }\n\n  /**\n   * @param {Number[]} input\n   */\n  backpropagate(input) {\n    let i = input.length;\n    let model = this.model;\n    let equations = model.equations;\n    while(i > 0) {\n      equations[i].backpropagateIndex(input[i - 1] + 1);\n      i--;\n    }\n    equations[0].backpropagateIndex(0);\n  }\n\n  adjustWeights() {\n    const { regc, clipval, model, decayRate, stepCache, smoothEps, trainOpts } = this;\n    const { learningRate } = trainOpts;\n    const { allMatrices } = model;\n    let numClipped = 0;\n    let numTot = 0;\n    for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n      const matrix = allMatrices[matrixIndex];\n      const { weights, deltas }  = matrix;\n      if (!(matrixIndex in stepCache)) {\n        stepCache[matrixIndex] = zeros(matrix.rows * matrix.columns);\n      }\n      const cache = stepCache[matrixIndex];\n      for (let i = 0; i < weights.length; i++) {\n        let r = deltas[i];\n        const w = weights[i];\n        // rmsprop adaptive learning rate\n        cache[i] = cache[i] * decayRate + (1 - decayRate) * r * r;\n        // gradient clip\n        if (r > clipval) {\n          r = clipval;\n          numClipped++;\n        }\n        if (r < -clipval) {\n          r = -clipval;\n          numClipped++;\n        }\n        numTot++;\n        // update (and regularize)\n        weights[i] = w + -learningRate * r / Math.sqrt(cache[i] + smoothEps) - regc * w;\n      }\n    }\n    this.ratioClipped = numClipped / numTot;\n  }\n\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable(){\n    if (this.model.equations.length === 0) {\n      console.error(`No equations bound, did you run train()?`);\n      return false;\n    }\n\n    return true;\n  }\n\n\n  /**\n   *\n   * @param {Number[]|*} [rawInput]\n   * @param {Boolean} [isSampleI]\n   * @param {Number} temperature\n   * @returns {*}\n   */\n  run(rawInput = [], isSampleI = false, temperature = 1) {\n    const maxPredictionLength = this.maxPredictionLength + rawInput.length + (this.dataFormatter ? this.dataFormatter.specialIndexes.length : 0);\n    if (!this.isRunnable) return null;\n    const input = this.formatDataIn(rawInput);\n    const model = this.model;\n    const output = [];\n    let i = 0;\n    while (true) {\n      let previousIndex = (i === 0\n        ? 0\n        : i < input.length\n          ? input[i - 1] + 1\n          : output[i - 1])\n          ;\n      while (model.equations.length <= i) {\n        this.bindEquation();\n      }\n      let equation = model.equations[i];\n      // sample predicted letter\n      let outputMatrix = equation.runIndex(previousIndex);\n      let logProbabilities = new Matrix(model.output.rows, model.output.columns);\n      copy(logProbabilities, outputMatrix);\n      if (temperature !== 1 && isSampleI) {\n        /**\n         * scale log probabilities by temperature and re-normalize\n         * if temperature is high, logProbabilities will go towards zero\n         * and the softmax outputs will be more diffuse. if temperature is\n         * very low, the softmax outputs will be more peaky\n         */\n        for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\n          logProbabilities.weights[j] /= temperature;\n        }\n      }\n\n      let probs = softmax(logProbabilities);\n      let nextIndex = (isSampleI ? sampleI(probs) : maxI(probs));\n\n      i++;\n      if (nextIndex === 0) {\n        // END token predicted, break out\n        break;\n      }\n      if (i >= maxPredictionLength) {\n        // something is wrong\n        break;\n      }\n\n      output.push(nextIndex);\n    }\n\n    /**\n     * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\n     * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\n     * locks in on a value.\n     * Kind of like this, values are from input:\n     * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\n     * 2 -> 2 (oh how interesting, I've narrowed down values...)\n     * 1 -> 9 (oh how interesting, I've now know what the values are...)\n     * then the output looks like: [4, 2, 9,...]\n     * so we then remove the erroneous data to get our true output\n     */\n    return this.formatDataOut(\n      input,\n      output\n        .slice(input.length)\n        .map(value => value - 1)\n    );\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initilaized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (!this.model) {\n      this.initialize();\n    }\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options) {\n    Object.keys(this.constructor.trainDefaults).forEach(p => this.trainOpts[p] = (options.hasOwnProperty(p)) ? options[p] : this.trainOpts[p]);\n    this.validateTrainingOptions(this.trainOpts);\n    this.setLogMethod(options.log || this.trainOpts.log);\n    this.activation = options.activation || this.activation;\n  }\n\n  validateTrainingOptions(options) {\n    NeuralNetwork.prototype.validateTrainingOptions.call(this, options);\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  setLogMethod(log) {\n    if (typeof log === 'function'){\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return {object} { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0\n    };\n\n    this.verifyIsInitialized(data);\n\n    return {\n      data,\n      status,\n      endTime\n    };\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    this.trainOpts = options = Object.assign({}, this.constructor.trainDefaults, options);\n    let iterations = options.iterations;\n    let errorThresh = options.errorThresh;\n    let log = options.log === true ? console.log : options.log;\n    let logPeriod = options.logPeriod;\n    let callback = options.callback;\n    let callbackPeriod = options.callbackPeriod;\n    let error = Infinity;\n    let i;\n\n    if (this.hasOwnProperty('setupData')) {\n      data = this.setupData(data);\n    }\n\n    this.verifyIsInitialized();\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        const err = this.trainPattern(data[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n      if (log && (i % logPeriod === 0)) {\n        log(`iterations: ${ i }, training error: ${ error }`);\n      }\n      if (callback && (i % callbackPeriod === 0)) {\n        callback({ error: error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  addFormat() {\n    throw new Error('not yet implemented');\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const defaults = this.constructor.defaults;\n    if (!this.model) {\n      this.initialize();\n    }\n    let model = this.model;\n    let options = {};\n    for (let p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options,\n      input: model.input.toJSON(),\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        let layers = {};\n        for (let p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n    };\n  }\n\n  fromJSON(json) {\n    const defaults = this.constructor.defaults;\n    const options = json.options;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const input = Matrix.fromJSON(json.input);\n    allMatrices.push(input);\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      let layers = {};\n      for (let p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    if (options.dataFormatter) {\n      this.dataFormatter = DataFormatter.fromJSON(options.dataFormatter);\n    }\n\n    this.model = {\n      input,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n    this.bindEquation();\n  }\n\n  /**\n   * @param {Function} [cb]\n   * @returns {Function}\n   */\n  toFunction(cb) {\n    let model = this.model;\n    let equations = this.model.equations;\n    let equation = equations[1];\n    let states = equation.states;\n    let jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          if (j > -1 && (m === state.left || m === state.right)) {\n            return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n          } else {\n            return `new Matrix(${m.rows}, ${m.columns})`;\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n\n      if (m === model.input) return `json.input`;\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }': //compiled from ${ fileName(fnName) }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  var json = ${ jsonString };\n  ${ this.dataFormatter ? `${this.dataFormatter.toFunctionString()};\n  Object.assign(dataFormatter, json.options.dataFormatter);` : '' }\n  ${this.dataFormatter && typeof this.formatDataIn === 'function'\n      ? `const formatDataIn = function (input, output) { ${\n        toInner(this.formatDataIn.toString())\n      } }.bind({ dataFormatter });`\n      : ''}\n  ${this.dataFormatter !== null && typeof this.formatDataOut === 'function'\n      ? `const formatDataOut = function formatDataOut(input, output) { ${\n        toInner(this.formatDataOut.toString())\n      } }.bind({ dataFormatter });`\n      : ''}\n  var input = ${\n      (this.dataFormatter && typeof this.formatDataIn === 'function')\n        ? 'formatDataIn(rawInput)' \n        : 'rawInput'\n    };\n  var maxPredictionLength = input.length + ${ this.maxPredictionLength };\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      var state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n    \n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n    \n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  ${ (this.dataFormatter && typeof this.formatDataOut === 'function') \n      ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))'\n      : 'return output.slice(input.length).map(function(value) { return value - 1; })' };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ zeros.toString() }\n  ${ softmax.toString() }\n  ${ randomFloat.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`;\n    return new Function('rawInput', 'isSampleI', 'temperature', cb ? cb(src) : src);\n  }\n}\n\nRNN.defaults = {\n  inputSize: 20,\n  inputRange: 20,\n  hiddenLayers: [20,20],\n  outputSize: 20,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5,\n  maxPredictionLength: 100,\n  /**\n   *\n   * @param {*[]} data\n   * @returns {Number[]}\n   */\n  setupData: function(data) {\n    if (\n      typeof data[0] !== 'string'\n      && !Array.isArray(data[0])\n      && (\n        !data[0].hasOwnProperty('input')\n        || !data[0].hasOwnProperty('output')\n      )\n    ) {\n      return data;\n    }\n    let values = [];\n    const result = [];\n    if (typeof data[0] === 'string' || Array.isArray(data[0])) {\n      if (!this.dataFormatter) {\n        for (let i = 0; i < data.length; i++) {\n          values.push(data[i]);\n        }\n        this.dataFormatter = new DataFormatter(values);\n        this.dataFormatter.addUnrecognized();\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(this.formatDataIn(data[i]));\n      }\n    } else {\n      if (!this.dataFormatter) {\n        for (let i = 0; i < data.length; i++) {\n          values.push(data[i].input);\n          values.push(data[i].output);\n        }\n        this.dataFormatter = DataFormatter.fromArrayInputOutput(values);\n        this.dataFormatter.addUnrecognized();\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(this.formatDataIn(data[i].input, data[i].output));\n      }\n    }\n    return result;\n  },\n  /**\n   *\n   * @param {*[]} input\n   * @param {*[]} output\n   * @returns {Number[]}\n   */\n  formatDataIn: function(input, output = null) {\n    if (this.dataFormatter) {\n      if (this.dataFormatter.indexTable.hasOwnProperty('stop-input')) {\n        return this.dataFormatter.toIndexesInputOutput(input, output);\n      } else {\n        return this.dataFormatter.toIndexes(input);\n      }\n    }\n    return input;\n  },\n  /**\n   *\n   * @param {Number[]} input\n   * @param {Number[]} output\n   * @returns {*}\n   */\n  formatDataOut: function(input, output) {\n    if (this.dataFormatter) {\n      return this.dataFormatter\n        .toCharacters(output)\n        .join('');\n    }\n    return output;\n  },\n  dataFormatter: null\n};\n\nRNN.trainDefaults = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.01,\n  callback: null,\n  callbackPeriod: 10\n};\n\nmodule.exports = RNN;\n","function ArrayLookupTable(data, prop) {\n  this.length = 0;\n  this.prop = prop;\n  const table = this.table = {};\n  for (let i = 0; i < data.length; i++) {\n    const datum = data[i];\n    const input = datum[prop];\n    for (let j = 0; j < input.length; j++) {\n      for (let p in input[j]) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  }\n}\n\nmodule.exports = ArrayLookupTable;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst Equation = require('./matrix/equation');\nconst RNN = require('./rnn');\nconst zeros = require('../utilities/zeros');\nconst softmax = require('./matrix/softmax');\nconst {randomFloat} = require('../utilities/random');\nconst sampleI = require('./matrix/sample-i');\nconst maxI = require('./matrix/max-i');\nconst lookup = require(\"../lookup\");\nconst LookupTable = require('../utilities/lookup-table');\nconst ArrayLookupTable = require('../utilities/array-lookup-table');\nconst {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array } = require('../utilities/cast');\n\nclass RNNTimeStep extends RNN {\n  // eslint-disable-next-line\n  constructor(options) {\n    super(options);\n  }\n\n  createInputMatrix() {}\n\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    //whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    //bd\n    model.output = new RandomMatrix(outputSize, 1, 0.08);\n  }\n\n  bindEquation() {\n    let model = this.model;\n    let hiddenLayers = this.hiddenLayers;\n    let layers = model.hiddenLayers;\n    let equation = new Equation();\n    let outputs = [];\n    let equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.constructor.getEquation(equation, equation.input(new Matrix(this.inputSize, 1)), equationConnection[0], layers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.constructor.getEquation(equation, output, equationConnection[i], layers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    let model = this.model;\n    let hiddenLayers = model.hiddenLayers;\n    let allMatrices = model.allMatrices;\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      let hiddenMatrix = hiddenLayers[i];\n      for (let property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  backpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n\n  /**\n   *\n   * @param {number[]|number[][]|object|object[][]} [rawInput]\n   * @returns {number[]|number|object|object[]|object[][]}\n   */\n  run(rawInput) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.run = this.runObject;\n        return this.runObject(rawInput);\n      }\n      this.run = this.runNumbers;\n      return this.runNumbers(rawInput);\n    }\n    if (this.outputLookup) {\n      this.run = this.runObjects;\n      return this.runObjects(rawInput);\n    }\n    this.run = this.runArrays;\n    return this.runArrays(rawInput);\n  }\n\n  forecast(input, count) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.forecast = this.runObject;\n        return this.runObject(input);\n      }\n      this.forecast = this.forecastNumbers;\n      return this.forecastNumbers(input, count);\n    }\n    if (this.outputLookup) {\n      this.forecast = this.forecastObjects;\n      return this.forecastObjects(input, count);\n    }\n    this.forecast = this.forecastArrays;\n    return this.forecastArrays(input, count);\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    this.trainOpts = options = Object.assign({}, this.constructor.trainDefaults, options);\n    const iterations = options.iterations;\n    const errorThresh = options.errorThresh;\n    const log = options.log === true ? console.log : options.log;\n    const logPeriod = options.logPeriod;\n    const callback = options.callback;\n    const callbackPeriod = options.callbackPeriod;\n\n    if (this.inputSize === 1 || !this.inputSize) {\n      this.setSize(data);\n    }\n\n    data = this.formatData(data);\n    let error = Infinity;\n    let i;\n\n    this.verifyIsInitialized(data);\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        const err = this.trainPattern(data[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n      if (log && (i % logPeriod === 0)) {\n        log(`iterations: ${ i }, training error: ${ error }`);\n      }\n      if (callback && (i % callbackPeriod === 0)) {\n        callback({ error: error, iterations: i });\n      }\n    }\n\n    return {\n      error: error,\n      iterations: i\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (data[0].input) {\n      this.trainInput = this.trainInputOutput;\n    } else if (data[0].length > 0) {\n      if (data[0][0].length > 0) {\n        this.trainInput = this.trainArrays;\n      } else {\n        if (this.inputSize > 1) {\n          this.trainInput = this.trainArrays;\n        } else {\n          this.trainInput = this.trainNumbers;\n        }\n      }\n    }\n\n    if (!this.model) {\n      this.initialize();\n    }\n  }\n\n  setSize(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    switch(dataShape) {\n      case 'array,array,number':\n      case 'array,object,number':\n      case 'array,datum,array,number':\n      case 'array,datum,object,number':\n        // probably 1\n        break;\n      case 'array,array,array,number':\n        this.inputSize = this.outputSize = data[0][0].length;\n        break;\n      case 'array,array,object,number':\n        this.inputSize = this.outputSize = Object.keys(lookup.toTable2D(data)).length;\n        break;\n      case 'array,datum,array,array,number':\n        this.inputSize = this.outputSize = data[0].input[0].length;\n        break;\n      case 'array,datum,array,object,number':\n        this.inputSize = Object.keys(lookup.toInputTable2D(data)).length;\n        this.outputSize = Object.keys(lookup.toOutputTable2D(data)).length;\n        break;\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  trainNumbers(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget([input[i]], [input[i + 1]]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runNumbers(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput([input[i]]);\n    }\n    this.end();\n    return lastOutput.weights[0];\n  }\n\n  forecastNumbers(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput([input[i]]);\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return result;\n  }\n\n  runObject(input) {\n    if (this.inputLookup === this.outputLookup) {\n      const inputArray = lookup.toArrayShort(this.inputLookup, input);\n      return lookup.toObjectPartial(\n        this.outputLookup,\n        this.forecastNumbers(inputArray, this.outputLookupLength - inputArray.length),\n        inputArray.length);\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.forecastNumbers(\n        lookup.toArray(this.inputLookup, input, this.inputLookupLength),\n        this.outputLookupLength\n      )\n    );\n  }\n\n  runObjects(input) {\n    input = input.map(value => lookup.toArray(this.inputLookup, value, this.inputLookupLength));\n    return this.forecastArrays(input, 1).map(value => lookup.toObject(this.outputLookup, value))[0];\n  }\n\n  forecastObjects(input, count) {\n    input = input.map(value => lookup.toArray(this.inputLookup, value, this.inputLookupLength));\n    return this.forecastArrays(input, count).map(value => lookup.toObject(this.outputLookup, value));\n  }\n\n  trainInputOutput(object) {\n    const model = this.model;\n    const input = object.input;\n    const output = object.output;\n    const totalSize = input.length + output.length;\n    const equations = model.equations;\n    while (equations.length < totalSize) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    let equationIndex = 0;\n    for (let inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(input[inputIndex], input[inputIndex + 1]);\n    }\n    errorSum += equations[equationIndex++].predictTarget(input[input.length - 1], output[0]);\n    for (let outputIndex = 0, max = output.length - 1; outputIndex < max; outputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(output[outputIndex], output[outputIndex + 1]);\n    }\n    this.end();\n    return errorSum / totalSize;\n  }\n\n  trainArrays(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runArrays(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    if (this.inputLookup) {\n      input = lookup.toArrays(this.inputLookup, input, this.inputLookupLength);\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      let outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    if (this.outputLookup) {\n      return lookup.toObject(this.outputLookup, lastOutput);\n    }\n    return lastOutput;\n  }\n\n  forecastArrays(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    const result = [lastOutput.weights];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights.slice(0));\n    }\n    this.end();\n    return result;\n  }\n\n  end() {\n    this.model.equations[this.model.equations.length - 1].runInput(new Float32Array(this.outputSize));\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    const result = [];\n    switch (dataShape) {\n      case 'array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from([data[i]]));\n        }\n        return [result];\n      }\n      case 'array,array,number': {\n        if (this.inputSize === 1 && this.outputSize === 1) {\n          for (let i = 0; i < data.length; i++) {\n            result.push(arrayToFloat32Arrays(data[i]));\n          }\n          return result;\n        }\n        if (this.inputSize !== data[0].length) {\n          throw new Error('inputSize must match data input size');\n        }\n        if (this.outputSize !== data[0].length) {\n          throw new Error('outputSize must match data input size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from(data[i]));\n        }\n        return [result];\n      }\n      case 'array,object,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        if (!this.inputLookup) {\n          const lookupTable = new LookupTable(data);\n          this.inputLookup = this.outputLookup = lookupTable.table;\n          this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(objectToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      case 'array,datum,array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: arrayToFloat32Arrays(datum.input),\n            output: arrayToFloat32Arrays(datum.output)\n          });\n        }\n        return result;\n      }\n      case 'array,datum,object,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        if (!this.inputLookup) {\n          const inputLookup = new LookupTable(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n        if (!this.outputLookup) {\n          const outputLookup = new LookupTable(data, 'output');\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectToFloat32Arrays(datum.input),\n            output: objectToFloat32Arrays(datum.output)\n          });\n        }\n        return result;\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < data.length; i++) {\n          result.push(arraysToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      case 'array,array,object,number': {\n        if (!this.inputLookup) {\n          const lookupTable = new LookupTable(data);\n          this.inputLookup = this.outputLookup = lookupTable.table;\n          this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const array = [];\n          for (let j = 0; j < data[i].length; j++) {\n            array.push(objectToFloat32Array(data[i][j], this.inputLookup, this.inputLookupLength));\n          }\n          result.push(array);\n        }\n        return result;\n      }\n      case 'array,datum,array,array,number': {\n        if (this.inputSize === 1 && this.outputSize === 1) {\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: Float32Array.from(datum.input),\n              output: Float32Array.from(datum.output)\n            });\n          }\n        } else {\n          if (this.inputSize !== data[0].input[0].length) {\n            throw new Error('inputSize must match data input size');\n          }\n          if (this.outputSize !== data[0].output[0].length) {\n            throw new Error('outputSize must match data output size');\n          }\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: arraysToFloat32Arrays(datum.input),\n              output: arraysToFloat32Arrays(datum.output)\n            });\n          }\n        }\n        return result;\n      }\n      case 'array,datum,array,object,number': {\n        if (!this.inputLookup) {\n          const inputLookup = new ArrayLookupTable(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n        if (!this.outputLookup) {\n          const outputLookup = new ArrayLookupTable(data, 'output');\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectsToFloat32Arrays(datum.input, this.inputLookup, this.inputLookupLength),\n            output: objectsToFloat32Arrays(datum.output, this.outputLookup, this.outputLookupLength)\n          });\n        }\n        return result;\n      }\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(data) {\n    const formattedData = this.formatData(data);\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,array,number': {\n        if (this.inputSize === 1) {\n          for (let i = 0; i < formattedData.length; i++) {\n            const input = formattedData[i];\n            const output = this.run(input.splice(0, input.length - 1));\n            const target = input[input.length - 1][0];\n            const error = target - output;\n            const errorMSE = error * error;\n            errorSum += errorMSE;\n            const errorsAbs = Math.abs(errorMSE);\n            if (errorsAbs > this.trainOpts.errorThresh) {\n              const misclass = data[i];\n              Object.assign(misclass, {\n                value: input,\n                actual: output\n              });\n              misclasses.push(misclass);\n            }\n          }\n          break;\n        }\n        throw new Error('unknown data shape or configuration');\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.splice(0, input.length - 1));\n          const target = input[input.length - 1];\n          let errors = 0;\n          let errorCount = 0;\n          for (let j = 0; j < output.length; j++) {\n            errorCount++;\n            const error = target[j] - output[j];\n            // mse\n            errors += error * error;\n          }\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,object,number':\n      {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(lookup.toObjectPartial(this.outputLookup, input, 0, input.length - 1));\n          const target = input[input.length - 1];\n          let errors = 0;\n          let p;\n          for (p in output) {}\n          const error = target[i] - output[p];\n          // mse\n          errors += error * error;\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.slice(0, input.length - 1));\n          const target = data[i][input.length - 1];\n          let errors = 0;\n          let errorCount = 0;\n          for (const p in output) {\n            const error = target[p] - output[p];\n            // mse\n            errors += error * error;\n            errorCount++;\n          }\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,number':\n      case 'array,datum,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          let errorCount = 0;\n          for (let j = 0; j < output.length; j++) {\n            const error = datum.output[j][0] - output[j];\n            errors += error * error;\n            errorCount++;\n          }\n\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            Object.assign(misclass, {\n              actual: this.outputLookup\n                ? lookup.toObject(this.outputLookup, output)\n                : output\n            });\n            misclasses.push(misclass);\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (let k = 0; k < output[j].length; k++) {\n              const error = datum.output[j][k] - output[j][k];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (const p in output[j]) {\n              const error = data[i].output[j][p] - output[j][p];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      default: throw new Error('unknown data shape or configuration');\n    }\n\n    return {\n      error: errorSum / formattedData.length,\n      misclasses: misclasses,\n      total: formattedData.length\n    };\n  }\n\n  addFormat(value) {\n    const dataShape = lookup.dataShape(value).join(',');\n    switch(dataShape) {\n      case 'array,array,number':\n      case 'datum,array,array,number':\n      case 'array,number':\n      case 'datum,array,number':\n        return;\n      case 'datum,object,number': {\n        this.inputLookup = lookup.addKeys(value.input, this.inputLookup);\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        this.outputLookup = lookup.addKeys(value.output, this.outputLookup);\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        }\n        break;\n      }\n      case 'object,number': {\n        this.inputLookup = this.outputLookup = lookup.addKeys(value, this.inputLookup);\n        if (this.inputLookup) {\n          this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        break;\n      }\n      case 'array,object,number': {\n        for (let i = 0; i < value.length; i++) {\n          this.inputLookup = this.outputLookup = lookup.addKeys(value[i], this.inputLookup);\n          if (this.inputLookup) {\n            this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        break;\n      }\n      case 'datum,array,object,number': {\n        for (let i = 0; i < value.input.length; i++) {\n          this.inputLookup = lookup.addKeys(value.input[i], this.inputLookup);\n          if (this.inputLookup) {\n            this.inputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        for (let i = 0; i < value.output.length; i++) {\n          this.outputLookup = lookup.addKeys(value.output[i], this.outputLookup);\n          if (this.outputLookup) {\n            this.outputLookupLength = Object.keys(this.outputLookup).length;\n          }\n        }\n        break;\n      }\n\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const defaults = this.constructor.defaults;\n    if (!this.model) {\n      this.initialize();\n    }\n    let model = this.model;\n    let options = {};\n    for (let p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options: options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        let layers = {};\n        for (let p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n      inputLookup: this.inputLookup,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup,\n      outputLookupLength: this.outputLookupLength,\n    };\n  }\n\n  fromJSON(json) {\n    const defaults = this.constructor.defaults;\n    const options = json.options;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      let layers = {};\n      for (let p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    this.inputLookup = json.inputLookup;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup;\n    this.outputLookupLength = json.outputLookupLength;\n\n    this.model = {\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n    this.bindEquation();\n  }\n\n  /**\n   * @param {Function} [cb]\n   * @returns {Function}\n   */\n  toFunction(cb) {\n    const model = this.model;\n    const equations = this.model.equations;\n    const inputSize = this.inputSize;\n    const inputLookup = this.inputLookup;\n    const inputLookupLength = this.inputLookupLength;\n    const outputLookup = this.outputLookup;\n    const outputLookupLength = this.outputLookupLength;\n    const equation = equations[1];\n    const states = equation.states;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.product:\n              return `new Matrix(${ m.rows }, ${ m.columns })`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupInput(input) {\n            var table = ${ JSON.stringify(inputLookup) };\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n        }\n        return `function lookupInput(input) {\n          var table = ${ JSON.stringify(inputLookup) };\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(rawInputs) {\n        var table = ${ JSON.stringify(inputLookup) };\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${ inputLookupLength });\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupOutputPartial(output, input) {\n            var table = ${ JSON.stringify(outputLookup) };\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n        }\n        return `function lookupOutput(output) {\n          var table = ${ JSON.stringify(outputLookup) };\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n      }\n      return `function lookupOutput(output) {\n        var table = ${ JSON.stringify(outputLookup) };\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace(\n          'product.weights = input.weights = this.inputValue;',\n          inputLookup && inputSize === 1\n            ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;'\n            : inputSize === 1\n              ? 'product.weights = [input[_i]];'\n              : 'product.weights = input[_i];')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }':${ fnName !== 'forwardFn' ? ` //compiled from ${ fileName(fnName) }` : '' }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const forceForecast = this.inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${ this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput' };\n  var json = ${ jsonString };\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${\n      forceForecast\n        ? inputLookup === outputLookup\n          ? inputLookupLength\n          : `input.length + ${ outputLookupLength - 1 }`\n        : 'input.length' };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      \n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n    ${ inputSize === 1 && inputLookup ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }' : 'output = state.product.weights;' }\n  }\n  ${\n    outputLookup\n      ? outputLookup === inputLookup\n        ? 'return lookupOutputPartial(output, input)'\n        : 'return lookupOutput(output)'\n      : inputSize === 1\n        ? 'return output[0]'\n        : 'return output'\n  };\n  ${ formatInputData() }\n  ${ formatOutputData() }\n  \n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ zeros.toString() }\n  ${ softmax.toString().replace('_2.default', 'Matrix') }\n  ${ randomFloat.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`;\n    return new Function('rawInput', cb ? cb(src) : src);\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenLayers: [20],\n  outputSize: 1,\n  learningRate: RNN.defaults.learningRate,\n  decayRate: RNN.defaults.decayRate,\n  smoothEps: RNN.defaults.smoothEps,\n  regc: RNN.defaults.regc,\n  clipval: RNN.defaults.clipval\n};\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults;\n\nmodule.exports = RNNTimeStep;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst RNN = require('./rnn');\n\nclass LSTM extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // gates parameters\n      // wix\n      inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wih\n      inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bi\n      inputBias: new Matrix(hiddenSize, 1),\n      // wfx\n      forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wfh\n      forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bf\n      forgetBias: new Matrix(hiddenSize, 1),\n      // wox\n      outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // woh\n      outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bo\n      outputBias: new Matrix(hiddenSize, 1),\n      // cell write params\n      // wcx\n      cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wch\n      cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellActivationBias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n\n    const inputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.inputMatrix, inputMatrix),\n          multiply(hiddenLayer.inputHidden, previousResult)\n        ),\n        hiddenLayer.inputBias\n      )\n    );\n\n    const forgetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.forgetMatrix, inputMatrix),\n          multiply(hiddenLayer.forgetHidden, previousResult)\n        ),\n        hiddenLayer.forgetBias\n      )\n    );\n\n    // output gate\n    const outputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.outputMatrix, inputMatrix),\n          multiply(hiddenLayer.outputHidden, previousResult)\n        ),\n        hiddenLayer.outputBias\n      )\n    );\n\n    // write operation on cells\n    const cellWrite = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellActivationMatrix, inputMatrix),\n          multiply(hiddenLayer.cellActivationHidden, previousResult)\n        ),\n        hiddenLayer.cellActivationBias\n      )\n    );\n\n    // compute new cell activation\n    const retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\n    const writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\n    const cell = add(retainCell, writeCell); // new cell contents\n\n    // compute hidden state as gated, saturated cell activations\n    return multiplyElement(outputGate, tanh(cell));\n  }\n}\n\nmodule.exports = LSTM;\n","const Matrix = require('./matrix');\nconst LSTM = require('./lstm');\nconst RNNTimeStep = require('./rnn-time-step');\n\nclass LSTMTimeStep extends RNNTimeStep {\n  static getModel(hiddenSize, prevSize) {\n    return LSTM.getModel.call(this, hiddenSize, prevSize);\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return LSTM.getEquation.call(\n      this,\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    );\n  }\n}\n\nmodule.exports = LSTMTimeStep;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst RNN = require('./rnn');\n\nclass GRU extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // update Gate\n      // wzxh\n      updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wzhh\n      updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bz\n      updateGateBias: new Matrix(hiddenSize, 1),\n      // reset Gate\n      // wrxh\n      resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wrhh\n      resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // br\n      resetGateBias: new Matrix(hiddenSize, 1),\n      // cell write parameters\n      // wcxh\n      cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wchh\n      cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellWriteBias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n    const allOnes = equation.allOnes.bind(equation);\n    const cloneNegative = equation.cloneNegative.bind(equation);\n\n    // update gate\n    const updateGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.updateGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.updateGateBias\n      )\n    );\n\n    // reset gate\n    const resetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.resetGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.resetGateBias\n      )\n    );\n\n    // cell\n    const cell = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix),\n          multiply(\n            hiddenLayer.cellWriteHiddenMatrix,\n            multiplyElement(resetGate, previousResult)\n          )\n        ),\n        hiddenLayer.cellWriteBias\n      )\n    );\n\n    // compute hidden state as gated, saturated cell activations\n    // negate updateGate\n    return add(\n      multiplyElement(\n        add(\n          allOnes(updateGate.rows, updateGate.columns),\n          cloneNegative(updateGate)\n        ),\n        cell\n      ),\n      multiplyElement(previousResult, updateGate)\n    );\n  }\n}\n\nmodule.exports = GRU;\n","// import Matrix from './matrix'\nconst GRU = require('./gru');\nconst RNNTimeStep = require('./rnn-time-step');\n\nclass GRUTimeStep extends RNNTimeStep {\n  static getModel(hiddenSize, prevSize) {\n    return GRU.getModel(hiddenSize, prevSize);\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return GRU.getEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    );\n  }\n}\n\nmodule.exports = GRUTimeStep;\n","const NeuralNetwork = require('../neural-network');\nconst RNN = require('../recurrent/rnn');\nconst RNNTimeStep = require('../recurrent/rnn-time-step');\nconst { FeedForward } = require('../feed-forward');\nconst { Recurrent } = require('../recurrent');\nconst { recurrentZeros } = require('../layer/recurrent-zeros');\n\nconst recurrentJSONTypes = [\n  'RNN',\n  'LSTM',\n  'GRU',\n  'RNNTimeStep',\n  'LSTMTimeStep',\n  'GRUTimeStep',\n  'Recurrent'\n];\n\nfunction drawInput({ pixelX, pixelY, radius, inputs, row, line, fontSize, fontClassName }) {\n  let svg = `<rect\n              x=\"${ pixelX / 2 - radius }\"\n              y=\"${ pixelY / 2 + row * pixelY - radius }\"\n              width=\"${ 2 * radius }\"\n              height=\"${ 2 * radius }\"\n              stroke=\"black\"\n              stroke-width=\"1\"\n              fill=\"${ inputs.color }\" \n              class=\"${ inputs.className }\" />\n            <line\n              x1=\"${ pixelX / 4 }\"\n              y1=\"${ pixelY / 2 + row * pixelY }\"\n              x2=\"${ pixelX / 2 - radius }\"\n              y2=\"${ pixelY / 2 + row * pixelY }\"\n              style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n              class=\"${ line.className }\" />`;\n  if (inputs.labels) {\n    svg += `<text\n              x=\"${ pixelX / 8 }\"\n              y=\"${ pixelY / 2 + row * pixelY - 5 }\"\n              fill=\"black\"\n              font-size=\"${ fontSize }\"\n              class=\"${ fontClassName }\">${ inputs.labels[row] }</text>`;\n  }\n  return svg;\n}\n\nfunction drawNeuron({ pixelX, pixelY, row, column, radius, hidden }) {\n  return `<circle\n            cx=\"${ pixelX / 2 + column * pixelX }\"\n            cy=\"${ pixelY / 2 + row * pixelY }\"\n            r=\"${ radius }\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${ hidden.color }\"\n            class=\"${ hidden.className }\" />`\n}\n\nfunction drawOutput({ pixelX, pixelY, row, column, line, outputs, radius }) {\n  return `<circle\n            cx=\"${ pixelX / 2 + column * pixelX }\"\n            cy=\"${ pixelY / 2 + row * pixelY }\"\n            r=\"${ radius }\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${ outputs.color }\"\n            class=\"${ outputs.className }\" />\n          <line\n            x1=\"${ pixelX / 2 + column * pixelX + radius }\"\n            y1=\"${ pixelY / 2 + row * pixelY }\"\n            x2=\"${ pixelX / 2 + column * pixelX + pixelX / 4 }\"\n            y2=\"${ pixelY / 2 + row * pixelY }\"\n            style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n            class=\"${ line.className }\" />`\n}\n\nfunction drawBackwardConnections({ pixelX, pixelY, row, column, radius, lineY, line, previousConnectionIndex }) {\n  return `<line\n            x1=\"${ pixelX / 2 + (column - 1) * pixelX + radius }\"\n            y1=\"${ lineY / 2 + previousConnectionIndex * lineY }\"\n            x2=\"${ pixelX / 2 + column * pixelX - radius }\"\n            y2=\"${ pixelY / 2 + row * pixelY }\"\n            style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n            class=\"${ line.className }\" />`;\n}\n\nfunction neuralNetworkToSVG(options) {\n  const { sizes, height, width } = options;\n  let svg = '';\n  const pixelX = width / sizes.length;\n  for (let column = 0; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      if (column === 0) {\n        svg += drawInput(Object.assign({ pixelX, pixelY, row, column }, options));\n      } else {\n        if (column === sizes.length - 1) {\n          svg += drawOutput(Object.assign({ pixelX, pixelY, row, column }, options));\n        } else {\n          svg += drawNeuron(Object.assign({ pixelX, pixelY, row, column }, options));\n        }\n        const previousSize = sizes[column - 1];\n        const lineY = height / previousSize;\n        for (let previousConnectionIndex = 0; previousConnectionIndex < previousSize; previousConnectionIndex++) {\n          svg += drawBackwardConnections(Object.assign({ pixelX, pixelY, row, column, lineY, previousConnectionIndex }, options));\n        }\n      }\n    }\n  }\n  return svg;\n}\n\nfunction rnnToSVG(options) {\n  const { width, height, recurrentLine, sizes, radius } = options;\n  const pixelX = width / sizes.length;\n  let svg = `<defs>\n              <marker id=\"arrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"8\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                <path d=\"M0,0 L0,6 L9,3 z\" fill=\"${ recurrentLine.color }\" />\n              </marker>\n            </defs>`;\n  svg += neuralNetworkToSVG(options);\n  for (let column = 1; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      svg += drawRecurrentConnections({ pixelX, pixelY, row, column, radius, recurrentLine });\n    }\n  }\n  return svg;\n\n  function drawRecurrentConnections({ pixelX, pixelY, row, column, radius, recurrentLine }) {\n    const moveX = (pixelX / 2 + column * pixelX + radius) + 1;\n    const moveY = pixelY / 2 + row * pixelY;\n    const x = (moveX - (radius * 2)) - 2;\n    const y = moveY;\n    const x1 = x + 100;\n    const y1 = y + 50;\n    const x2 = moveX - 100;\n    const y2 = moveY + 50;\n    return `<path\n              d=\"M ${ moveX } ${ moveY } C ${ x1 } ${ y1 }, ${ x2 } ${ y2 }, ${ x } ${ y }\"\n              stroke=\"${ recurrentLine.color }\"\n              stroke-width=\"${ recurrentLine.width }\"\n              fill=\"transparent\"\n              stroke-linecap=\"round\"\n              marker-end=\"url(#arrow)\"\n              class=\"${ recurrentLine.className }\" />`;\n  }\n}\n\nfunction getFeedForwardLayers(network) {\n  const inputLayer = network.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(network.hiddenLayers[0](inputLayer));\n  for (let i = 1; i < network.hiddenLayers.length; i++) {\n    hiddenLayers.push(network.hiddenLayers[i](hiddenLayers[i - 1]));\n  }\n  const outputLayer = network.outputLayer(hiddenLayers[hiddenLayers.length - 1]);\n  return {\n    inputLayer,\n    hiddenLayers,\n    outputLayer,\n    layerCount: 1 + hiddenLayers.length + 1\n  };\n}\n\nfunction getRecurrentLayers(network) {\n  const inputLayer = network.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(network.hiddenLayers[0](inputLayer, recurrentZeros(), 0));\n  for (let i = 1; i < network.hiddenLayers.length; i++) {\n    hiddenLayers.push(network.hiddenLayers[i](hiddenLayers[i - 1], recurrentZeros(), i));\n  }\n  const outputLayer = network.outputLayer(hiddenLayers[hiddenLayers.length - 1]);\n  return {\n    inputLayer,\n    hiddenLayers,\n    outputLayer,\n    layerCount: 1 + hiddenLayers.length + 1\n  };\n}\n\nfunction wrapSVG(svgBody, width, height) {\n  return `<svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\"\n            width=\"${ width }\"\n            height=\"${ height }\">${ svgBody }</svg>`;\n}\n\nfunction getSizes({sizes, inputSize, outputSize, hiddenLayers }) {\n  return (typeof inputSize === 'number'\n    && Array.isArray(hiddenLayers)\n    && hiddenLayers.every(l => typeof l === 'number')\n    && typeof outputSize === 'number')\n  ? [inputSize]\n      .concat(hiddenLayers)\n      .concat([outputSize])\n  : sizes\n}\n\nfunction toSVG(net, options) {\n  //default values\n  const defaultOptions = {\n    line: {\n      width: 0.5,\n      color: 'black',\n      className: 'connection'\n    },\n    recurrentLine: {\n      width: 1,\n      color: 'red',\n      className: 'recurrence'\n    },\n    inputs: {\n      color:'rgba(0, 128, 0, 0.5)',\n      labels: null,\n      className: 'input'\n    },\n    outputs: {\n      color:'rgba(100, 149, 237, 0.5)',\n      className: 'output'\n    },\n    hidden: {\n      color:'rgba(255, 127, 80, 0.5)',\n      className: 'hidden-neuron'\n    },\n    fontSize: '14px',\n    fontClassName: 'label',\n    radius: 8,\n    width: 400,\n    height: 250\n  };\n\n  const mergedOptions = { ...defaultOptions, ...options };\n  const {\n    width,\n    height,\n    inputs,\n  } = mergedOptions;\n\n  const isRNN = net.hasOwnProperty('model')\n    || net instanceof Recurrent\n    || (net.type && recurrentJSONTypes.indexOf(net.type) !== -1);\n\n  // Get network size array for NeuralNetwork or NeuralNetworkGPU\n  let sizes = null;\n  if (\n    net instanceof NeuralNetwork\n    || net instanceof RNN\n    || net instanceof RNNTimeStep\n  ) {\n    sizes = getSizes(net);\n  }\n  // Get network size array for NeuralNetwork json\n  else if (net.sizes) {\n    sizes = net.sizes;\n  }\n  // get network size for Recurrent\n  else if (net instanceof Recurrent) {\n    const { inputLayer, hiddenLayers, outputLayer } = getRecurrentLayers(net);\n    sizes = [inputLayer.height]\n      .concat(hiddenLayers.map(l => l.height))\n      .concat([outputLayer.height]);\n  }\n  // get network size for FeedForward\n  else if (net instanceof FeedForward) {\n    const { inputLayer, hiddenLayers, outputLayer } = getFeedForwardLayers(net);\n    sizes = [inputLayer.height]\n      .concat(hiddenLayers.map(l => l.height))\n      .concat([outputLayer.height]);\n  }\n  // handle json, recurrent first\n  else if (isRNN) {\n    if (net.options) {\n      sizes = getSizes(net.options);\n    }\n  }\n  // handle json, NeuralNetwork\n  else {\n    sizes = getSizes(net);\n  }\n\n  if (!sizes) throw new Error('sizes not set');\n\n  if (inputs.labels && inputs.labels.length !== sizes[0]) throw new Error('not enough labels for inputs');\n\n  if (isRNN) {\n    return wrapSVG(rnnToSVG({ ...mergedOptions, sizes }), width, height);\n  } else {\n    return wrapSVG(neuralNetworkToSVG({ ...mergedOptions, sizes }), width, height);\n  }\n}\n\nmodule.exports = toSVG;\n","const activation = require('./activation');\nconst CrossValidate = require('./cross-validate');\nconst layer = require('./layer');\nconst layerTypes = require('./layer/types');\nconst likely = require('./likely');\nconst lookup = require('./lookup');\nconst praxis = require('./praxis');\nconst { FeedForward } = require('./feed-forward');\nconst NeuralNetwork = require('./neural-network');\nconst NeuralNetworkGPU = require('./neural-network-gpu');\nconst TrainStream = require('./train-stream');\nconst { Recurrent } = require('./recurrent');\nconst RNNTimeStep = require('./recurrent/rnn-time-step');\nconst LSTMTimeStep = require('./recurrent/lstm-time-step');\nconst GRUTimeStep = require('./recurrent/gru-time-step');\nconst RNN = require('./recurrent/rnn');\nconst LSTM = require('./recurrent/lstm');\nconst GRU = require('./recurrent/gru');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst ones = require('./utilities/ones');\nconst random = require('./utilities/random');\nconst randomWeight = require('./utilities/random-weight');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst DataFormatter = require('./utilities/data-formatter');\nconst zeros = require('./utilities/zeros');\nconst toSVG = require('./utilities/to-svg');\n\nconst brain = {\n  activation,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n    toSVG,\n  },\n};\n\nif (typeof window !== 'undefined') {\n  window.brain = brain //eslint-disable-line\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = brain;\n}\n"]}