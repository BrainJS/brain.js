{"version":3,"sources":["activation/leaky-relu.js","activation/relu.js","activation/sigmoid.js","activation/tanh.js","activation/index.js","cross-validate.js","../node_modules/gpu.js/dist/gpu-browser.js","utilities/kernel.js","utilities/zeros.js","utilities/zeros-2d.js","utilities/layer-size.js","layer/base.js","utilities/zeros-3d.js","layer/activation.js","layer/types.js","layer/add.js","praxis/base.js","praxis/arthur-deviation-weights.js","praxis/arthur-deviation-biases.js","utilities/random-weight.js","utilities/random.js","utilities/randos.js","utilities/randos-2d.js","layer/random.js","layer/multiply.js","layer/sigmoid.js","layer/arthur-feed-forward.js","utilities/layer-setup.js","utilities/randos-3d.js","utilities/values.js","layer/convolution.js","layer/dropout.js","layer/feed-forward.js","layer/fully-connected.js","layer/negative.js","layer/multiply-element.js","utilities/ones.js","utilities/ones-2d.js","layer/ones.js","layer/tanh.js","layer/zeros.js","layer/gru.js","layer/input.js","layer/leaky-relu.js","layer/lstm-cell.js","layer/target.js","layer/output.js","layer/pool.js","layer/relu.js","layer/rnn-cell.js","layer/regression.js","layer/soft-max.js","layer/svm.js","layer/transpose.js","layer/index.js","likely.js","lookup.js","praxis/adam.js","praxis/momentum-root-mean-squared-propagation.js","praxis/index.js","utilities/layer-from-json.js","utilities/traverse-layers-from.js","utilities/flatten-layers.js","estimator/mean-squared-error.js","feed-forward.js","../src/thaw.js","../src/block.js","../src/index.js","../node_modules/events/events.js","../node_modules/inherits/inherits_browser.js","../node_modules/process/browser.js","../node_modules/process-nextick-args/index.js","../node_modules/isarray/index.js","../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/readable-stream/node_modules/safe-buffer/index.js","../node_modules/core-util-is/lib/util.js","../node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/util-deprecate/browser.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/readable-browser.js","../node_modules/readable-stream/writable-browser.js","../node_modules/readable-stream/duplex-browser.js","../node_modules/readable-stream/transform.js","../node_modules/readable-stream/passthrough.js","../node_modules/stream-browserify/index.js","train-stream.js","utilities/to-array.js","utilities/max.js","utilities/mse.js","utilities/range.js","utilities/lookup-table.js","utilities/cast.js","neural-network.js","neural-network-gpu.js","layer/recurrent-connection.js","layer/recurrent-input.js","layer/recurrent-zeros.js","recurrent.js","recurrent/matrix/index.js","recurrent/matrix/random-matrix.js","recurrent/matrix/ones-matrix.js","recurrent/matrix/copy.js","recurrent/matrix/clone-negative.js","recurrent/matrix/add.js","recurrent/matrix/add-b.js","recurrent/matrix/all-ones.js","recurrent/matrix/multiply.js","recurrent/matrix/multiply-b.js","recurrent/matrix/multiply-element.js","recurrent/matrix/multiply-element-b.js","recurrent/matrix/relu.js","recurrent/matrix/relu-b.js","recurrent/matrix/row-pluck.js","recurrent/matrix/row-pluck-b.js","recurrent/matrix/sigmoid.js","recurrent/matrix/sigmoid-b.js","recurrent/matrix/tanh.js","recurrent/matrix/tanh-b.js","recurrent/matrix/softmax.js","recurrent/matrix/equation.js","recurrent/matrix/sample-i.js","recurrent/matrix/max-i.js","utilities/data-formatter.js","recurrent/rnn.js","utilities/array-lookup-table.js","recurrent/rnn-time-step.js","recurrent/lstm.js","recurrent/lstm-time-step.js","recurrent/gru.js","recurrent/gru-time-step.js","utilities/to-svg.js","index.js"],"names":["activate","weight","measure","error","module","exports","Math","max","delta","value","exp","tanh","leakyRelu","require","relu","sigmoid","CrossValidate","Classifier","options","json","trainOpts","trainSet","testSet","classifier","beginTrain","Date","now","trainingStats","train","beginTest","testStats","test","endTest","stats","Object","assign","trainTime","testTime","iterations","total","learningRate","hiddenLayers","network","toJSON","array","i","length","j","floor","random","temp","data","k","Error","size","constructor","Array","shuffleArray","newData","keys","forEach","key","avgs","stat","binaryStats","truePos","trueNeg","falsePos","falseNeg","results","isBinary","dclone","slice","splice","result","testPartition","hasOwnProperty","push","precision","recall","accuracy","testSize","trainSize","sets","fromJSON","crossValidateJson","reduce","prev","cur","Infinity","instance","f","define","amd","window","global","self","GPU","r","e","n","t","o","c","u","a","code","p","call","factory","reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","set","pos","isIdentifierStart","astral","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","prototype","toString","has","obj","propName","isArray","wordsRegexp","words","replace","Position","line","col","column","offset","SourceLocation","start","end","sourceFile","getLineInfo","input","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","getOptions","opts","opt","tokens","token","pushComment","block","text","startLoc","endLoc","comment","type","loc","range","SCOPE_TOP","SCOPE_FUNCTION","SCOPE_VAR","SCOPE_ASYNC","SCOPE_GENERATOR","functionFlags","async","generator","BIND_NONE","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","lastIndexOf","curLine","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","prototypeAccessors","inFunction","configurable","inGenerator","inAsync","allowSuper","allowDirectSuper","treatFunctionsAsVar","parse","node","startNode","nextToken","parseTopLevel","get","currentVarScope","flags","currentThisScope","treatFunctionsAsVarInScope","currentScope","inNonArrowFunction","extend","len","plugins","arguments","cls","parseExpressionAt","parser","parseExpression","tokenizer","defineProperties","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","body","stmt","parseStatement","list","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","await","parseForIn","init","toAssignable","checkLVal","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","empty","handler","clause","param","parseBindingAtom","simple","finalizer","object","i$1","label$1","statementStart","indexOf","createNewLexicalScope","update","isForIn","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","classBody","hadConstructor","element","parseClassElement","superClass","constructorAllowsSuper","this$1","method","tryContextual","noLineBreak","computed","startNodeAt","static","isGenerator","parsePropertyName","allowsDirectSuper","parseClassMethod","parseMethod","parseExprSubscripts","parseExprAtom","checkExport","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","proto","other","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","parseSubscripts","base","noCalls","maybeAsyncArrow","parseSubscript","property","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","readRegexp","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","parseNew","parseExprImport","parseDynamicImport","errorPos","bigint","val","innerStartPos","spreadStart","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","isImport","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","allowDuplicates","nameHash","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","Scope","var","lexical","functions","scope","redeclared","scope$2","scope$3","Node","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","ecma9BinaryProperties","ecma10BinaryProperties","unicodeBinaryProperties","ecma11BinaryProperties","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","unicodeScriptValues","ecma11ScriptValues","buildUnicodeData","d","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$8","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString","ch","isSyntaxCharacter","isControlLetter","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","isRegExpIdentifierStart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$9","codePointToString$1","ignoreEscapeSequenceInKeyword","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","readInt","radix","BigInt","startsWithDot","octal","str$1","val$1","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","word","escStart","esc","acorn","version","tokTypes","keywordTypes","tokContexts","defineProperty","glWiretap","gl","readPixelsVariableName","contextName","throwGetError","useTrackablePrimitives","readPixelsFile","recording","variables","onReadPixels","onUnrecognizedArgumentLookup","proxy","Proxy","listen","addComment","checkThrowError","insertVariable","setIndent","getContextVariableName","indent","getError","variableName","contextVariables","extension","getExtension","tappedExtension","glExtensionWiretap","getEntity","targetVariableName","getVariableName","argumentAsStrings","join","width","height","sourceVariable","imageVariable","imageCount","readPixels","apply","argumentsToString","addVariable","drawBuffers","writePPM","methodCallToString","trackablePrimitive","entityNames","spaces","repeat","args","getExtensionEntity","drawBuffersWEBGL","extensionEntityNames","from","map","arg","argumentToString","hasLines","hasSingleQuotes","hasDoubleQuotes","JSON","stringify","instantiationString","setupArguments","newArguments","toArray","apiDecorate","kernel","setOutput","output","setupOutput","graphical","setupGraphical","setConstants","constants","setGraphical","setCanvas","canvas","setContext","destroy","validateSettings","Promise","resolve","reject","getPixels","flip","x","y","flipPixels","pixels","halfHeight","bytesPerRow","Uint8ClampedArray","topOffset","bottomOffset","subarray","copyWithin","_imageData","color","g","b","thread","_colorData","mockMethod","methods","createImageData","z","gpuMock","fn","settings","mock3D","cube","matrix","row","Float32Array","_fn","mock2DGraphical","mock2D","mock1D","utils","alias","fnString","Function","getArgumentNamesFromString","getFunctionBodyFromString","FunctionNode","CPUFunctionNode","ast","retArr","isRootKernel","argumentNames","argumentName","astGeneric","returnType","getType","leadingReturnStatement","followingReturnStatement","isSubKernel","isNaN","astErrorOutput","idtNode","forNode","initArr","testArr","updateArr","bodyArr","isSafe","pushState","includes","popState","iVariableName","getInternalVariableName","whileNode","doWhileNode","assNode","getDeclaration","assignable","bNode","isState","varDecNode","info","valueType","ifNode","tNode","mNode","getMemberExpressionDetails","signature","xProperty","yProperty","zProperty","origin","removeIstanbulCoverage","markupName","isInput","constant","constantTypes","argumentSizes","dynamicArguments","functionName","astMemberExpressionUnroll","calledFunctions","isAstMathFunction","onFunctionCall","targetTypes","lookupFunctionArgumentTypes","argumentType","triggerImplyArgumentType","arrNode","arrLen","subNode","cpuKernelString","cpuKernel","header","thisProperties","beforeReturn","useFunctionKeyword","constantsToString","colorFn","flattenFunctionToString","thisLookup","propertyName","findDependency","getPixelsFn","constantKeys","argumentTypes","flattenedImageTo3DArray","_imageTo3DArray","doNotDefine","flattenedImageTo2DArray","_mediaTo2DArray","_kernelString","Kernel","FunctionBuilder","CPUKernel","mergeSettings","_prependedString","translatedSources","features","combinedKernel","freeze","kernelMap","isIntegerDivisionAccurate","document","createElement","OffscreenCanvas","getContext","argType","getVariableType","strictIntegers","getDimensions","checkOutput","subKernels","functionBuilder","fromKernel","getPrototypes","getKernelResultType","built","setupConstants","translateSource","kernelString","getKernelString","debug","console","log","run","bind","buildSignature","kernelThreadString","filter","shift","_getLoopMaxString","injectedNative","_resultKernelHeader","_processConstants","_earlyThrows","_processArguments","_graphicalKernelBody","_resultKernelBody","loopMaxIterations","immutable","pipeline","arrayArguments","checks","checkSubKernels","_mapSubKernels","subKernel","media","videoWidth","videoHeight","ctx","drawImage","pixelsData","getImageData","imageArray","pixel","images","imagesArray","_mutableKernel1DResults","_mutableKernel2DResults","_mutableKernel3DResults","_resultMutableKernel1DLoop","_resultImmutableKernel1DLoop","_kernelOutput","_resultMutableKernel2DLoop","_resultImmutableKernel2DLoop","_resultMutableKernel3DLoop","_resultImmutableKernel3DLoop","_graphicalKernel2DLoop","_graphicalOutput","constructorString","_getKernelResultTypeConstructorString","removeCanvasReference","functionNodes","rootNode","subKernelNodes","nativeFunctions","functionMap","nativeFunctionNames","lookupChain","functionNodeDependencies","functionCalls","nativeFunction","extraNodeOptions","kernelArguments","kernelConstants","argumentBitRatios","constantBitRatios","optimizeFloatMemory","dynamicOutput","onIstanbulCoverageVariable","kernelConstant","needsArgumentType","assignArgumentType","lookupReturnType","requestingNode","lookupFunctionArgumentName","argumentIndex","lookupFunctionArgumentBitRatio","triggerImplyArgumentBitRatio","calleeFunctionName","assignArgumentBitRatio","trackFunctionCall","onNestedFunction","nestedFunction","nodeOptions","traceFunctionAST","addFunctionNode","rootNodeOptions","functionNode","retList","functionIndex","traceFunctionCalls","dependantFunctionName","getPrototypesFromFunctionNames","reverse","functionList","ret","nativeIndex","jsonFunctionNodes","jsonFunctionNode","getStringFromFunctionNames","_isNativeFunction","_lookupNativeFunctionReturnType","_isFunction","_getFunction","getJsAST","Boolean","_getNativeFunction","bitRatio","fnNode","calleeNode","calleeBitRatio","Set","add","subKernelNode","called","functionCallIndex","FunctionTracer","getFunctionNameFromString","identifiers","contexts","states","strictTypingChecking","fixIntegerDivisionAccuracy","literalTypes","validate","_string","_internalVariableNames","isFunctionString","firstExpression","inParser","functionAST","inForLoopInit","inForLoopTest","dependencies","getDependencies","realType","isSafeDependencies","identifier","typeLookupMap","constantName","trim","literalKey","astKey","Number","isInteger","inferArgumentTypesIfNeeded","getVariableSignature","rightType","lastType","isAstVariable","getCheckVariableType","findIdentifierOrigin","variableSignature","getLookupType","getConstantType","isAstMathVariable","lastReturn","findLastReturn","every","dependency","isNotSafe","details","returnRawValue","unshift","signatureString","allowedExpressions","astFunctionDeclaration","astFunctionExpression","astReturnStatement","astLiteral","astBinaryExpression","astIdentifierExpression","astAssignmentExpression","astExpressionStatement","astEmptyStatement","astBlockStatement","astIfStatement","astSwitchStatement","astBreakStatement","astContinueStatement","astForStatement","astWhileStatement","astDoWhileStatement","astVariableDeclaration","astVariableDeclarator","astThisExpression","astSequenceExpression","astUnaryExpression","astUpdateExpression","astLogicalExpression","astMemberExpression","astCallExpression","astArrayExpression","astDebuggerStatement","astConditionalExpression","debugString","getAstString","splitLines","lineBefore","isChildFunction","astFunction","esNode","eNode","brNode","crNode","iVarDecNode","sNode","sequenceResult","isIstanbulAST","expressionResult","uNode","unaryResult","checkAndUpconvertBitwiseUnary","logNode","astToFind","stack","atNode","separator","runningContexts","functionContexts","returnStatements","trackedIdentifiers","newFunctionContext","scan","newContext","currentContext","currentFunctionContext","functionContext","previousRunningContext","useFunctionContext","suggestedType","normalizeDeclarations","hasState","testIdentifiers","getIdentifiers","toStringWithoutUtils","getRenderString","targetName","readBackValue","getToArrayString","kernelResult","textureName","flattenedFunctions","isDeclaration","findKernelValue","kernelValues","values","uploadedValues","HTMLImageElement","kernelValue","uploadValue","variableIndex","variable","glKernelString","originKernel","setupContextString","destroyContextString","build","postResult","subKernelsResultVariableSetup","subKernelsResultIndex","tactic","checkContext","kernelArgument","imageIndex","texture","flattenTo","flatten2dArrayTo","flatten3dArrayTo","flatten4dArrayTo","renderOutput","renderTexture","formatValues","varName","renderKernels","getStringValueHandler","mappedTextures","subKernelResult","subKernelTextureName","rendered","getGetPixelsString","constantsUpload","GLTextureArray2Float","GLTextureArray2Float2D","GLTextureArray2Float3D","GLTextureArray3Float","GLTextureArray3Float2D","GLTextureArray3Float3D","GLTextureArray4Float","GLTextureArray4Float2D","GLTextureArray4Float3D","GLTextureFloat","GLTextureFloat2D","GLTextureFloat3D","GLTextureMemoryOptimized","GLTextureMemoryOptimized2D","GLTextureMemoryOptimized3D","GLTextureUnsigned","GLTextureUnsigned2D","GLTextureUnsigned3D","GLTextureGraphical","GLKernel","transferValues","TextureConstructor","renderRawOutput","texSize","translatedSource","compiledFragmentShader","compiledVertexShader","switchingKernels","_textureSwitched","_mappedTextureSwitched","fix","warnDeprecated","floatTextures","testContext","testCanvas","kernelFunction","v1","v2","round","isDrawBuffers","getIsDrawBuffers","isFloatRead","getIsFloatRead","getIsIntegerDivisionAccurate","isSpeedTacticSupported","getIsSpeedTacticSupported","isTextureFloat","getIsTextureFloat","channelCount","getChannelCount","maxTextureSize","getMaxTextureSize","lowIntPrecision","getShaderPrecisionFormat","FRAGMENT_SHADER","LOW_INT","lowFloatPrecision","LOW_FLOAT","mediumIntPrecision","MEDIUM_INT","mediumFloatPrecision","MEDIUM_FLOAT","highIntPrecision","HIGH_INT","highFloatPrecision","HIGH_FLOAT","getVariablePrecisionString","isStartingVariableName","isVariableChar","char","nextChar","typeMap","lastKernel","threadDim","w","h","ceil","RGBA","FLOAT","bytes","Uint8Array","UNSIGNED_BYTE","buffer","splitArray","readPackedPixelsToUint8Array","readPackedPixelsToFloat32Array","renderKernelsToTextures","requestFallback","renderKernelsToArrays","renderValues","erect3DPackedFloat","erect2DPackedFloat","erectPackedFloat","readFloatPixelsToFloat32Array","erectMemoryOptimized3DFloat","erectMemoryOptimized2DFloat","erectMemoryOptimizedFloat","erect3DArray2","erect2DArray2","erectArray2","erect3DArray3","erect2DArray3","erectArray3","erect3DArray4","erect2DArray4","erectArray4","erect3DFloat","erect2DFloat","erectFloat","getMainResultNumberTexture","getMainResultArray2Texture","getMainResultArray3Texture","getMainResultArray4Texture","getMainResultGraphical","getMainResultMemoryOptimizedFloats","getMainResultTexture","getMainResultPackedPixels","linesToString","getMainResultKernelNumberTexture","getMainResultSubKernelNumberTexture","getMainResultKernelArray2Texture","getMainResultSubKernelArray2Texture","getMainResultKernelArray3Texture","getMainResultSubKernelArray3Texture","getMainResultKernelArray4Texture","getMainResultSubKernelArray4Texture","variablePrecision","clone","existingValue","newOutput","toKernelOutput","newThreadDim","newTexSize","getKernelTextureSize","oldTexSize","oldPrecision","newPrecision","warn","switchKernels","needed","bindFramebuffer","FRAMEBUFFER","framebuffer","updateMaxTexSize","viewport","maxTexSize","delete","_setupOutputTexture","_setupSubOutputTextures","reason","textureSize","isInt","low","medium","high","requiredSize","log2","rangeMax","prevArg","_refs","mappedTexture","previousKernel","int","float","vec2","vec3","vec4","GLTexture","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","_deleted","Texture","newTexture","selectTexture","target","createTexture","texImage2D","internalFormat","textureFormat","textureType","copyTexSubImage2D","bindTexture","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","deleteTexture","_framebuffer","deleteFramebuffer","createFramebuffer","activeTexture","TEXTURE15","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","WebGLKernel","isSupported","testExtensions","HeadlessGLKernel","preserveDrawingBuffer","extensions","STACKGL_resize_drawingbuffer","STACKGL_destroy_context","OES_texture_float","OES_texture_float_linear","OES_element_index_uint","WEBGL_draw_buffers","fallbackRequested","resize","WEBGL_color_buffer_float","getFeatures","getParameter","RENDERER","MAX_DRAW_BUFFERS_WEBGL","MAX_TEXTURE_SIZE","setupFeatureChecks","KernelValue","onRequestContextHandle","onUpdateValueMismatch","contextHandle","forceUploadEachRun","Input","useLegacyEncoder","onRequestFallback","forceUploadKernelConstants","gpu","addFunction","addNativeFunction","initCanvas","initContext","initPlugins","functionToIGPUFunction","splitArgumentTypes","argumentTypesObject","nativeFunctionArguments","nativeFunctionReturnType","Int32Array","getBitRatio","needsConstantTypes","setDynamicOutput","setDynamicArguments","removeCanvasReferences","Int8Array","Uint16Array","Int16Array","argumentsTypes","pluginNames","plugin","Constructor","getSignature","getArgumentTypes","sourceString","fragmentShader","E","WebGLFunctionNode","consequentType","alternateType","sanitizeName","castLiteralToFloat","castValueToInteger","castLiteralToInteger","checkAndUpconvertOperator","castValueToFloat","leftType","operatorMap","literalResult","literalType","bitwiseResult","checkAndUpconvertBitwiseOperators","upconvertableOperators","foundOperator","initString","initNeedsSemiColon","declarationSets","declarationSet","actualType","markupType","declarationResult","fallingThrough","defaultResult","movingDefaultToEnd","pastFirstIf","testType","cleanName","memberExpressionPropertyMarkup","memberExpressionXYZ","isMathFunction","functionMatch","functionReplace","targetType","WebGLKernelValueBoolean","WebGLKernelValueFloat","WebGLKernelValueInteger","WebGLKernelValueHTMLImage","WebGLKernelValueDynamicHTMLImage","WebGLKernelValueHTMLVideo","WebGLKernelValueDynamicHTMLVideo","WebGLKernelValueSingleInput","WebGLKernelValueDynamicSingleInput","WebGLKernelValueUnsignedInput","WebGLKernelValueDynamicUnsignedInput","WebGLKernelValueMemoryOptimizedNumberTexture","WebGLKernelValueDynamicMemoryOptimizedNumberTexture","WebGLKernelValueNumberTexture","WebGLKernelValueDynamicNumberTexture","WebGLKernelValueSingleArray","WebGLKernelValueDynamicSingleArray","WebGLKernelValueSingleArray1DI","WebGLKernelValueDynamicSingleArray1DI","WebGLKernelValueSingleArray2DI","WebGLKernelValueDynamicSingleArray2DI","WebGLKernelValueSingleArray3DI","WebGLKernelValueDynamicSingleArray3DI","WebGLKernelValueSingleArray2","WebGLKernelValueSingleArray3","WebGLKernelValueSingleArray4","WebGLKernelValueUnsignedArray","kernelValueMaps","unsigned","dynamic","WebGLKernelValueDynamicUnsignedArray","single","lookupKernelValueType","undefined","WebGLKernelValue","WebGLKernelArray","requestTexture","setupTexture","defineTexture","onRequestTexture","onRequestIndex","dimensionsId","sizeId","setUniform1i","checkSize","dimensions","setUniform3iv","setUniform2iv","inputTexture","getMemoryOptimizedFloatTextureSize","uploadArrayLength","setShape","getMemoryOptimizedPackedTextureSize","Type","getTransferArrayType","preUploadValue","setUniform1f","inputImage","initialValueConstructor","pixelStorei","UNPACK_FLIP_Y_WEBGL","Uint32Array","Float64Array","sameError","updateTextureArgumentRefs","valueDimensions","setUniform2fv","setUniform3fv","setUniform4fv","TranserArrayType","mrud","vertexShader","canvases","maxTexSizes","endianness","systemEndianness","argumentTextureCount","constantTextureCount","fragShader","vertShader","drawBuffersMap","onRequestSwitchKernel","textureCache","programUniformLocationCache","uniform1fCache","uniform1iCache","uniform2fCache","uniform2fvCache","uniform2ivCache","uniform3fvCache","uniform3ivCache","uniform4fvCache","uniform4ivCache","WebGLRenderingContext","isContextMatch","alpha","depth","antialias","pluginsToUse","some","pluginName","checkTextureSize","canvasIndex","needsArgumentTypes","textureIndexes","TEXTURE0","setup","initExtensions","failureResult","pickRenderStrategy","enable","SCISSOR_TEST","getVertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getFragmentShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","vertices","texCoords","texCoordOffset","byteLength","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","bufferSubData","aPosLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","aTexCoordLoc","useProgram","updateValue","getPrototypeString","setupReturnTypes","getSubKernelResultType","scissor","setUniform2f","onBeforeRun","bindRenderbuffer","RENDERBUFFER","_replaceOutputTexture","drawArrays","TRIANGLE_STRIP","_replaceSubOutputTextures","getInternalFormat","beforeMutate","format","getTextureFormat","getUniformLocation","uniform1f","uniform1i","value1","value2","cache","uniform2f","uniform2fv","uniform2iv","uniform3fv","uniform3iv","uniform4fv","uniform4iv","HEADER","_getHeaderString","LOOP_MAX","PLUGINS","_getPluginsString","CONSTANTS","_getConstantsString","DECODE32_ENDIANNESS","_getDecode32EndiannessString","ENCODE32_ENDIANNESS","_getEncode32EndiannessString","DIVIDE_WITH_INTEGER_CHECK","_getDivideWithIntegerCheckString","INJECTED_NATIVE","_getInjectedNative","MAIN_CONSTANTS","_getMainConstantsString","MAIN_ARGUMENTS","_getMainArgumentsString","KERNEL","MAIN_RESULT","getMainResultString","FLOAT_TACTIC_DECLARATION","getFloatTacticDeclaration","INT_TACTIC_DECLARATION","getIntTacticDeclaration","SAMPLER_2D_TACTIC_DECLARATION","getSampler2DTacticDeclaration","SAMPLER_2D_ARRAY_TACTIC_DECLARATION","getSampler2DArrayTacticDeclaration","getSource","getKernelResultDeclaration","getMainResultKernelPackedPixels","getMainResultSubKernelPackedPixels","channels","channel","getMainResultKernelMemoryOptimizedFloats","getMainResultSubKernelMemoryOptimizedFloats","src","artifact","replaceArtifacts","_getFragShaderArtifactMap","_getVertShaderArtifactMap","deleteBuffer","deleteShader","deleteProgram","textureCacheIndex","idx","destroyExtensions","kernels","loseContext","WebGL2FunctionNode","WebGL2KernelValueBoolean","WebGL2KernelValueFloat","WebGL2KernelValueInteger","WebGL2KernelValueHTMLImage","WebGL2KernelValueDynamicHTMLImage","WebGL2KernelValueHTMLImageArray","WebGL2KernelValueDynamicHTMLImageArray","WebGL2KernelValueHTMLVideo","WebGL2KernelValueDynamicHTMLVideo","WebGL2KernelValueSingleInput","WebGL2KernelValueDynamicSingleInput","WebGL2KernelValueUnsignedInput","WebGL2KernelValueDynamicUnsignedInput","WebGL2KernelValueMemoryOptimizedNumberTexture","WebGL2KernelValueDynamicMemoryOptimizedNumberTexture","WebGL2KernelValueNumberTexture","WebGL2KernelValueDynamicNumberTexture","WebGL2KernelValueSingleArray","WebGL2KernelValueDynamicSingleArray","WebGL2KernelValueSingleArray1DI","WebGL2KernelValueDynamicSingleArray1DI","WebGL2KernelValueSingleArray2DI","WebGL2KernelValueDynamicSingleArray2DI","WebGL2KernelValueSingleArray3DI","WebGL2KernelValueDynamicSingleArray3DI","WebGL2KernelValueSingleArray2","WebGL2KernelValueSingleArray3","WebGL2KernelValueSingleArray4","WebGL2KernelValueUnsignedArray","WebGL2KernelValueDynamicUnsignedArray","TEXTURE_2D_ARRAY","texImage3D","texSubImage3D","RGBA32F","WebGL2Kernel","EXT_color_buffer_float","R32F","RED","RG32F","RG","REPEAT","texStorage2D","WebGL2RenderingContext","MAX_DRAW_BUFFERS","lib","bindTo","kernelRunShortcut","kernelOrder","kernelTypes","internalKernels","mode","chooseKernel","Worker","importScripts","HTMLCanvasElement","ExternalKernel","isFunction","devKernel","upgradeDeprecatedCreateKernelSettings","switchableKernels","settingsCopy","fallbackKernel","kernelRun","dynamicArgument","replaceKernel","mergedSettings","reasons","_kernel","existingKernel","onActivate","newKernel","argument2Type","createKernel","firstKernel","setPipeline","setTimeout","destroyContext","upgradedSettings","floatOutput","outputToTexture","outputImmutable","webGLKernelValueMaps","webGL2KernelValueMaps","mathRandom","bindKernelToShortcut","shortcut","allPropertiesOf","substring","__defineGetter__","__defineSetter__","resetSwitchingKernels","accept","replacementKernel","functionReturnType","FUNCTION_NAME","STRIP_COMMENTS","ARGUMENT_NAMES","_systemEndianness","getSystemEndianness","ArrayBuffer","funcObj","toLowerCase","funcStr","fnStr","isActiveClone","nodeName","texelCount","closestSquareDimensions","sqrt","totalArea","roundTo","pad","dim","part","byteOffset","lines","props","getOwnPropertyNames","getPrototypeOf","oldName","newName","yResults","xStart","xEnd","zResults","xResults","xResultsMax","XResultsMax","flattened","functionDependencies","flatten","flat","foundSource","flattenedFunctionDependencies","functionDependency","normalizedDeclarations","declarationIndex","propertyIndex","subPropertyIndex","subProperty","elementIndex","splitHTMLImageToRGB","image","rKernel","gKernel","bKernel","aKernel","splitRGBAToCanvases","rgba","visualKernelR","visualKernelG","visualKernelB","visualKernelA","getMinifySafeName","dollarSign","doubleUnderscore","singleUnderscore","gpuInstance","teardown","makeKernel","createKernelMap","makeDevKernel","kernelInput","release","fill","zeros","checkSameSize","layer1","layer2","Base","deltas","weights","praxis","praxisOpts","defaults","setupPraxis","layer","predictKernel","compareKernel","previousLayer","nextLayer","oldWeights","jsonLayer","zeros2D","zeros3D","Activation","inputLayer","Internal","InternalModel","EntryPoint","Filter","Model","Modifier","Operator","predict","inputWeights1","inputWeights2","Add","inputLayer1","inputLayer2","layerTemplate","updateChange","changes","incomingWeights","inputDeltas","lastChange","inputDelta","incoming","change","momentum","ArthurDeviationWeights","weightsLayer","incomingLayer","deltaLayer","arthurDeviationWeights","ArthurDeviationBiases","arthurDeviationBiases","randomFloat","gaussRandom","returnV","vVal","randomInteger","randomN","mu","std","randomWeight","randos","randos2D","Random","weights1","weights2","sum","compareFromX","inputWeights","compareFromY","Multiply","compareKernel1","compareKernel2","inputLayer1Deltas","inputLayer2Deltas","newDeltas1","newDeltas2","multiply","predict2D","inputs","predict3D","compare2D","compare3D","Sigmoid","arthurFeedForward","weightsPraxis","setupKernels","biasesLayer","biasesPraxis","multiplyLayer","addLayer","sigmoidLayer","setStride","strideX","stride","strideY","setPadding","paddingX","padding","paddingY","rondos2D","randos3D","filters","biases","startFilterX","startInputX","endFilterX","filterWidth","inputWidth","startFilterY","startInputY","endFilterY","filterHeight","inputHeight","inputDepth","filterY","inputY","filterX","inputX","compareFilterDeltas","filterDeltas","startDeltaX","endDeltaX","deltaWidth","startDeltaY","endDeltaY","deltaHeight","deltaY","deltaX","deltaZ","compareInputDeltas","compareBiases","biasDeltas","Convolution","filterCount","bias","learnFilters","learnInputs","compareFilterDeltasKernel","deltasWidth","deltasHeight","deltasDepth","compareInputDeltasKernel","compareBiasesKernel","convolution","setDropout","dropout","trainingPredict","probability","compare","dropouts","Dropout","isTraining","feedForward","compareInputDeltas3D","compareFilterDeltas3D","inputZ","FullyConnected","connectionCount","inputLayerDeltas","fullyConnected","Negative","negative","inputLayerWeights1","inputLayerWeights2","MultiplyElement","multiplyElement","ones","ones2D","Ones","errors","Tanh","Zeros","gru","recurrentInput","updateGateWeights","updateGatePeepholes","updateGateBias","updateGate","resetGateWeights","resetGatePeepholes","resetGateBias","resetGate","cellWeights","cellPeepholes","cellBias","cell","rows","columns","reshapeInput","predict1D","LeakyRelu","lstmCell","setDimensions","inputGateWeights","inputGatePeepholes","inputGateBias","inputGate","forgetGateWeights","forgetGatePeepholes","forgetGateBias","forgetGate","outputGateWeights","outputGatePeepholes","outputGateBias","outputGate","memoryWeights","memoryPeepholes","memoryBias","memory","retainCell","writeCell","compare1D","targetValues","Target","compareFn","outputGateConnector","setSwitchY","setSwitchX","largestValue","largestX","largestY","switchY","switchX","outputWidth","outputHeight","deltasY","deltasX","switchXValue","switchYValue","Pool","outputDepth","pool","Relu","rnnCell","transition","Regression","learn","targets","regression","getMaxValue","maxInput","getMaxValue2D","getMaxValue3D","getSum","getSum2D","getSum3D","getExponentials","getExponentials2D","getExponentials3D","exponentials","exponentialsSum","indicator","loss","SoftMax","getExponentialsKernel","getMaxValueKernel","getSumKernel","maxValue","softMax","SVM","svm","Transpose","transpose","net","TypeError","maxProp","lookup","hashes","hash","memo","toHash","objects2D","table","valueIndex","objects","tableIndex","dataIndex","arrayLength","limit","shape","Adam","adam","getMomentum","decay","previousMomentum","clipByValue","previousMomenta","clippedDelta","clipValue","decayRate","smoothEps","regularizationStrength","isClippedByValue","MomentumRootMeanSquaredPropagation","momenta","momentumRootMeanSquaredPropagation","MRmsProp","mRmsProp","Layer","realLayer","Reflect","construct","traverseLayersFrom","cb","layers","mse2d","MeanSquaredError","calculate","addAbsolute","abs","divide","mseSum","layerFromJSON","flattenLayers","FeedForward","outputLayer","_updateTrainingOptions","trainDefaults","structure","_inputLayer","_hiddenLayers","_outputLayer","_validateTrainingOptions","_setLogMethod","callback","callbackPeriod","errorCheckInterval","validations","errorThresh","logPeriod","timeout","reinforce","binaryThresh","_model","_connectHiddenLayers","hiddenLayer","_connectLayers","initializeLayers","lastLayer","meanSquaredError","inputLookup","runInput","outputLookup","status","endTime","_prepTraining","_trainingTick","_calculateTrainingError","_trainPatterns","formattedData","formatData","verifyIsInitialized","transferData","initialize","prevSum","_trainPattern","resultArray","logErrorRate","_calculateDeltas","adjustWeights","tmp","inputDatumCheck","buildLookup","datumParam","outputDatumCheck","transferredData","transferInput","transferOutput","formattedDatum","jsonLayers","inputLayerIndex","inputLayer1Index","inputLayer2Index","sizes","concat","getLayer","thaw","thawing","thaws","Thaw","items","defaultSettings","each","tick","clearTimeout","delay","stop","doTick","makeReady","middle","Block","count","_next","addArray","insert","insertArray","ReflectOwnKeys","R","ReflectApply","receiver","ProcessEmitWarning","warning","ownKeys","getOwnPropertySymbols","NumberIsNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","m","events","existing","create","newListener","emit","warned","emitter","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","copy","spliceOne","enumerable","RangeError","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","on","prependListener","once","prependOnceListener","originalListener","off","removeAllListeners","rawListeners","eventNames","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","Item","noop","nextTick","title","env","argv","versions","binding","cwd","chdir","dir","umask","pna","WriteReq","chunk","encoding","CorkedRequest","entry","finish","onCorkedFinish","Writable","Duplex","asyncWrite","WritableState","util","inherits","internalUtil","deprecate","Stream","Buffer","OurUint8Array","_uint8ArrayToBuffer","_isUint8Array","isBuffer","realHasInstance","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","highWaterMark","writableHwm","writableHighWaterMark","defaultHwm","finalCalled","needDrain","ending","ended","finished","destroyed","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","_writableState","writable","write","_write","writev","_writev","_destroy","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","holder","allBuffers","callFinal","prefinish","need","endWritable","corkReq","getBuffer","_","hasInstance","pipe","cork","uncork","setDefaultEncoding","_undestroy","undestroy","TrainStream","neuralNetwork","dataFormatDetermined","floodCallback","doneTrainingCallback","updateTrainingOptions","finishStreamIteration","enc","addFormat","firstDatum","trainPattern","LookupTable","datum","arraysToFloat32Arrays","arrays","arrayToFloat32Arrays","arrayToFloat32Array","objectsToFloat32Arrays","objectToFloat32Arrays","objectToFloat32Array","default","mse","NeuralNetwork","outputs","calculateDeltas","inputLookupLength","outputLookupLength","inputSize","outputSize","beta1","beta2","epsilon","leakyReluAlpha","activation","prevSize","setActivation","_setupAdam","_runInputSigmoid","_calculateDeltasSigmoid","_runInputRelu","_calculateDeltasRelu","_runInputLeakyRelu","_calculateDeltasLeakyRelu","_runInputTanh","_calculateDeltasTanh","isRunnable","toObject","activeLayer","activeWeights","activeBiases","activeOutputs","currentSize","currentWeights","currentBiases","currentOutputs","validateTrainingOptions","setLogMethod","logTrainingStatus","calculateTrainingError","trainPatterns","prepTraining","trainingTick","thawedTrain","trainError","activeSize","activeOutput","activeError","activeDeltas","nextWeights","nextDeltas","currentErrors","currentDeltas","activeDelta","activeChanges","biasChangesLow","biasChangesHigh","changesLow","changesHigh","_adjustWeightsAdam","currentChangesLow","currentChangesHigh","currentBiasChangesLow","currentBiasChangesHigh","gradient","changeLow","changeHigh","momentumCorrection","pow","gradientCorrection","biasGradient","biasChangeLow","biasChangeHigh","biasMomentumCorrection","biasGradientCorrection","_formatInput","getTypedArrayFn","_formatOutput","addKeys","misclasses","errorSum","actual","expected","misclass","getTrainOptsJSON","needsVar","nodeHandle","layerNumber","nodeKey","layersAsMath","checkFns","gpuUtils","weightedSumSigmoid","weightedSumRelu","weightedSumLeakyRelu","weightedSumTanh","calcErrorOutput","calcDeltasSigmoid","calcDeltasRelu","calcDeltasLeakyRelu","calcDeltasTanh","calcError","calcChanges","previousChanges","previousOutputs","addWeights","addBiases","NeuralNetworkGPU","forwardPropagate","backwardPropagate","changesPropagate","biasesPropagate","buildRunInput","buildCalculateDeltas","buildGetChanges","buildChangeBiases","buildGetMSE","getMSE","_addMSE","_divideMSESum","getChanges","changeBiases","weightedSum","texturizeInputData","calcDeltas","outputTextures","texturizeOutputData","RecurrentConnection","RecurrentInput","recurrentInputDeltas","recurrentInputWeights","RecurrentZeros","recurrentZeros","Recurrent","previousLayers","_layerSets","usedHiddenLayerOutputIndex","findInputLayer","layerSettings","previousHiddenLayerOutput","_hiddenLayerOutputIndices","_outputConnection","layerSet","_connectLayersDeep","reuseKernels","initializeDeep","lastLayerUsed","lastLayerSet","prevError","_inputLayers","_hiddenLayerSets","_outputLayers","_previousInputs","_recurrentIndices","Matrix","ix","weightRows","deltasRows","rowIndex","weightValues","deltasValues","columnIndex","setWeight","setDeltas","RandomMatrix","OnesMatrix","product","leftRows","leftColumns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","leftColumn","rightColumnBase","leftIndex","rightIndex","leftRowRoot","rightRow","backPropagateValue","rowPluckIndex","rowBase","sig","mwi","maxVal","cloneNegative","addB","allOnes","multiplyB","multiplyElementB","reluB","rowPluck","rowPluckB","sigmoidB","tanhB","softmax","Equation","inputRow","inputValue","forwardFn","backpropagationFn","iForward","iBackpropagate","runIndex","logProbabilities","probabilities","maxv","maxix","DataFormatter","maxThreshold","indexTable","characterTable","characters","specialIndexes","buildCharactersFromIterable","buildTables","tempCharactersTable","dataFormatterIndex","dataFormatterLength","characterIndex","charactersLength","character","toIndexes","indices","toCharacters","addSpecial","special","specialIndex","toIndexesInputOutput","dataFormatter","fromAllPrintable","addInputOutput","defaultRNNFormatter","validateAndCast","addUnrecognized","formatDataIn","fromArrayInputOutput","sampleI","maxI","RNN","stepCache","runs","ratioClipped","model","equations","allMatrices","equationConnections","outputConnector","inputRange","mapModel","getModel","hiddenSize","lastHiddenSize","equation","equationConnection","initialLayerInputs","getEquation","inputMatrixToRow","createInputMatrix","createHiddenLayers","hiddenMatrix","createOutputMatrix","trainInput","backpropagate","log2ppl","bindEquation","inputIndex","inputMax","equationIndex","predictTargetIndex","backpropagateIndex","regc","clipval","numClipped","numTot","matrixIndex","rawInput","isSampleI","temperature","maxPredictionLength","previousIndex","outputMatrix","probs","formatDataOut","setupData","hiddenSizes","jsonString","previousConnectionIndex","connection","matrixToString","stateIndex","matrixOrigin","toInner","fileName","fnName","statesRaw","usedFunctionNames","innerFunctionsSwitch","toFunctionString","inputMatrix","previousResult","ArrayLookupTable","RNNTimeStep","runObject","runNumbers","runObjects","runArrays","forecast","forecastNumbers","forecastObjects","forecastArrays","setSize","trainInputOutput","trainArrays","trainNumbers","dataShape","toTable2D","toInputTable2D","toOutputTable2D","predictTarget","lastOutput","inputArray","toArrayShort","toObjectPartial","totalSize","outputIndex","toArrays","lookupTable","errorMSE","errorsAbs","errorCount","forceForecast","formatInputData","formatOutputData","LSTM","inputHidden","inputBias","forgetMatrix","forgetHidden","forgetBias","outputHidden","outputBias","cellActivationMatrix","cellActivationHidden","cellActivationBias","cellWrite","LSTMTimeStep","GRU","updateGateInputMatrix","updateGateHiddenMatrix","resetGateInputMatrix","resetGateHiddenMatrix","cellWriteInputMatrix","cellWriteHiddenMatrix","cellWriteBias","GRUTimeStep","recurrentJSONTypes","drawInput","pixelX","pixelY","radius","fontSize","fontClassName","svg","className","drawNeuron","hidden","drawOutput","drawBackwardConnections","lineY","neuralNetworkToSVG","previousSize","rnnToSVG","recurrentLine","drawRecurrentConnections","moveX","moveY","x1","y1","x2","y2","getFeedForwardLayers","layerCount","getRecurrentLayers","wrapSVG","svgBody","getSizes","toSVG","mergedOptions","isRNN","layerTypes","likely","brain","recurrent","utilities"],"mappings":"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AAG,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,MAAM,GAAG,KAAK,GAAG,IAAI,EAAE,KAAK,GAAG,KAAK,KAAK,KAEpuCC,EAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,GAAG,IAAI,GAAG,EA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","file":"brain-browser.min.js","sourceRoot":"../src","sourcesContent":["/**\n * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return weight > 0 ? weight : 0.01 * weight;\n}\n\n/**\n * Leaky Relu derivative\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return weight > 0 ? error : 0.01 * error;\n}\n\nmodule.exports = { activate, measure };\n","/**\n * Relu Activation, aka Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return Math.max(0, weight);\n}\n\n/**\n * Relu derivative\n * @param weight\n * @param delta\n * @returns {number}\n */\nfunction measure(weight, delta) {\n  if (weight <= 0) {\n    return 0;\n  }\n  return delta;\n}\n\nmodule.exports = { activate, measure };\n","/**\n * sigmoid activation\n * @param value\n * @returns {number}\n */\nfunction activate(value) {\n  return 1 / (1 + Math.exp(-value));\n}\n\n/**\n * sigmoid derivative\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return weight * (1 - weight) * error;\n}\n\nmodule.exports = { activate, measure };\n","/**\n *\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return Math.tanh(weight);\n}\n\n/**\n * @description grad for z = tanh(x) is (1 - z^2)\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return (1 - weight * weight) * error;\n}\n\nmodule.exports = { activate, measure };\n","const leakyRelu = require('./leaky-relu');\nconst relu = require('./relu');\nconst sigmoid = require('./sigmoid');\nconst tanh = require('./tanh');\n\nmodule.exports = { leakyRelu, relu, sigmoid, tanh };\n","class CrossValidate {\n\n  /**\n   *\n   * @param {NeuralNetwork|constructor} Classifier\n   * @param {object} [options]\n   */\n  constructor(Classifier, options) {\n    this.Classifier = Classifier;\n    this.options = options;\n    this.json = null;\n  }\n\n  /**\n   *\n   * @param {object} trainOpts\n   * @param {object} trainSet\n   * @param {object} testSet\n   * @returns {void|*}\n   */\n  testPartition(trainOpts, trainSet, testSet) {\n    const classifier = new this.Classifier(this.options);\n    const beginTrain = Date.now();\n    const trainingStats = classifier.train(trainSet, trainOpts);\n    const beginTest = Date.now();\n    const testStats = classifier.test(testSet);\n    const endTest = Date.now();\n    const stats = Object.assign({}, testStats, {\n      trainTime: beginTest - beginTrain,\n      testTime: endTest - beginTest,\n      iterations: trainingStats.iterations,\n      error: trainingStats.error,\n      total: testStats.total,\n      learningRate: classifier.trainOpts.learningRate,\n      hiddenLayers: classifier.hiddenLayers,\n      network: classifier.toJSON()\n    });\n\n    return stats;\n  }\n\n  /**\n   * Randomize array element order in-place.\n   * Using Durstenfeld shuffle algorithm.\n   * source: http://stackoverflow.com/a/12646864/1324039\n   */\n  shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} trainOpts\n   * @param {number} [k]\n   * @returns {\n   *  {\n   *    avgs: {\n   *      error: number,\n   *      trainTime: number,\n   *      testTime: number,\n   *      iterations: number,\n   *      error: number\n   *    },\n   *    stats: {\n   *      truePos: number,\n   *      trueNeg: number,\n   *      falsePos: number,\n   *      falseNeg: number,\n   *      total: number\n   *    },\n   *    sets: Array\n   *  }\n   * }\n   */\n  train(data, trainOpts = {}, k = 4) {\n    if (data.length < k) {\n      throw new Error(`Training set size is too small for ${ data.length } k folds of ${ k }`);\n    }\n\n    const size = data.length / k;\n\n    if (data.constructor === Array) {\n      this.shuffleArray(data);\n    } else {\n      const newData = {};\n      this.shuffleArray(Object.keys(data)).forEach((key) => {\n        newData[key] = data[key];\n      });\n      data = newData;\n    }\n\n    const avgs = {\n      trainTime: 0,\n      testTime: 0,\n      iterations: 0,\n      error: 0\n    };\n\n    const stats = {\n      total: 0\n    };\n\n    const binaryStats = {\n      total: 0,\n      truePos: 0,\n      trueNeg: 0,\n      falsePos: 0,\n      falseNeg: 0\n    };\n\n    const results = [];\n    let stat;\n    let isBinary = null;\n\n    for (let i = 0; i < k; i++) {\n      const dclone = data.slice(0);\n      const testSet = dclone.splice(i * size, size);\n      const trainSet = dclone;\n      const result = this.testPartition(trainOpts, trainSet, testSet);\n\n      if (isBinary === null) {\n        isBinary =\n          result.hasOwnProperty('falseNeg')\n          && result.hasOwnProperty('falsePos')\n          && result.hasOwnProperty('trueNeg')\n          && result.hasOwnProperty('truePos');\n        if (isBinary) {\n          Object.assign(stats, binaryStats);\n        }\n      }\n\n      for (stat in avgs) {\n        if (stat in avgs) {\n          avgs[stat] += result[stat];\n        }\n      }\n\n      for (stat in stats) {\n        if (stat in stats) {\n          stats[stat] += result[stat];\n        }\n      }\n\n      results.push(result);\n    }\n\n    for (stat in avgs) {\n      if (stat in avgs) {\n        avgs[stat] /= k;\n      }\n    }\n\n    if (isBinary) {\n      stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\n      stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\n      stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\n    }\n\n    stats.testSize = size;\n    stats.trainSize = data.length - size;\n\n\n    return this.json = {\n      avgs: avgs,\n      stats: stats,\n      sets: results\n    };\n  }\n\n  toNeuralNetwork() {\n    return this.fromJSON(this.json);\n  }\n\n  toJSON() {\n    return this.json;\n  }\n\n  fromJSON(crossValidateJson) {\n    const Classifier = this.Classifier;\n    const json = crossValidateJson.sets.reduce((prev, cur) => prev.error < cur.error ? prev : cur, {error: Infinity}).network;\n    if (Classifier.fromJSON) {\n      return Classifier.fromJSON(json);\n    }\n    const instance = new Classifier();\n    instance.fromJSON(json);\n    return instance;\n  }\n}\n\nmodule.exports = CrossValidate;\n","/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated JavaScript\n *\n * @version 2.9.4\n * @date Sat May 02 2020 11:46:49 GMT-0400 (Eastern Daylight Time)\n *\n * @license MIT\n * The MIT License\n *\n * Copyright (c) 2020 gpu.js Team\n */(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GPU = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, function (exports) { 'use strict';\n\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];\n\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n\n\n\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n\n  var keywords$1 = {};\n\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n\n  var defaultOptions = {\n    ecmaVersion: 10,\n    sourceType: \"script\",\n    onInsertedSemicolon: null,\n    onTrailingComma: null,\n    allowReserved: null,\n    allowReturnOutsideFunction: false,\n    allowImportExportEverywhere: false,\n    allowAwaitOutsideFunction: false,\n    allowHashBang: false,\n    locations: false,\n    onToken: null,\n    onComment: null,\n    ranges: false,\n    program: null,\n    sourceFile: null,\n    directSourceFile: null,\n    preserveParens: false\n  };\n\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  var\n      BIND_NONE = 0, \n      BIND_VAR = 1, \n      BIND_LEXICAL = 2, \n      BIND_FUNCTION = 3, \n      BIND_SIMPLE_CATCH = 4, \n      BIND_OUTSIDE = 5; \n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    this.containsEsc = false;\n\n\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    this.potentialArrowAt = -1;\n\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    this.labels = [];\n    this.undefinedExports = {};\n\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n\n  var literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") { return true }\n      start += match[0].length;\n\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) { return true } \n    if (context) { return false }\n\n    if (nextCh === 123) { return true } \n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40) \n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); \n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n\n  pp$1.parseBlock = function(createNewLexicalScope, node) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (!this.eat(types.braceR)) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.strict = oldStrict;\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    if (this.eat(types.star)) {\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { \n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { \n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n\n  var pp$3 = Parser.prototype;\n\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0)\n              { refDestructuringErrors.doubleProto = key.start; }\n          } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n\n\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= node.left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } \n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n      if (element === base || element.type === \"ArrowFunctionExpression\") { return element }\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n    var computed = this.eat(types.bracketL);\n    if (computed || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n    this.next(); \n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); \n\n    node.source = this.parseMaybeAssign();\n\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\" || containsEsc)\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      node.body = this.parseBlock(false);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n\n    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n    this.strict = oldStrict;\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, false);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n  };\n\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  RegExpValidationState.prototype.at = function at (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current () {\n    return this.at(this.pos)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead () {\n    return this.at(this.nextIndex(this.pos))\n  };\n\n  RegExpValidationState.prototype.advance = function advance () {\n    this.pos = this.nextIndex(this.pos);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch) {\n    if (this.current() === ch) {\n      this.advance();\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      if (state.eat(0x29 )) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D ) || state.eat(0x7D )) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C )) {\n      this.regexp_alternative(state);\n    }\n\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    if (state.eat(0x5E ) || state.eat(0x24 )) {\n      return true\n    }\n\n    if (state.eat(0x5C )) {\n      if (state.eat(0x42 ) || state.eat(0x62 )) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    if (state.eat(0x28 ) && state.eat(0x3F )) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C );\n      }\n      if (state.eat(0x3D ) || state.eat(0x21 )) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 )) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F );\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A ) ||\n      state.eat(0x2B ) ||\n      state.eat(0x3F ) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B )) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D )) {\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 )) {\n      if (state.eat(0x3F ) && state.eat(0x3A )) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 )) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 )) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F ) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 )) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24  ||\n      ch >= 0x28  && ch <= 0x2B  ||\n      ch === 0x2E  ||\n      ch === 0x3F  ||\n      ch >= 0x5B  && ch <= 0x5E  ||\n      ch >= 0x7B  && ch <= 0x7D \n    )\n  }\n\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24  &&\n      !(ch >= 0x28  && ch <= 0x2B ) &&\n      ch !== 0x2E  &&\n      ch !== 0x3F  &&\n      ch !== 0x5B  &&\n      ch !== 0x5E  &&\n      ch !== 0x7C \n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F )) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C )) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24  || ch === 0x5F \n  }\n\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch === 0x200C  || ch === 0x200D \n  }\n\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      if (state.current() === 0x63 ) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B )) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 )) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30  && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 ) {\n      state.lastIntValue = 0x09; \n      state.advance();\n      return true\n    }\n    if (ch === 0x6E ) {\n      state.lastIntValue = 0x0A; \n      state.advance();\n      return true\n    }\n    if (ch === 0x76 ) {\n      state.lastIntValue = 0x0B; \n      state.advance();\n      return true\n    }\n    if (ch === 0x66 ) {\n      state.lastIntValue = 0x0C; \n      state.advance();\n      return true\n    }\n    if (ch === 0x72 ) {\n      state.lastIntValue = 0x0D; \n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41  && ch <= 0x5A ) ||\n      (ch >= 0x61  && ch <= 0x7A )\n    )\n  }\n\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x75 )) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C ) && state.eat(0x75 ) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        state.switchU &&\n        state.eat(0x7B ) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D ) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F )) {\n        state.lastIntValue = 0x2F; \n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63  && (!state.switchN || ch !== 0x6B )) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31  && ch <= 0x39 ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30  && ch <= 0x39 )\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50  || ch === 0x70 )\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B ) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D )\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64  ||\n      ch === 0x44  ||\n      ch === 0x73  ||\n      ch === 0x53  ||\n      ch === 0x77  ||\n      ch === 0x57 \n    )\n  }\n\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D )) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F \n  }\n\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B )) {\n      state.eat(0x5E );\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D )) {\n        return true\n      }\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D ) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        var ch$1 = state.current();\n        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 )) {\n      state.lastIntValue = 0x08; \n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D )) {\n      state.lastIntValue = 0x2D; \n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 )) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 )) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x39 \n  }\n\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30  && ch <= 0x39 ) ||\n      (ch >= 0x41  && ch <= 0x46 ) ||\n      (ch >= 0x61  && ch <= 0x66 )\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41  && ch <= 0x46 ) {\n      return 10 + (ch - 0x41 )\n    }\n    if (ch >= 0x61  && ch <= 0x66 ) {\n      return 10 + (ch - 0x61 )\n    }\n    return ch - 0x30 \n  }\n\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; \n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x37 \n  }\n\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n\n  var pp$9 = Parser.prototype;\n\n\n  pp$9.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 )\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: \n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: \n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: \n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { \n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { \n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    case 46: \n      return this.readToken_dot()\n\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n    case 63: ++this.pos; return this.finishToken(types.question)\n\n    case 96: \n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: \n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } \n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } \n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } \n      }\n\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: \n      return this.readNumber(false)\n\n    case 34: case 39: \n      return this.readString(code)\n\n\n    case 47: \n      return this.readToken_slash()\n\n    case 37: case 42: \n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: \n      return this.readToken_pipe_amp(code)\n\n    case 94: \n      return this.readToken_caret()\n\n    case 43: case 45: \n      return this.readToken_plus_min(code)\n\n    case 60: case 62: \n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: \n      return this.readToken_eq_excl(code)\n\n    case 126: \n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n\n  pp$9.readInt = function(radix, len) {\n    var start = this.pos, total = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n      if (code >= 97) { val = code - 97 + 10; } \n      else if (code >= 65) { val = code - 65 + 10; } \n      else if (code >= 48 && code <= 57) { val = code - 48; } \n      else { val = Infinity; }\n      if (val >= radix) { break }\n      ++this.pos;\n      total = total * radix + val;\n    }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; \n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = typeof BigInt !== \"undefined\" ? BigInt(this.input.slice(start, this.pos)) : null;\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var str$1 = this.input.slice(start, this.pos);\n      var val$1 = typeof BigInt !== \"undefined\" ? BigInt(str$1) : null;\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { \n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { \n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } \n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var str = this.input.slice(start, this.pos);\n    var val = octal ? parseInt(str, 8) : parseFloat(str);\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { \n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { \n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" \n    case 114: return \"\\r\" \n    case 120: return String.fromCharCode(this.readHexChar(2)) \n    case 117: return codePointToString$1(this.readCodePoint()) \n    case 116: return \"\\t\" \n    case 98: return \"\\b\" \n    case 118: return \"\\u000b\" \n    case 102: return \"\\f\" \n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } \n    case 10: \n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n\n        return null\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { \n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) \n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n\n  var version = \"7.1.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { \n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); \n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n\n},{}],4:[function(require,module,exports){\nfunction setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  const mockMethod = () => kernel;\n  const methods = [\n    'setWarnVarUsage',\n    'setArgumentTypes',\n    'setTactic',\n    'setOptimizeFloatMemory',\n    'setDebug',\n    'setLoopMaxIterations',\n    'setConstantTypes',\n    'setFunctions',\n    'setNativeFunctions',\n    'setInjectedNative',\n    'setPipeline',\n    'setPrecision',\n    'setOutputToTexture',\n    'setImmutable',\n    'setStrictIntegers',\n    'setDynamicOutput',\n    'setHardcodeConstants',\n    'setDynamicArguments',\n    'setUseLegacyEncoder',\n    'setWarnVarUsage',\n    'addSubKernel',\n  ];\n  for (let i = 0; i < methods.length; i++) {\n    kernel[methods[i]] = mockMethod;\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  const halfHeight = height / 2 | 0; \n  const bytesPerRow = width * 4;\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n\n},{}],5:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};\n},{\"./utils\":114}],6:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass CPUFunctionNode extends FunctionNode {\n  astFunction(ast, retArr) {\n\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      retArr.push(') {\\n');\n    }\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          retArr.push('user_' + idtNode.name);\n        }\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      const declaration = declarations[i];\n      const info = this.getDeclaration(declaration.id);\n      if (!info.valueType) {\n        info.valueType = this.getType(declaration.init);\n      }\n      this.astGeneric(declaration, retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'value.value[]': \n        if (this.removeIstanbulCoverage) {\n          return retArr;\n        }\n        retArr.push(`${mNode.object.object.name}.${mNode.object.property.name}[${mNode.property.value}]`);\n        return retArr;\n      case 'value.value[][]': \n        if (this.removeIstanbulCoverage) {\n          return retArr;\n        }\n        retArr.push(`${mNode.object.object.object.name}.${mNode.object.object.property.name}[${mNode.object.property.value}][${mNode.property.value}]`);\n        return retArr;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const arrLen = arrNode.elements.length;\n\n    retArr.push('new Float32Array([');\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push('])');\n\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};\n},{\"../function-node\":10}],7:[function(require,module,exports){\nconst { utils } = require('../../utils');\n\nfunction constantsToString(constants, types) {\n  const results = [];\n  for (const name in types) {\n    if (!types.hasOwnProperty(name)) continue;\n    const type = types[name];\n    const constant = constants[name];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n        results.push(`${name}:${constant}`);\n        break;\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\n        break;\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants: incomingConstants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`,\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},',\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`,\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    });\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};\n},{\"../../utils\":114}],8:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`Looking up native function return type not supported on ${this.name}`);\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return 'cpu' + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this._prependedString = [];\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = [];\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      });\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\n  ${ this.injectedNative || '' }\n  const _this = this;\n  ${ this._resultKernelHeader() }\n  ${ this._processConstants() }\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._prependedString.join('') }\n    ${ this._earlyThrows() }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n  }\n\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLCanvas':\n        case 'HTMLImage':\n        case 'HTMLVideo':\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _earlyThrows() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    const arrayArguments = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      if (this.argumentTypes[i] === 'Array') {\n        arrayArguments.push(this.argumentNames[i]);\n      }\n    }\n    if (arrayArguments.length === 0) return '';\n    const checks = [];\n    for (let i = 0; i < arrayArguments.length; i++) {\n      const argumentName = arrayArguments[i];\n      const checkSubKernels = this._mapSubKernels(subKernel => `user_${argumentName} === result_${subKernel.name}`).join(' || ');\n      checks.push(`user_${argumentName} === result${checkSubKernels ? ` || ${checkSubKernels}` : ''}`);\n    }\n    return `if (${checks.join(' || ')}) throw new Error('Source and destination arrays are the same.  Use immutable = true');`;\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLCanvas':\n        case 'HTMLImage':\n        case 'HTMLVideo':\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _mediaTo2DArray(media) {\n    const canvas = this.canvas;\n    const width = media.width > 0 ? media.width : media.videoWidth;\n    const height = media.height > 0 ? media.height : media.videoHeight;\n    if (canvas.width < width) {\n      canvas.width = width;\n    }\n    if (canvas.height < height) {\n      canvas.height = height;\n    }\n    const ctx = this.context;\n    ctx.drawImage(media, 0, 0, width, height);\n    const pixelsData = ctx.getImageData(0, 0, width, height).data;\n    const imageArray = new Array(height);\n    let index = 0;\n    for (let y = height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; \n        pixel[1] = pixelsData[index++] / 255; \n        pixel[2] = pixelsData[index++] / 255; \n        pixel[3] = pixelsData[index++] / 255; \n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelHeader() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    switch (this.output.length) {\n      case 1:\n        return this._mutableKernel1DResults();\n      case 2:\n        return this._mutableKernel2DResults();\n      case 3:\n        return this._mutableKernel3DResults();\n    }\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmutableKernel1DLoop(kernelString)) + this._kernelOutput();\n      case 2:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString)) + this._kernelOutput();\n      case 3:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultImmutableKernel1DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _mutableKernel1DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }`;\n  }\n\n  _resultMutableKernel1DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultImmutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _mutableKernel2DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n    }`;\n  }\n\n  _resultMutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y];\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultImmutableKernel3DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _mutableKernel3DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n      }\n    }`;\n  }\n\n  _resultMutableKernel3DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z];\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y];\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n\n  prependString(value) {\n    if (this._kernelString) throw new Error('Kernel already built');\n    this._prependedString.push(value);\n  }\n\n  hasPrependString(value) {\n    return this._prependedString.indexOf(value) > -1;\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../kernel\":36,\"./function-node\":6,\"./kernel-string\":7}],9:[function(require,module,exports){\nclass FunctionBuilder {\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n      onIstanbulCoverageVariable,\n      removeIstanbulCoverage,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i];\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerImplyArgumentBitRatio = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, returnType) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(null, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerImplyArgumentBitRatio,\n      onFunctionCall,\n      onIstanbulCoverageVariable: onIstanbulCoverageVariable ? (name) => onIstanbulCoverageVariable(name, kernel) : null,\n      removeIstanbulCoverage,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n        onNestedFunction,\n        onIstanbulCoverageVariable: onIstanbulCoverageVariable ? (name) => onIstanbulCoverageVariable(name, kernel) : null,\n        removeIstanbulCoverage,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      if (retList.indexOf(functionName) === -1) {\n        retList.push(functionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); \n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          if (this.lookupChain[i].ast === ast) {\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    return null;\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      }\n    }\n    const node = this._getFunction(functionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error('argument not found');\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error('argument bit ratio not found');\n    }\n    return bitRatio;\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    const node = this._getFunction(functionName);\n    if (this._isNativeFunction(calleeFunctionName)) return null;\n    const calleeNode = this._getFunction(calleeFunctionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`);\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`);\n    }\n    if (!calleeNode.argumentBitRatios) {\n      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);\n    }\n    const calleeBitRatio = calleeNode.argumentBitRatios[i];\n    if (typeof calleeBitRatio === 'number') {\n      if (calleeBitRatio !== bitRatio) {\n        throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`);\n      }\n      return calleeBitRatio;\n    }\n    calleeNode.argumentBitRatios[i] = bitRatio;\n    return bitRatio;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};\n},{}],10:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\nclass FunctionNode {\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerImplyArgumentBitRatio = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.onIstanbulCoverageVariable = null;\n    this.removeIstanbulCoverage = false;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        if (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, inForLoopInit, inForLoopTest } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (inForLoopInit && inForLoopTest) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      declaration.valueType = valueType;\n      declaration.dependencies = dependencies;\n      declaration.isSafe = this.isSafeDependencies(dependencies);\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i]);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast) {\n        return identifier.declaration;\n      }\n    }\n    return null;\n  }\n\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = this.astKey(ast);\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            if (this.getVariableSignature(ast.callee, true) === 'this.color') {\n              return null;\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'LogicalExpression':\n          return 'Boolean';\n        case 'BinaryExpression':\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              return this.getCheckVariableType(ast);\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getCheckVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n              case 'fn()[][]':\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                  case 'g':\n                  case 'b':\n                  case 'a':\n                    return this.getLookupType(this.getCheckVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        case 'SequenceExpression':\n          return this.getType(ast.expressions[ast.expressions.length - 1]);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  getCheckVariableType(ast) {\n    const type = this.getVariableType(ast);\n    if (!type) {\n      throw this.astErrorOutput(`${ast.type} is not defined`, ast);\n    }\n    return type;\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'acosh',\n      'asin',\n      'asinh',\n      'atan',\n      'atan2',\n      'atanh',\n      'cbrt',\n      'ceil',\n      'clz32',\n      'cos',\n      'cosh',\n      'expm1',\n      'exp',\n      'floor',\n      'fround',\n      'imul',\n      'log',\n      'log2',\n      'log10',\n      'log1p',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sinh',\n      'sqrt',\n      'tan',\n      'tanh',\n      'trunc',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'ConditionalExpression':\n        this.getDependencies(ast.test, dependencies, isNotSafe);\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        case 'SequenceExpression':\n          return this.getDependencies(ast.expressions, dependencies, isNotSafe);\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast, returnRawValue) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        }\n      } else if (ast.name) {\n        signature.unshift(returnRawValue ? ast.name : 'value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift(returnRawValue ? ast.callee.name + '()' : 'fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    if (returnRawValue) {\n      return signatureString;\n    }\n\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.value[]', \n      'value.value[][]', \n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[this.astKey(ast)] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  isIstanbulAST(ast) {\n    const variableSignature = this.getVariableSignature(ast);\n    return variableSignature === 'value.value[]' || variableSignature === 'value.value[][]';\n  }\n  astSequenceExpression(sNode, retArr) {\n    const { expressions } = sNode;\n    const sequenceResult = [];\n    for (let i = 0; i < expressions.length; i++) {\n      const expression = expressions[i];\n      if (this.removeIstanbulCoverage) {\n        if (expression.type === 'UpdateExpression' && this.isIstanbulAST(expression.argument)) {\n          continue;\n        }\n      }\n      const expressionResult = [];\n      this.astGeneric(expression, expressionResult);\n      sequenceResult.push(expressionResult.join(''));\n    }\n    if (sequenceResult.length > 1) {\n      retArr.push('(', sequenceResult.join(','), ')');\n    } else {\n      retArr.push(sequenceResult[0]);\n    }\n    return retArr;\n  }\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  astUpdateExpression(uNode, retArr) {\n    if (this.removeIstanbulCoverage) {\n      const signature = this.getVariableSignature(uNode.argument);\n      if (this.isIstanbulAST(uNode.argument)) {\n        return retArr;\n      }\n    }\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        case 'value.value[]': \n          if (this.removeIstanbulCoverage) {\n            return { signature: variableSignature };\n          }\n          if (this.onIstanbulCoverageVariable) {\n            this.onIstanbulCoverageVariable(ast.object.object.name);\n            return {\n              signature: variableSignature\n            };\n          }\n          case 'value.value[][]': \n            if (this.removeIstanbulCoverage) {\n              return { signature: variableSignature };\n            }\n            if (this.onIstanbulCoverageVariable) {\n              this.onIstanbulCoverageVariable(ast.object.object.object.name);\n              return {\n                signature: variableSignature\n              };\n            }\n            default:\n              throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  astKey(ast, separator = ',') {\n    if (!ast.start || !ast.end) throw new Error('AST start and end needed');\n    return `${ast.start}${separator}${ast.end}`;\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLCanvas': 'Array(4)',\n  'HTMLImage': 'Array(4)',\n  'HTMLVideo': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};\n},{\"../utils\":114,\"./function-tracer\":11,\"acorn\":1}],11:[function(require,module,exports){\nconst { utils } = require('../utils');\n\nfunction last(array) {\n  return array.length > 0 ? array[array.length - 1] : null;\n}\n\nconst states = {\n  trackIdentifiers: 'trackIdentifiers',\n  memberExpression: 'memberExpression',\n  inForLoopInit: 'inForLoopInit'\n};\n\nclass FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.functionContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.trackedIdentifiers = null;\n    this.states = [];\n    this.newFunctionContext();\n    this.scan(ast);\n  }\n\n  isState(state) {\n    return this.states[this.states.length - 1] === state;\n  }\n\n  hasState(state) {\n    return this.states.indexOf(state) > -1;\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.isState(state)) {\n      this.states.pop();\n    } else {\n      throw new Error(`Cannot pop the non-active state \"${state}\"`);\n    }\n  }\n\n  get currentFunctionContext() {\n    return last(this.functionContexts);\n  }\n\n  get currentContext() {\n    return last(this.runningContexts);\n  }\n\n  newFunctionContext() {\n    const newContext = { '@contextType': 'function' };\n    this.contexts.push(newContext);\n    this.functionContexts.push(newContext);\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({ '@contextType': 'const/let' }, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    const { currentFunctionContext } = this;\n    for (const p in currentFunctionContext) {\n      if (!currentFunctionContext.hasOwnProperty(p) || newContext.hasOwnProperty(p)) continue;\n      newContext[p] = currentFunctionContext[p];\n    }\n    this.runningContexts.pop();\n    return newContext;\n  }\n\n  useFunctionContext(run) {\n    const functionContext = last(this.functionContexts);\n    this.runningContexts.push(functionContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  getIdentifiers(run) {\n    const trackedIdentifiers = this.trackedIdentifiers = [];\n    this.pushState(states.trackIdentifiers);\n    run();\n    this.trackedIdentifiers = null;\n    this.popState(states.trackIdentifiers);\n    return trackedIdentifiers;\n  }\n\n  getDeclaration(name) {\n    const { currentContext, currentFunctionContext, runningContexts } = this;\n    const declaration = currentContext[name] || currentFunctionContext[name] || null;\n\n    if (\n      !declaration &&\n      currentContext === currentFunctionContext &&\n      runningContexts.length > 0\n    ) {\n      const previousRunningContext = runningContexts[runningContexts.length - 2];\n      if (previousRunningContext[name]) {\n        return previousRunningContext[name];\n      }\n    }\n\n    return declaration;\n  }\n\n  scan(ast) {\n    if (!ast) return;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.useFunctionContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n        if (ast.operator === '++') {\n          const declaration = this.getDeclaration(ast.argument.name);\n          if (declaration) {\n            declaration.suggestedType = 'Integer';\n          }\n        }\n        this.scan(ast.argument);\n        break;\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        if (ast.kind === 'var') {\n          this.useFunctionContext(() => {\n            ast.declarations = utils.normalizeDeclarations(ast);\n            this.scan(ast.declarations);\n          });\n        } else {\n          ast.declarations = utils.normalizeDeclarations(ast);\n          this.scan(ast.declarations);\n        }\n        break;\n      case 'VariableDeclarator': {\n        const { currentContext } = this;\n        const inForLoopInit = this.hasState(states.inForLoopInit);\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          inForLoopInit,\n          inForLoopTest: null,\n          assignable: currentContext === this.currentFunctionContext || (!inForLoopInit && !currentContext.hasOwnProperty(ast.id.name)),\n          suggestedType: null,\n          valueType: null,\n          dependencies: null,\n          isSafe: null,\n        };\n        if (!currentContext[ast.id.name]) {\n          currentContext[ast.id.name] = declaration;\n        }\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      }\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement': {\n        let testIdentifiers;\n        const context = this.newContext(() => {\n          this.pushState(states.inForLoopInit);\n          this.scan(ast.init);\n          this.popState(states.inForLoopInit);\n\n          testIdentifiers = this.getIdentifiers(() => {\n            this.scan(ast.test);\n          });\n\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n\n        if (testIdentifiers) {\n          for (const p in context) {\n            if (p === '@contextType') continue;\n            if (testIdentifiers.indexOf(p) > -1) {\n              context[p].inForLoopTest = true;\n            }\n          }\n        }\n        break;\n      }\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier': {\n        if (this.isState(states.trackIdentifiers)) {\n          this.trackedIdentifiers.push(ast.name);\n        }\n        this.identifiers.push({\n          context: this.currentContext,\n          declaration: this.getDeclaration(ast.name),\n          ast,\n        });\n        break;\n      }\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.pushState(states.memberExpression);\n        this.scan(ast.object);\n        this.scan(ast.property);\n        this.popState(states.memberExpression);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'SequenceExpression':\n        this.scan(ast.expressions);\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n\n      case 'ThisExpression':\n      case 'Literal':\n      case 'DebuggerStatement':\n      case 'EmptyStatement':\n      case 'BreakStatement':\n      case 'ContinueStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};\n},{\"../utils\":114}],12:[function(require,module,exports){\nconst { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  if (!originKernel.built) {\n    originKernel.build.apply(originKernel, args);\n  }\n  args = args ? Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'boolean':\n        return new Boolean(arg);\n      case 'number':\n        return new Number(arg);\n      default:\n        return arg;\n    }\n  }) : null;\n  const uploadedValues = [];\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\n      if (argumentName) {\n        return argumentName;\n      }\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\n      if (constantName) {\n        return constantName;\n      }\n      return null;\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n    tactic,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    tactic,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, args);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('    /** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\n  });\n  result.push('    /** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    if (kernel.renderKernels) {\n      const results = kernel.renderKernels();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName) }\n      },`);\n      const { subKernels, mappedTextures } = kernel;\n      for (let i = 0; i < subKernels.length; i++) {\n        const texture = mappedTextures[i];\n        const subKernel = subKernels[i];\n        const subKernelResult = results[subKernel.property];\n        const subKernelTextureName = context.getContextVariableName(texture.texture);\n        result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName) }\n      },`);\n      }\n      result.push(`    };`);\n    } else {\n      const rendered = kernel.renderOutput();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n        texture: ${ textureName },\n        type: '${ rendered.type }',\n        toArray: ${ getToArrayString(rendered, textureName) }\n      };`);\n    }\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`  innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${  kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property, isDeclaration) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (property === 'context') {\n        if (isDeclaration) return null;\n        return 'gl';\n      }\n      if (property === '_framebuffer') {\n        return '_framebuffer';\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  let _framebuffer;\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\n\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\n  if (argument === null) return null;\n  if (kernelValues === null) return null;\n  switch (typeof argument) {\n    case 'boolean':\n    case 'number':\n      return null;\n  }\n  if (\n    typeof HTMLImageElement !== 'undefined' &&\n    argument instanceof HTMLImageElement\n  ) {\n    for (let i = 0; i < kernelValues.length; i++) {\n      const kernelValue = kernelValues[i];\n      if (kernelValue.type !== 'HTMLImageArray' && kernelValue) continue;\n      if (kernelValue.uploadValue !== argument) continue;\n      const variableIndex = values[i].indexOf(argument);\n      if (variableIndex === -1) continue;\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\n      context.insertVariable(variableName, argument);\n      return variableName;\n    }\n  }\n\n  for (let i = 0; i < kernelValues.length; i++) {\n    const kernelValue = kernelValues[i];\n    if (argument !== kernelValue.uploadValue) continue;\n    const variable = `uploadValue_${kernelValue.name}`;\n    context.insertVariable(variable, kernelValue);\n    return variable;\n  }\n  return null;\n}\n\nmodule.exports = {\n  glKernelString\n};\n},{\"../../utils\":114,\"gl-wiretap\":3}],13:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number',\n      tactic: 'speed',\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  static getIsSpeedTacticSupported() {\n    function kernelFunction(value) {\n      return value[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [4],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [0, 1, 2, 3]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return Math.round(result[0]) === 0 && Math.round(result[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;\n  }\n\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.switchingKernels = null;\n    this._textureSwitched = null;\n    this._mappedTextureSwitched = null;\n  }\n\n  checkTextureSize() {\n    const { features } = this.constructor;\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\n    }\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n          }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  getFloatTacticDeclaration() {\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    return `precision ${variablePrecision} float;\\n`;\n  }\n\n  getIntTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic, true)} int;\\n`;\n  }\n\n  getSampler2DTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\\n`;\n  }\n\n  getSampler2DArrayTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DArray;\\n`;\n  }\n\n  renderTexture() {\n    return this.immutable ? this.texture.clone() : this.texture;\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    if (this.immutable) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i].clone();\n      }\n    } else {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i];\n      }\n    }\n    return result;\n  }\n\n  resetSwitchingKernels() {\n    const existingValue = this.switchingKernels;\n    this.switchingKernels = null;\n    return existingValue;\n  }\n\n  setOutput(output) {\n    const newOutput = this.toKernelOutput(output);\n    if (this.program) {\n      if (!this.dynamicOutput) {\n        throw new Error('Resizing a kernel with dynamicOutput: false is not possible');\n      }\n      const newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];\n      const newTexSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, newThreadDim);\n      const oldTexSize = this.texSize;\n      if (oldTexSize) {\n        const oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);\n        const newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);\n        if (oldPrecision !== newPrecision) {\n          if (this.debug) {\n            console.warn('Precision requirement changed, asking GPU instance to recompile');\n          }\n          this.switchKernels({\n            type: 'outputPrecisionMismatch',\n            precision: newPrecision,\n            needed: output\n          });\n          return;\n        }\n      }\n      this.output = newOutput;\n      this.threadDim = newThreadDim;\n      this.texSize = newTexSize;\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      if (this.texture) {\n        this.texture.delete();\n      }\n      this.texture = null;\n      this._setupOutputTexture();\n      if (this.mappedTextures && this.mappedTextures.length > 0) {\n        for (let i = 0; i < this.mappedTextures.length; i++) {\n          this.mappedTextures[i].delete();\n        }\n        this.mappedTextures = null;\n        this._setupSubOutputTextures();\n      }\n    } else {\n      this.output = newOutput;\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n  switchKernels(reason) {\n    if (this.switchingKernels) {\n      this.switchingKernels.push(reason);\n    } else {\n      this.switchingKernels = [reason];\n    }\n  }\n  getVariablePrecisionString(textureSize = this.texSize, tactic = this.tactic, isInt = false) {\n    if (!tactic) {\n      if (!this.constructor.features.isSpeedTacticSupported) return 'highp';\n      const low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];\n      const medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];\n      const high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];\n      const requiredSize = Math.log2(textureSize[0] * textureSize[1]);\n      if (requiredSize <= low.rangeMax) {\n        return 'lowp';\n      } else if (requiredSize <= medium.rangeMax) {\n        return 'mediump';\n      } else if (requiredSize <= high.rangeMax) {\n        return 'highp';\n      } else {\n        throw new Error(`The required size exceeds that of the ability of your system`);\n      }\n    }\n    switch (tactic) {\n      case 'speed':\n        return 'lowp';\n      case 'balanced':\n        return 'mediump';\n      case 'precision':\n        return 'highp';\n      default:\n        throw new Error(`Unknown tactic \"${tactic}\" use \"speed\", \"balanced\", \"precision\", or empty for auto`);\n    }\n  }\n\n  updateTextureArgumentRefs(kernelValue, arg) {\n    if (!this.immutable) return;\n    if (this.texture.texture === arg.texture) {\n      const { prevArg } = kernelValue;\n      if (prevArg) {\n        if (prevArg.texture._refs === 1) {\n          this.texture.delete();\n          this.texture = prevArg.clone();\n          this._textureSwitched = true;\n        }\n        prevArg.delete();\n      }\n      kernelValue.prevArg = arg.clone();\n    } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n      const { mappedTextures } = this;\n      for (let i = 0; i < mappedTextures.length; i++) {\n        const mappedTexture = mappedTextures[i];\n        if (mappedTexture.texture === arg.texture) {\n          const { prevArg } = kernelValue;\n          if (prevArg) {\n            if (prevArg.texture._refs === 1) {\n              mappedTexture.delete();\n              mappedTextures[i] = prevArg.clone();\n              this._mappedTextureSwitched[i] = true;\n            }\n            prevArg.delete();\n          }\n          kernelValue.prevArg = arg.clone();\n          return;\n        }\n      }\n    }\n  }\n\n  onActivate(previousKernel) {\n    this._textureSwitched = true;\n    this.texture = previousKernel.texture;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        this._mappedTextureSwitched[i] = true;\n      }\n      this.mappedTextures = previousKernel.mappedTextures;\n    }\n  }\n\n  initCanvas() {}\n}\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel\n};\n},{\"../../utils\":114,\"../kernel\":36,\"./texture/array-2-float\":16,\"./texture/array-2-float-2d\":14,\"./texture/array-2-float-3d\":15,\"./texture/array-3-float\":19,\"./texture/array-3-float-2d\":17,\"./texture/array-3-float-3d\":18,\"./texture/array-4-float\":22,\"./texture/array-4-float-2d\":20,\"./texture/array-4-float-3d\":21,\"./texture/float\":25,\"./texture/float-2d\":23,\"./texture/float-3d\":24,\"./texture/graphical\":26,\"./texture/memory-optimized\":30,\"./texture/memory-optimized-2d\":28,\"./texture/memory-optimized-3d\":29,\"./texture/unsigned\":33,\"./texture/unsigned-2d\":31,\"./texture/unsigned-3d\":32}],14:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],15:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],16:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};\n},{\"../../../utils\":114,\"./float\":25}],17:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],18:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],19:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};\n},{\"../../../utils\":114,\"./float\":25}],20:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],21:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],22:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};\n},{\"../../../utils\":114,\"./float\":25}],23:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};\n},{\"../../../utils\":114,\"./float\":25}],24:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};\n},{\"../../../utils\":114,\"./float\":25}],25:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureFloat extends GLTexture {\n  get textureType() {\n    return this.context.FLOAT;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const gl = this.context;\n    const size = this.size;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(size[0] * size[1] * 4);\n    gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};\n},{\"../../../utils\":114,\"./index\":27}],26:[function(require,module,exports){\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};\n},{\"./unsigned\":33}],27:[function(require,module,exports){\nconst { Texture } = require('../../../texture');\n\nclass GLTexture extends Texture {\n  get textureType() {\n    throw new Error(`\"textureType\" not implemented on ${ this.name }`);\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  beforeMutate() {\n    if (this.texture._refs > 1) {\n      this.newTexture();\n      return true;\n    }\n    return false;\n  }\n\n  cloneTexture() {\n    this.texture._refs--;\n    const { context: gl, size, texture, kernel } = this;\n    if (kernel.debug) {\n      console.warn('cloning internal texture');\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  newTexture() {\n    this.texture._refs--;\n    const gl = this.context;\n    const size = this.size;\n    const kernel = this.kernel;\n    if (kernel.debug) {\n      console.warn('new internal texture');\n    }\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  clear() {\n    if (this.texture._refs) {\n      this.texture._refs--;\n      const gl = this.context;\n      const target = this.texture = gl.createTexture();\n      selectTexture(gl, target);\n      const size = this.size;\n      target._refs = 1;\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    }\n    const { context: gl, texture } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n\n  delete() {\n    if (this._deleted) return;\n    this._deleted = true;\n    if (this.texture._refs) {\n      this.texture._refs--;\n      if (this.texture._refs) return;\n    }\n    this.context.deleteTexture(this.texture);\n    if (this.texture._refs === 0 && this._framebuffer) {\n      this.context.deleteFramebuffer(this._framebuffer);\n      this._framebuffer = null;\n    }\n  }\n\n  framebuffer() {\n    if (!this._framebuffer) {\n      this._framebuffer = this.context.createFramebuffer();\n    }\n    this._framebuffer.width = this.size[0];\n    this._framebuffer.height = this.size[1];\n    return this._framebuffer;\n  }\n}\n\nfunction selectTexture(gl, texture) {\n  gl.activeTexture(gl.TEXTURE15);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n}\n\nmodule.exports = { GLTexture };\n},{\"../../../texture\":113}],28:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};\n},{\"../../../utils\":114,\"./float\":25}],29:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};\n},{\"../../../utils\":114,\"./float\":25}],30:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};\n},{\"../../../utils\":114,\"./float\":25}],31:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],32:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],33:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureUnsigned extends GLTexture {\n  get textureType() {\n    return this.context.UNSIGNED_BYTE;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};\n},{\"../../../utils\":114,\"./index\":27}],34:[function(require,module,exports){\nconst getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { \n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n        WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    return getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n    return this;\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};\n},{\"../gl/kernel-string\":12,\"../web-gl/kernel\":70,\"gl\":2}],35:[function(require,module,exports){\nclass KernelValue {\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n      tactic,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.tactic = tactic;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n    this.forceUploadEachRun = null;\n  }\n\n  get id() {\n    return `${this.origin}_${name}`;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};\n},{}],36:[function(require,module,exports){\nconst { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n    this.forceUploadKernelConstants = null;\n\n\n    this.source = source;\n\n    this.output = null;\n\n    this.debug = false;\n\n    this.graphical = false;\n\n    this.loopMaxIterations = 0;\n\n    this.constants = null;\n\n    this.constantTypes = null;\n\n    this.constantBitRatios = null;\n\n    this.dynamicArguments = false;\n\n    this.dynamicOutput = false;\n\n    this.canvas = null;\n\n    this.context = null;\n\n    this.checkContext = null;\n\n    this.gpu = null;\n\n    this.functions = null;\n\n    this.nativeFunctions = null;\n\n    this.injectedNative = null;\n\n    this.subKernels = null;\n\n    this.validate = true;\n\n    this.immutable = false;\n\n    this.pipeline = false;\n\n    this.precision = null;\n\n    this.tactic = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.onIstanbulCoverageVariable = null;\n    this.removeIstanbulCoverage = false;\n    this.built = false;\n    this.signature = null;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); \n            continue;\n          }\n          break;\n        case 'functions':\n          this.functions = [];\n          for (let i = 0; i < settings.functions.length; i++) {\n            this.addFunction(settings.functions[i]);\n          }\n          continue;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n        case 'removeIstanbulCoverage':\n          if (settings[p] !== null) {\n            this[p] = settings[p];\n          }\n          continue;\n        case 'nativeFunctions':\n          if (!settings.nativeFunctions) continue;\n          this.nativeFunctions = [];\n          for (let i = 0; i < settings.nativeFunctions.length; i++) {\n            const s = settings.nativeFunctions[i];\n            const { name, source } = s;\n            this.addNativeFunction(name, source, s);\n          }\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  addFunction(source, settings = {}) {\n    if (source.name && source.source && source.argumentTypes && 'returnType' in source) {\n      this.functions.push(source);\n    } else if ('settings' in source && 'source' in source) {\n      this.functions.push(this.functionToIGPUFunction(source.source, source.settings));\n    } else if (typeof source === 'string' || typeof source === 'function') {\n      this.functions.push(this.functionToIGPUFunction(source, settings));\n    } else {\n      throw new Error(`function not properly defined`);\n    }\n    return this;\n  }\n\n  addNativeFunction(name, source, settings = {}) {\n    const { argumentTypes, argumentNames } = settings.argumentTypes ?\n      splitArgumentTypes(settings.argumentTypes) :\n      this.constructor.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.constructor.nativeFunctionReturnType(source)\n    });\n    return this;\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  toKernelOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          return [output.x, output.y, output.z];\n        } else {\n          return [output.x, output.y];\n        }\n      } else {\n        return [output.x];\n      }\n    } else {\n      return output;\n    }\n  }\n\n  setOutput(output) {\n    this.output = this.toKernelOutput(output);\n    return this;\n  }\n\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  setFunctions(functions) {\n    for (let i = 0; i < functions.length; i++) {\n      this.addFunction(functions[i]);\n    }\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    for (let i = 0; i < nativeFunctions.length; i++) {\n      const settings = nativeFunctions[i];\n      const { name, source } = settings;\n      this.addNativeFunction(name, source, settings);\n    }\n    return this;\n  }\n\n  setInjectedNative(injectedNative) {\n    this.injectedNative = injectedNative;\n    return this;\n  }\n\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setDimensions(flag) {\n    utils.warnDeprecated('method', 'setDimensions', 'setOutput');\n    this.output = flag;\n    return this;\n  }\n\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  setImmutable(flag) {\n    this.immutable = flag;\n    return this;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  setWarnVarUsage(flag) {\n    utils.warnDeprecated('method', 'setWarnVarUsage');\n    return this;\n  }\n\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        if (!argumentTypes.hasOwnProperty(p)) continue;\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  setTactic(tactic) {\n    this.tactic = tactic;\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  getPixels(flip) {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  prependString(value) {\n    throw new Error(`\"prependString\" called on ${ this.constructor.name }`);\n  }\n\n  hasPrependString(value) {\n    throw new Error(`\"hasPrependString\" called on ${ this.constructor.name }`);\n  }\n\n  toJSON() {\n    return {\n      settings: {\n        output: this.output,\n        pipeline: this.pipeline,\n        argumentNames: this.argumentNames,\n        argumentsTypes: this.argumentTypes,\n        constants: this.constants,\n        pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n        returnType: this.returnType,\n      }\n    };\n  }\n\n  buildSignature(args) {\n    const Constructor = this.constructor;\n    this.signature = Constructor.getSignature(this, Constructor.getArgumentTypes(this, args));\n  }\n\n  static getArgumentTypes(kernel, args) {\n    const argumentTypes = new Array(args.length);\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const type = kernel.argumentTypes[i];\n      if (arg.type) {\n        argumentTypes[i] = arg.type;\n      } else {\n        switch (type) {\n          case 'Number':\n          case 'Integer':\n          case 'Float':\n          case 'ArrayTexture(1)':\n            argumentTypes[i] = utils.getVariableType(arg);\n            break;\n          default:\n            argumentTypes[i] = type;\n        }\n      }\n    }\n    return argumentTypes;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    throw new Error(`\"getSignature\" not implemented on ${ this.name }`);\n  }\n\n  functionToIGPUFunction(source, settings = {}) {\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      name: utils.getFunctionNameFromString(sourceString) || null,\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  }\n\n  onActivate(previousKernel) {}\n}\n\nfunction splitArgumentTypes(argumentTypesObject) {\n  const argumentNames = Object.keys(argumentTypesObject);\n  const argumentTypes = [];\n  for (let i = 0; i < argumentNames.length; i++) {\n    const argumentName = argumentNames[i];\n    argumentTypes.push(argumentTypesObject[argumentName]);\n  }\n  return { argumentTypes, argumentNames };\n}\n\nmodule.exports = {\n  Kernel\n};\n},{\"../input\":110,\"../utils\":114}],37:[function(require,module,exports){\nconst fragmentShader = `__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nfloat acosh(float x) {\n  return log(x + sqrt(x * x - 1.0));\n}\n\nfloat sinh(float x) {\n  return (pow(${Math.E}, x) - pow(${Math.E}, -x)) / 2.0;\n}\n\nfloat asinh(float x) {\n  return log(x + sqrt(x * x + 1.0));\n}\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat atanh(float x) {\n  x = (x + 1.0) / (x - 1.0);\n  if (x < 0.0) {\n    return 0.5 * log(-x);\n  }\n  return 0.5 * log(x);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat cosh(float x) {\n  return (pow(${Math.E}, x) + pow(${Math.E}, -x)) / 2.0; \n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat tanh(float x) {\n  float e = exp(2.0 * x);\n  return (e - 1.0) / (e + 1.0);\n}\n\nfloat trunc(float x) {\n  if (x >= 0.0) {\n    return floor(x); \n  } else {\n    return ceil(x);\n  }\n}\n\nvec4 _round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(_round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],38:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { FunctionNode } = require('../function-node');\n\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    const consequentType = this.getType(ast.consequent);\n    const alternateType = this.getType(ast.alternate);\n    if (consequentType === null && alternateType === null) {\n      retArr.push('if (');\n      this.astGeneric(ast.test, retArr);\n      retArr.push(') {');\n      this.astGeneric(ast.consequent, retArr);\n      retArr.push(';');\n      retArr.push('} else {');\n      this.astGeneric(ast.alternate, retArr);\n      retArr.push(';');\n      retArr.push('}');\n      return retArr;\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        const name = utils.sanitizeName(argumentName);\n        if (type === 'sampler2D' || type === 'sampler2DArray') {\n          retArr.push(`${type} user_${name},ivec2 user_${name}Size,ivec3 user_${name}Dim`);\n        } else {\n          retArr.push(`${type} user_${name}`);\n        }\n      }\n    }\n\n    retArr.push(') {\\n');\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = this.astKey(ast);\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('divWithIntCheck(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': this.fixIntegerDivisionAccuracy ? 'integerCorrectionModulo' : 'modulo',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      const { declarations } = forNode.init;\n      if (declarations.length > 1) {\n        isSafe = false;\n      }\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      const initString = initArr.join('');\n      const initNeedsSemiColon = initString[initString.length - 1] !== ';';\n      retArr.push(`for (${initString}${initNeedsSemiColon ? ';' : ''}${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), '\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  astAssignmentExpression(assNode, retArr) {\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const declarationSets = [];\n    let declarationSet = [];\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const actualType = this.getType(declaration.init);\n      let type = actualType;\n      if (type === 'LiteralInteger') {\n        if (info.suggestedType === 'Integer') {\n          type = 'Integer';\n        } else {\n          type = 'Number';\n        }\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer') {\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          declarationSets.push(declarationSet.join(','));\n          declarationSet = [];\n          declarationResult.push(`${markupType} `);\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else if (actualType === 'LiteralInteger' && type === 'Integer') {\n          this.castLiteralToInteger(init, declarationResult);\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      declarationSet.push(declarationResult.join(''));\n    }\n\n    if (declarationSet.length > 0) {\n      declarationSets.push(declarationSet.join(','));\n    }\n\n    result.push(declarationSets.join(';'));\n\n    retArr.push(result.join(''));\n    retArr.push(';');\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${this.astKey(ast, '_')}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        const cleanName = utils.sanitizeName(name);\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ cleanName }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ cleanName }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ cleanName }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ cleanName }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ utils.sanitizeName(name) }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case 'value.value[]':\n        case 'value.value[][]':\n          if (this.removeIstanbulCoverage) {\n            return retArr;\n          }\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${utils.sanitizeName(name)}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${utils.sanitizeName(name)}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    switch (functionName) {\n      case 'pow':\n        functionName = '_pow';\n        break;\n      case 'round':\n        functionName = '_round';\n        break;\n    }\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Boolean':\n            this.astGeneric(argument, retArr);\n            continue;\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              if (argument.type === 'Identifier') {\n                retArr.push(`user_${utils.sanitizeName(argument.name)}`);\n              } else if (argument.type === 'ArrayExpression' || argument.type === 'MemberExpression' || argument.type === 'CallExpression') {\n                this.astGeneric(argument, retArr);\n              } else {\n                throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              }\n              continue;\n            }\n            break;\n          case 'HTMLCanvas':\n          case 'HTMLImage':\n          case 'HTMLImageArray':\n          case 'HTMLVideo':\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\n              const name = utils.sanitizeName(argument.name);\n              retArr.push(`user_${name},user_${name}Size,user_${name}Dim`);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const arrLen = arrNode.elements.length;\n\n    retArr.push('vec' + arrLen + '(');\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n  'HTMLVideo': 'sampler2D',\n  'HTMLCanvas': 'sampler2D',\n  'HTMLImage': 'sampler2D',\n  'HTMLImageArray': 'sampler2DArray',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};\n},{\"../../utils\":114,\"../function-node\":10}],39:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGLKernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGLKernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGLKernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType,\n  kernelValueMaps,\n};\n},{\"./kernel-value/boolean\":41,\"./kernel-value/dynamic-html-image\":42,\"./kernel-value/dynamic-html-video\":43,\"./kernel-value/dynamic-memory-optimized-number-texture\":44,\"./kernel-value/dynamic-number-texture\":45,\"./kernel-value/dynamic-single-array\":46,\"./kernel-value/dynamic-single-array1d-i\":47,\"./kernel-value/dynamic-single-array2d-i\":48,\"./kernel-value/dynamic-single-array3d-i\":49,\"./kernel-value/dynamic-single-input\":50,\"./kernel-value/dynamic-unsigned-array\":51,\"./kernel-value/dynamic-unsigned-input\":52,\"./kernel-value/float\":53,\"./kernel-value/html-image\":54,\"./kernel-value/html-video\":55,\"./kernel-value/integer\":57,\"./kernel-value/memory-optimized-number-texture\":58,\"./kernel-value/number-texture\":59,\"./kernel-value/single-array\":60,\"./kernel-value/single-array1d-i\":61,\"./kernel-value/single-array2\":62,\"./kernel-value/single-array2d-i\":63,\"./kernel-value/single-array3\":64,\"./kernel-value/single-array3d-i\":65,\"./kernel-value/single-array4\":66,\"./kernel-value/single-input\":67,\"./kernel-value/unsigned-array\":68,\"./kernel-value/unsigned-input\":69}],40:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\nconst { Input } = require('../../../input');\n\nclass WebGLKernelArray extends WebGLKernelValue {\n  checkSize(width, height) {\n    if (!this.kernel.validate) return;\n    const { maxTextureSize } = this.kernel.constructor.features;\n    if (width > maxTextureSize || height > maxTextureSize) {\n      if (width > height) {\n        throw new Error(`Argument texture width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else if (width < height) {\n        throw new Error(`Argument texture height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else {\n        throw new Error(`Argument texture height and width of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      }\n    }\n  }\n\n  setup() {\n    this.requestTexture();\n    this.setupTexture();\n    this.defineTexture();\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n  }\n\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  destroy() {\n    if (this.prevArg) {\n      this.prevArg.delete();\n    }\n    this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelArray\n};\n},{\"../../../input\":110,\"./index\":56}],41:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};\n},{\"../../../utils\":114,\"./index\":56}],42:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"./html-image\":54}],43:[function(require,module,exports){\nconst { WebGLKernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLVideo\n};\n},{\"./dynamic-html-image\":42}],44:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"./memory-optimized-number-texture\":58}],45:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.checkSize(value.size[0], value.size[1]);\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"./number-texture\":59}],46:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"./single-array\":60}],47:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"./single-array1d-i\":61}],48:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"./single-array2d-i\":63}],49:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"./single-array3d-i\":65}],50:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"./single-input\":67}],51:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"./unsigned-array\":68}],52:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"./unsigned-input\":69}],53:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};\n},{\"../../../utils\":114,\"./index\":56}],54:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputImage.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"./array\":40}],55:[function(require,module,exports){\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueHTMLVideo\n};\n},{\"./html-image\":54}],56:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n    this.prevArg = null;\n  }\n\n  get id() {\n    return `${this.origin}_${utils.sanitizeName(this.name)}`;\n  }\n\n  setup() {}\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n\n  getVariablePrecisionString() {\n    return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);\n  }\n\n  destroy() {}\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};\n},{\"../../../utils\":114,\"../../kernel-value\":35}],57:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};\n},{\"../../../utils\":114,\"./index\":56}],58:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nconst sameError = `Source and destination textures are the same.  Use immutable = true and manually cleanup kernel output texture memory with texture.delete()`;\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture,\n  sameError\n};\n},{\"../../../utils\":114,\"./array\":40}],59:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\nconst { sameError } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"./array\":40,\"./memory-optimized-number-texture\":58}],60:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};\n},{\"../../../utils\":114,\"./array\":40}],61:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"./array\":40}],62:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2\n};\n},{\"../../../utils\":114,\"./index\":56}],63:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"./array\":40}],64:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3\n};\n},{\"../../../utils\":114,\"./index\":56}],65:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"./array\":40}],66:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray4\n};\n},{\"../../../utils\":114,\"./index\":56}],67:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(input.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};\n},{\"../../../utils\":114,\"./array\":40}],68:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"./array\":40}],69:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"./array\":40}],70:[function(require,module,exports){\nconst { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst mrud = require('../../plugins/math-random-uniformly-distributed');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [mrud];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n\n    this.maxTexSize = null;\n    this.onRequestSwitchKernel = null;\n    this.removeIstanbulCoverage = true;\n\n    this.texture = null;\n    this.mappedTextures = null;\n    this.mergeSettings(source.settings || settings);\n\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n\n    this.textureCache = [];\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      if (settings.pluginNames) { \n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n\n    const onRequestTexture = () => {\n      return this.createTexture();\n    };\n    const onRequestIndex = () => {\n      return textureIndexes++;\n    };\n    const onUpdateValueMismatch = (constructor) => {\n      this.switchKernels({\n        type: 'argumentMismatch',\n        needed: constructor\n      });\n    };\n    const onRequestContextHandle = () => {\n      return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n    };\n\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture,\n        onRequestIndex,\n        onUpdateValueMismatch,\n        onRequestContextHandle,\n      });\n      this.kernelArguments.push(kernelArgument);\n      kernelArgument.setup();\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  createTexture() {\n    const texture = this.context.createTexture();\n    this.textureCache.push(texture);\n    return texture;\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    this.forceUploadKernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n      kernelValue.setup();\n      if (kernelValue.forceUploadEachRun) {\n        this.forceUploadKernelConstants.push(kernelValue);\n      }\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    this._setupOutputTexture();\n    if (\n      this.subKernels !== null &&\n      this.subKernels.length > 0\n    ) {\n      this._mappedTextureSwitched = {};\n      this._setupSubOutputTextures();\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  setupReturnTypes(functionBuilder) {\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize, forceUploadKernelConstants, context: gl } = this;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\n      const constant = forceUploadKernelConstants[i];\n      constant.updateValue(this.constants[constant.name]);\n      if (this.switchingKernels) return;\n    }\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (this.immutable) {\n          this._replaceOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return this.immutable ? this.texture.clone() : this.texture;\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._replaceOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._replaceSubOutputTextures();\n      }\n      this.drawBuffers();\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n  }\n\n  getInternalFormat() {\n    return this.context.RGBA;\n  }\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n\n  _replaceOutputTexture() {\n    if (this.texture.beforeMutate() || this._textureSwitched) {\n      const gl = this.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      this._textureSwitched = false;\n    }\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = this.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _replaceSubOutputTextures() {\n    const gl = this.context;\n    for (let i = 0; i < this.mappedTextures.length; i++) {\n      const mappedTexture = this.mappedTextures[i];\n      if (mappedTexture.beforeMutate() || this._mappedTextureSwitched[i]) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n        this._mappedTextureSwitched[i] = false;\n      }\n    }\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      INJECTED_NATIVE: this._getInjectedNative(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString(),\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getVertShaderArtifactMap(args) {\n    return {\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float divWithIntCheck(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x) / int(y));\n  }\n  return x / y;\n}\n\nfloat integerCorrectionModulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -(number - (divisor * floor(divWithIntCheck(number, divisor))));\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return number - (divisor * floor(divWithIntCheck(number, divisor)));\n}` :\n      '';\n  }\n\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getInjectedNative() {\n    return this.injectedNative || '';\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        if (!this.constants.hasOwnProperty(name)) continue;\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  getKernelResultDeclaration() {\n    switch (this.returnType) {\n      case 'Array(2)':\n        return 'vec2 kernelResult';\n      case 'Array(3)':\n        return 'vec3 kernelResult';\n      case 'Array(4)':\n        return 'vec4 kernelResult';\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        return 'float kernelResult';\n      default:\n        if (this.graphical) {\n          return 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n  }\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const { subKernels } = this;\n    if (subKernels !== null) {\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`,\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`,\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`,\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`,\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`,\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`,\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n  }\n\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (!this.context) return;\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n    if (this.texture) {\n      this.texture.delete();\n      const textureCacheIndex = this.textureCache.indexOf(this.texture.texture);\n      if (textureCacheIndex > -1) {\n        this.textureCache.splice(textureCacheIndex, 1);\n      }\n      this.texture = null;\n    }\n    if (this.mappedTextures && this.mappedTextures.length) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.delete();\n        const textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);\n        if (textureCacheIndex > -1) {\n          this.textureCache.splice(textureCacheIndex, 1);\n        }\n      }\n      this.mappedTextures = null;\n    }\n    if (this.kernelArguments) {\n      for (let i = 0; i < this.kernelArguments.length; i++) {\n        this.kernelArguments[i].destroy();\n      }\n    }\n    if (this.kernelConstants) {\n      for (let i = 0; i < this.kernelConstants.length; i++) {\n        this.kernelConstants[i].destroy();\n      }\n    }\n    while (this.textureCache.length > 0) {\n      const texture = this.textureCache.pop();\n      this.context.deleteTexture(texture);\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n    if (!this.gpu) return;\n    const i = this.gpu.kernels.indexOf(this);\n    if (i === -1) return;\n    this.gpu.kernels.splice(i, 1);\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};\n},{\"../../plugins/math-random-uniformly-distributed\":112,\"../../utils\":114,\"../function-builder\":9,\"../gl/kernel\":13,\"../gl/kernel-string\":12,\"./fragment-shader\":37,\"./function-node\":38,\"./kernel-value-maps\":39,\"./vertex-shader\":71}],71:[function(require,module,exports){\nconst vertexShader = `__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],72:[function(require,module,exports){\nconst fragmentShader = `#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],73:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { WebGLFunctionNode } = require('../web-gl/function-node');\n\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};\n},{\"../../utils\":114,\"../web-gl/function-node\":38}],74:[function(require,module,exports){\nconst { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHTMLImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHTMLImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGL2KernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGL2KernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGL2KernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  kernelValueMaps,\n  lookupKernelValueType\n};\n},{\"./kernel-value/boolean\":75,\"./kernel-value/dynamic-html-image\":77,\"./kernel-value/dynamic-html-image-array\":76,\"./kernel-value/dynamic-html-video\":78,\"./kernel-value/dynamic-memory-optimized-number-texture\":79,\"./kernel-value/dynamic-number-texture\":80,\"./kernel-value/dynamic-single-array\":81,\"./kernel-value/dynamic-single-array1d-i\":82,\"./kernel-value/dynamic-single-array2d-i\":83,\"./kernel-value/dynamic-single-array3d-i\":84,\"./kernel-value/dynamic-single-input\":85,\"./kernel-value/dynamic-unsigned-array\":86,\"./kernel-value/dynamic-unsigned-input\":87,\"./kernel-value/float\":88,\"./kernel-value/html-image\":90,\"./kernel-value/html-image-array\":89,\"./kernel-value/html-video\":91,\"./kernel-value/integer\":92,\"./kernel-value/memory-optimized-number-texture\":93,\"./kernel-value/number-texture\":94,\"./kernel-value/single-array\":95,\"./kernel-value/single-array1d-i\":96,\"./kernel-value/single-array2\":97,\"./kernel-value/single-array2d-i\":98,\"./kernel-value/single-array3\":99,\"./kernel-value/single-array3d-i\":100,\"./kernel-value/single-array4\":101,\"./kernel-value/single-input\":102,\"./kernel-value/unsigned-array\":103,\"./kernel-value/unsigned-input\":104}],75:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};\n},{\"../../web-gl/kernel-value/boolean\":41}],76:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { width, height } = images[0];\n    this.checkSize(width, height);\n    this.dimensions = [width, height, images.length];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImageArray\n};\n},{\"../../../utils\":114,\"./html-image-array\":89}],77:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-html-image\":42}],78:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLVideo\n};\n},{\"../../../utils\":114,\"./dynamic-html-image\":77}],79:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\":44}],80:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-number-texture\":45}],81:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array\":95}],82:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array1d-i\":96}],83:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array2d-i\":98}],84:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array3d-i\":100}],85:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-input\":102}],86:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-array\":51}],87:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-input\":52}],88:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/float\":53}],89:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('../../web-gl/kernel-value/array');\n\nclass WebGL2KernelValueHTMLImageArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.checkSize(value[0].width, value[0].height);\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImageArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/array\":40}],90:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/html-image\":54}],91:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImage } = require('./html-image');\n\nclass WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLVideo\n};\n},{\"../../../utils\":114,\"./html-image\":90}],92:[function(require,module,exports){\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    const variablePrecision = this.getVariablePrecisionString();\n    if (this.origin === 'constants') {\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};\n},{\"../../web-gl/kernel-value/integer\":57}],93:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/memory-optimized-number-texture\":58}],94:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/number-texture\":59}],95:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array\":60}],96:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array1d-i\":61}],97:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray2 } = require('../../web-gl/kernel-value/single-array2');\n\nclass WebGL2KernelValueSingleArray2 extends WebGLKernelValueSingleArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2\n};\n},{\"../../web-gl/kernel-value/single-array2\":62}],98:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array2d-i\":63}],99:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray3 } = require('../../web-gl/kernel-value/single-array3');\n\nclass WebGL2KernelValueSingleArray3 extends WebGLKernelValueSingleArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3\n};\n},{\"../../web-gl/kernel-value/single-array3\":64}],100:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array3d-i\":65}],101:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray4 } = require('../../web-gl/kernel-value/single-array4');\n\nclass WebGL2KernelValueSingleArray4 extends WebGLKernelValueSingleArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray4\n};\n},{\"../../web-gl/kernel-value/single-array4\":66}],102:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-input\":67}],103:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-array\":68}],104:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-input\":69}],105:[function(require,module,exports){\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\nlet features = null;\n\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      kernelMap: true,\n      isTextureFloat: true,\n      isDrawBuffers: true,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl2', settings);\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.R32F:\n        return gl.RED;\n      case gl.RG32F:\n        return gl.RG;\n      case gl.RGBA32F:\n        return gl.RGBA;\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n  getInternalFormat() {\n    const { context: gl } = this;\n\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              return gl.RGBA32F;\n            } else {\n              return gl.R32F;\n            }\n            case 'Array(2)':\n              return gl.RG32F;\n            case 'Array(3)': \n            case 'Array(4)':\n              return gl.RGBA32F;\n            default:\n              throw new Error('Unhandled return type');\n        }\n      }\n      return gl.RGBA32F;\n    }\n    return gl.RGBA;\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    const texture = gl.createTexture();\n    const texSize = this.texSize;\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      const format = this.getInternalFormat();\n      if (this.precision === 'single') {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  _getHeaderString() {\n    return '';\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    if (subKernels === null || subKernels.length < 1) {\n      return `in ${ variablePrecision } vec2 vTexCoord;\\n`;\n    } else {\n      return `out ${ variablePrecision } vec2 vTexCoord;\\n`;\n    }\n  }\n\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        'layout(location = 0) out vec4 data0'\n      );\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n      }\n    } else {\n      result.push(\n        'out vec4 data0'\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`,\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`,\n      );\n    }\n    return result;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../web-gl/kernel\":70,\"./fragment-shader\":72,\"./function-node\":73,\"./kernel-value-maps\":74,\"./vertex-shader\":106}],106:[function(require,module,exports){\nconst vertexShader = `#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],107:[function(require,module,exports){\nconst lib = require('./index');\nconst GPU = lib.GPU;\nfor (const p in lib) {\n  if (!lib.hasOwnProperty(p)) continue;\n  if (p === 'GPU') continue; \n  GPU[p] = lib[p];\n}\n\nif (typeof window !== 'undefined') {\n  bindTo(window);\n}\nif (typeof self !== 'undefined') {\n  bindTo(self);\n}\n\nfunction bindTo(target) {\n  if (target.GPU) return;\n  Object.defineProperty(target, 'GPU', {\n    get() {\n      return GPU;\n    }\n  });\n}\n\nmodule.exports = lib;\n},{\"./index\":109}],108:[function(require,module,exports){\nconst { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { Kernel } = require('./backend/kernel');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    this.injectedNative = null;\n    this.onIstanbulCoverageVariable = settings.onIstanbulCoverageVariable || null;\n    this.removeIstanbulCoverage = settings.hasOwnProperty('removeIstanbulCoverage') ? settings.removeIstanbulCoverage : null;\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;\n        const s = settings.nativeFunctions[p];\n        const { name, source } = s;\n        this.addNativeFunction(name, source, s);\n      }\n    }\n  }\n\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    const kernels = this.kernels;\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      console.warn('Falling back to CPU');\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        injectedNative: kernelRun.injectedNative,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(reasons, args, _kernel) {\n      if (_kernel.debug) {\n        console.warn('Switching kernels');\n      }\n      let newOutput = null;\n      if (_kernel.signature && !switchableKernels[_kernel.signature]) {\n        switchableKernels[_kernel.signature] = _kernel;\n      }\n      if (_kernel.dynamicOutput) {\n        for (let i = reasons.length - 1; i >= 0; i--) {\n          const reason = reasons[i];\n          if (reason.type === 'outputPrecisionMismatch') {\n            newOutput = reason.needed;\n          }\n        }\n      }\n\n      const Constructor = _kernel.constructor;\n      const argumentTypes = Constructor.getArgumentTypes(_kernel, args);\n      const signature = Constructor.getSignature(_kernel, argumentTypes);\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        existingKernel.onActivate(_kernel);\n        return existingKernel;\n      }\n\n      const newKernel = switchableKernels[signature] = new Constructor(source, {\n        argumentTypes,\n        constantTypes: _kernel.constantTypes,\n        graphical: _kernel.graphical,\n        loopMaxIterations: _kernel.loopMaxIterations,\n        constants: _kernel.constants,\n        dynamicOutput: _kernel.dynamicOutput,\n        dynamicArgument: _kernel.dynamicArguments,\n        context: _kernel.context,\n        canvas: _kernel.canvas,\n        output: newOutput || _kernel.output,\n        precision: _kernel.precision,\n        pipeline: _kernel.pipeline,\n        immutable: _kernel.immutable,\n        optimizeFloatMemory: _kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: _kernel.fixIntegerDivisionAccuracy,\n        functions: _kernel.functions,\n        nativeFunctions: _kernel.nativeFunctions,\n        injectedNative: _kernel.injectedNative,\n        subKernels: _kernel.subKernels,\n        strictIntegers: _kernel.strictIntegers,\n        debug: _kernel.debug,\n        gpu: _kernel.gpu,\n        validate,\n        returnType: _kernel.returnType,\n        onIstanbulCoverageVariable: _kernel.onIstanbulCoverageVariable,\n        removeIstanbulCoverage: _kernel.removeIstanbulCoverage,\n        tactic: _kernel.tactic,\n        onRequestFallback,\n        onRequestSwitchKernel,\n        texture: _kernel.texture,\n        mappedTextures: _kernel.mappedTextures,\n        drawBuffersMap: _kernel.drawBuffersMap,\n      });\n      newKernel.build.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      kernels.push(newKernel);\n      return newKernel;\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      injectedNative: this.injectedNative,\n      onIstanbulCoverageVariable: this.onIstanbulCoverageVariable,\n      removeIstanbulCoverage: this.removeIstanbulCoverage,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernel = new this.Kernel(source, mergedSettings);\n    const kernelRun = kernelRunShortcut(kernel);\n\n    if (!this.canvas) {\n      this.canvas = kernel.canvas;\n    }\n\n    if (!this.context) {\n      this.context = kernel.context;\n    }\n\n    kernels.push(kernel);\n\n    return kernelRun;\n  }\n\n  createKernelMap() {\n    let fn;\n    let settings;\n    const argument2Type = typeof arguments[arguments.length - 2];\n    if (argument2Type === 'function' || argument2Type === 'string') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    return this.createKernel(fn, settingsCopy);\n  }\n\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  setFunctions(functions) {\n    this.functions = functions;\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    this.nativeFunctions = nativeFunctions;\n    return this;\n  }\n\n  addFunction(source, settings) {\n    this.functions.push({ source, settings });\n    return this;\n  }\n\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    this.nativeFunctions.push(Object.assign({ name, source }, settings));\n    return this;\n  }\n\n  injectNative(source) {\n    this.injectedNative = source;\n    return this;\n  }\n\n  destroy() {\n    return new Promise((resolve, reject) => {\n      if (!this.kernels) {\n        resolve();\n      }\n      setTimeout(() => {\n        try {\n          for (let i = 0; i < this.kernels.length; i++) {\n            this.kernels[i].destroy(true); \n          }\n          let firstKernel = this.kernels[0];\n          if (firstKernel) {\n            if (firstKernel.kernel) {\n              firstKernel = firstKernel.kernel;\n            }\n            if (firstKernel.constructor.destroyContext) {\n              firstKernel.constructor.destroyContext(this.context);\n            }\n          }\n        } catch (e) {\n          reject(e);\n        }\n        resolve();\n      }, 0);\n    });\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};\n},{\"./backend/cpu/kernel\":8,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/kernel\":70,\"./backend/web-gl2/kernel\":105,\"./kernel-run-shortcut\":111,\"./utils\":114,\"gpu-mock.js\":4}],109:[function(require,module,exports){\nconst { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelValueMaps: webGLKernelValueMaps } = require('./backend/web-gl/kernel-value-maps');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { kernelValueMaps: webGL2KernelValueMaps } = require('./backend/web-gl2/kernel-value-maps');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nconst { FunctionTracer } = require('./backend/function-tracer');\n\nconst mathRandom = require('./plugins/math-random-uniformly-distributed');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  webGL2KernelValueMaps,\n\n  WebGLFunctionNode,\n  WebGLKernel,\n  webGLKernelValueMaps,\n\n  GLKernel,\n  Kernel,\n  FunctionTracer,\n\n  plugins: {\n    mathRandom\n  }\n};\n},{\"./alias\":5,\"./backend/cpu/function-node\":6,\"./backend/cpu/kernel\":8,\"./backend/function-builder\":9,\"./backend/function-node\":10,\"./backend/function-tracer\":11,\"./backend/gl/kernel\":13,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/function-node\":38,\"./backend/web-gl/kernel\":70,\"./backend/web-gl/kernel-value-maps\":39,\"./backend/web-gl2/function-node\":73,\"./backend/web-gl2/kernel\":105,\"./backend/web-gl2/kernel-value-maps\":74,\"./gpu\":108,\"./input\":110,\"./plugins/math-random-uniformly-distributed\":112,\"./texture\":113,\"./utils\":114}],110:[function(require,module,exports){\nclass Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n},{\"./utils\":114}],111:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    run = function() {\n      let result = kernel.run.apply(kernel, arguments);\n      if (kernel.switchingKernels) {\n        const reasons = kernel.resetSwitchingKernels();\n        const newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);\n        shortcut.kernel = kernel = newKernel;\n        result = newKernel.run.apply(newKernel, arguments);\n      }\n      if (kernel.renderKernels) {\n        return kernel.renderKernels();\n      } else if (kernel.renderOutput) {\n        return kernel.renderOutput();\n      } else {\n        return result;\n      }\n    };\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  if (shortcut.kernel) {\n    shortcut.kernel = kernel;\n    return;\n  }\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          shortcut.kernel[property].apply(shortcut.kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        shortcut[property] = function() {\n          return shortcut.kernel[property].apply(shortcut.kernel, arguments);\n        };\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => shortcut.kernel[property]);\n      shortcut.__defineSetter__(property, (value) => {\n        shortcut.kernel[property] = value;\n      });\n    }\n  }\n  shortcut.kernel = kernel;\n}\nmodule.exports = {\n  kernelRunShortcut\n};\n},{\"./utils\":114}],112:[function(require,module,exports){\nconst source = `// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}`;\n\nconst name = 'math-random-uniformly-distributed';\n\nconst functionMatch = `Math.random()`;\n\nconst functionReplace = `nrand(vTexCoord)`;\n\nconst functionReturnType = 'Number';\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('randomSeed1', Math.random());\n  kernel.setUniform1f('randomSeed2', Math.random());\n};\n\nconst plugin = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};\n\nmodule.exports = plugin;\n},{}],113:[function(require,module,exports){\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n      kernel,\n      internalFormat,\n      textureFormat\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    if (!texture) throw new Error('settings property \"texture\" required.');\n    if (!kernel) throw new Error('settings property \"kernel\" required.');\n    this.texture = texture;\n    if (texture._refs) {\n      texture._refs++;\n    } else {\n      texture._refs = 1;\n    }\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = kernel;\n    this.type = type;\n    this._deleted = false;\n    this.internalFormat = internalFormat;\n    this.textureFormat = textureFormat;\n  }\n\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clone() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  delete() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clear() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n}\n\nmodule.exports = {\n  Texture\n};\n},{}],114:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nconst utils = {\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  getFunctionNameFromString(funcStr) {\n    const result = FUNCTION_NAME.exec(funcStr);\n    if (!result || result.length === 0) return null;\n    return result[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); \n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value.length > 0 && value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n    switch (value.nodeName) {\n      case 'IMG':\n        return 'HTMLImage';\n      case 'CANVAS':\n        return 'HTMLImage';\n      case 'VIDEO':\n        return 'HTMLVideo';\n    }\n    if (value.hasOwnProperty('type')) {\n      return value.type;\n    }\n    return 'Unknown';\n  },\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  flipPixels: (pixels, width, height) => {\n    const halfHeight = height / 2 | 0; \n    const bytesPerRow = width * 4;\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n    let indent = 0;\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          indent += 2;\n          for (let i = 0; i < ast.body.length; i++) {\n            const flat = flatten(ast.body[i]);\n            if (flat) {\n              result.push(' '.repeat(indent) + flat, ';\\n');\n            }\n          }\n          indent -= 2;\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          const declarations = utils.normalizeDeclarations(ast)\n            .map(flatten)\n            .filter(r => r !== null);\n          if (declarations.length < 1) {\n            return '';\n          } else {\n            return `${ast.kind} ${declarations.join(',')}`;\n          }\n          case 'VariableDeclarator':\n            if (ast.init.object && ast.init.object.type === 'ThisExpression') {\n              const lookup = thisLookup(ast.init.property.name, true);\n              if (lookup) {\n                return `${ast.id.name} = ${flatten(ast.init)}`;\n              } else {\n                return null;\n              }\n            } else {\n              return `${ast.id.name} = ${flatten(ast.init)}`;\n            }\n            case 'CallExpression': {\n              if (ast.callee.property.name === 'subarray') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.type === 'ThisExpression') {\n                functionDependencies.push(findDependency('this', ast.callee.property.name));\n                return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else if (ast.callee.object.name) {\n                const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n                if (foundSource === null) {\n                  return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                } else {\n                  functionDependencies.push(foundSource);\n                  return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                }\n              } else if (ast.callee.object.type === 'MemberExpression') {\n                return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else {\n                throw new Error('unknown ast.callee');\n              }\n            }\n            case 'ReturnStatement':\n              return `return ${flatten(ast.argument)}`;\n            case 'BinaryExpression':\n              return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n            case 'UnaryExpression':\n              if (ast.prefix) {\n                return `${ast.operator} ${flatten(ast.argument)}`;\n              } else {\n                return `${flatten(ast.argument)} ${ast.operator}`;\n              }\n              case 'ExpressionStatement':\n                return `${flatten(ast.expression)}`;\n              case 'SequenceExpression':\n                return `(${flatten(ast.expressions)})`;\n              case 'ArrowFunctionExpression':\n                return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n              case 'Literal':\n                return ast.raw;\n              case 'Identifier':\n                return ast.name;\n              case 'MemberExpression':\n                if (ast.object.type === 'ThisExpression') {\n                  return thisLookup(ast.property.name);\n                }\n                if (ast.computed) {\n                  return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n                }\n                return flatten(ast.object) + '.' + flatten(ast.property);\n              case 'ThisExpression':\n                return 'this';\n              case 'NewExpression':\n                return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              case 'ForStatement':\n                return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n              case 'AssignmentExpression':\n                return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n              case 'UpdateExpression':\n                return `${flatten(ast.argument)}${ast.operator}`;\n              case 'IfStatement':\n                return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n              case 'ThrowStatement':\n                return `throw ${flatten(ast.argument)}`;\n              case 'ObjectPattern':\n                return ast.properties.map(flatten).join(', ');\n              case 'ArrayPattern':\n                return ast.elements.map(flatten).join(', ');\n              case 'DebuggerStatement':\n                return 'debugger;';\n              case 'ConditionalExpression':\n                return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n              case 'Property':\n                if (ast.kind === 'init') {\n                  return flatten(ast.key);\n                }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\\n');\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  normalizeDeclarations: (ast) => {\n    if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type \"VariableDeclaration\"');\n    const normalizedDeclarations = [];\n    for (let declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {\n      const declaration = ast.declarations[declarationIndex];\n      if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {\n        const { properties } = declaration.id;\n        for (let propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {\n          const property = properties[propertyIndex];\n          if (property.value.type === 'ObjectPattern' && property.value.properties) {\n            for (let subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {\n              const subProperty = property.value.properties[subPropertyIndex];\n              if (subProperty.type === 'Property') {\n                normalizedDeclarations.push({\n                  type: 'VariableDeclarator',\n                  id: {\n                    type: 'Identifier',\n                    name: subProperty.key.name\n                  },\n                  init: {\n                    type: 'MemberExpression',\n                    object: {\n                      type: 'MemberExpression',\n                      object: declaration.init,\n                      property: {\n                        type: 'Identifier',\n                        name: property.key.name\n                      },\n                      computed: false\n                    },\n                    property: {\n                      type: 'Identifier',\n                      name: subProperty.key.name\n                    },\n                    computed: false\n                  }\n                });\n              } else {\n                throw new Error('unexpected state');\n              }\n            }\n          } else if (property.value.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: property.value && property.value.name ? property.value.name : property.key.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Identifier',\n                  name: property.key.name\n                },\n                computed: false\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {\n        const { elements } = declaration.id;\n        for (let elementIndex = 0; elementIndex < elements.length; elementIndex++) {\n          const element = elements[elementIndex];\n          if (element.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: element.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Literal',\n                  value: elementIndex,\n                  raw: elementIndex.toString(),\n                  start: element.start,\n                  end: element.end\n                },\n                computed: true\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else {\n        normalizedDeclarations.push(declaration);\n      }\n    }\n    return normalizedDeclarations;\n  },\n\n  splitHTMLImageToRGB: (gpu, image) => {\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  splitRGBAToCanvases: (gpu, rgba, width, height) => {\n    const visualKernelR = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelR(rgba);\n\n    const visualKernelG = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelG(rgba);\n\n    const visualKernelB = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelB(rgba);\n\n    const visualKernelA = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelA(rgba);\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  },\n\n  getMinifySafeName: (fn) => {\n    try {\n      const ast = acorn.parse(`const value = ${fn.toString()}`);\n      const { init } = ast.body[0].declarations[0];\n      return init.body.name || init.body.body[0].argument.name;\n    } catch (e) {\n      throw new Error('Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }');\n    }\n  },\n  sanitizeName: function(name) {\n    if (dollarSign.test(name)) {\n      name = name.replace(dollarSign, 'S_S');\n    }\n    if (doubleUnderscore.test(name)) {\n      name = name.replace(doubleUnderscore, 'U_U');\n    } else if (singleUnderscore.test(name)) {\n      name = name.replace(singleUnderscore, 'u_u');\n    }\n    return name;\n  }\n};\n\nconst dollarSign = /\\$/;\nconst doubleUnderscore = /__/;\nconst singleUnderscore = /_/;\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};\n},{\"./input\":110,\"./texture\":113,\"acorn\":1}]},{},[107])(107)\n});\n","const { GPU, input } = require('gpu.js');\n\nlet gpuInstance = null;\n\nfunction setup(value) {\n  gpuInstance = value;\n}\n\nfunction teardown() {\n  if (gpuInstance) {\n    gpuInstance.destroy();\n  }\n  gpuInstance = null;\n}\n\nfunction makeKernel(fn, settings) {\n  if (gpuInstance === null) {\n    setup(new GPU({ mode: 'gpu' }));\n  }\n  if (settings.hasOwnProperty('map')) {\n    return gpuInstance\n      .createKernelMap(settings.map, fn, settings)\n      .setPipeline(true);\n  }\n  return gpuInstance\n    .createKernel(fn, settings)\n    .setPipeline(true);\n}\n\nfunction makeDevKernel(fn, settings) {\n  if (settings && settings.map) {\n    throw new Error('map kernels are not supported by dev kernels');\n  }\n  const gpu = new GPU({ mode: 'dev' });\n  return gpu.createKernel(fn, settings);\n}\n\nfunction kernelInput(value, size) {\n  return input(value, size);\n}\n\nfunction release(texture) {\n  if (texture && texture.delete) {\n    texture.delete();\n  }\n}\n\nfunction clear(texture) {\n  if (texture.clear) {\n    texture.clear();\n    return;\n  }\n  if (texture instanceof Float32Array) {\n    texture.fill(0);\n  } else if (texture[0] instanceof Float32Array) {\n    for (let x = 0; x < texture.length; x++) {\n      texture[x].fill(0);\n    }\n  } else if (texture[0][0] instanceof Float32Array) {\n    for (let y = 0; y < texture.length; y++) {\n      const row = texture[y];\n      for (let x = 0; x < row.length; x++) {\n        row[x].fill(0);\n      }\n    }\n  }\n}\n\nfunction clone(texture) {\n  if (texture.clone) {\n    return texture.clone();\n  }\n  if (texture instanceof Float32Array) {\n    return texture.slice(0);\n  } else if (texture[0] instanceof Float32Array) {\n    const matrix = new Array(texture.length);\n    for (let x = 0; x < texture.length; x++) {\n      matrix[x] = texture[x].slice(0);\n    }\n    return matrix;\n  } else if (texture[0][0] instanceof Float32Array) {\n    const cube = new Array(texture.length);\n    for (let y = 0; y < texture.length; y++) {\n      const row = texture[y];\n      const matrix = new Array(row.length);\n      for (let x = 0; x < row.length; x++) {\n        matrix[x] = row[x].slice(0);\n      }\n    }\n    return cube;\n  }\n}\n\nmodule.exports = { setup, teardown, makeKernel, makeDevKernel, kernelInput, release, clone, clear };\n","module.exports = function zeros(size) {\n  return new Float32Array(size);\n};\n","const zeros = require('./zeros');\n\nmodule.exports = function zeros2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = zeros(width);\n  }\n  return result;\n};\n","/**\n *\n * @param {Base} layer1\n * @param {Base} layer2\n */\nfunction checkSameSize(layer1, layer2) {\n  if (layer1.width !== layer2.width) {\n    throw new Error(\n      `Layer width mismatch of ${layer1.width} and ${\n        layer2.width\n      }`\n    );\n  }\n\n  if (layer1.height !== layer2.height) {\n    throw new Error(\n      `Layer height mismatch of ${layer1.height} and ${\n        layer2.height\n      }`\n    );\n  }\n}\n\nmodule.exports = {\n  checkSameSize\n};\n","const { release, clone, makeKernel, clear } = require('../utilities/kernel');\n\nclass Base {\n  static get defaults() {\n    return {\n      width: 1,\n      height: 1,\n      depth: null,\n      weights: null,\n      deltas: null,\n      name: null,\n      praxisOpts: null,\n    };\n  }\n\n  constructor(settings) {\n    // size\n    this.width = null;\n    this.height = null;\n    this.depth = null;\n\n    // what matters :P\n    this.deltas = null;\n    this.weights = null;\n\n    this.praxis = null;\n    this.praxisOpts = null;\n\n    if (this.constructor !== Base) {\n      Object.assign(this, Base.defaults, settings);\n    }\n    Object.assign(this, this.constructor.defaults, settings);\n\n    // special settings\n    this.setupPraxis(settings);\n  }\n\n  setupPraxis(settings) {\n    if (!settings) return;\n    if (settings.hasOwnProperty('praxis')) {\n      if (typeof settings.praxis === 'function') {\n        this.praxis = settings.praxis(this, settings.praxisOpts);\n      } else {\n        this.praxis = settings.praxis;\n      }\n    }\n  }\n\n  /*\n  get weights() {\n    return this._weights;\n  }\n\n  set weights(value) {\n    if (value) {\n      if (value.dimensions) {\n        if (value.dimensions[0] !== this.width) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n        }\n        if (value.dimensions[1] !== this.height) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n        }\n      } else {\n        if (value[0].length !== this.width) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n        }\n        if (value.length !== this.height) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n        }\n      }\n    }\n    this._weights = value;\n  }\n\n  get deltas() {\n    return this._deltas;\n  }\n\n  set deltas(value) {\n    if (value) {\n      if (value.dimensions) {\n        if (value.dimensions[0] !== this.width) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n        }\n        if (value.dimensions[1] !== this.height) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n        }\n      } else {\n        if (value[0].length !== this.width) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n        }\n        if (value.length !== this.height) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n        }\n      }\n    }\n    this._deltas = value;\n  } */\n\n  validate() {\n    if (Number.isNaN(this.height)) {\n      throw new Error(`${this.constructor.name} layer height is not a number`);\n    }\n    if (Number.isNaN(this.width)) {\n      throw new Error(`${this.constructor.name} layer width is not a number`);\n    }\n    if (this.height < 1) {\n      throw new Error(`${this.constructor.name} layer height is less than 1`);\n    }\n    if (this.width < 1) {\n      throw new Error(`${this.constructor.name} layer width is less than 1`);\n    }\n  }\n\n  setupKernels() {\n    // console.log(`${this.constructor.name}-setupKernels is not yet implemented`)\n  }\n\n  reuseKernels(layer) {\n    if (layer.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.width} is not ${\n          this.width\n        }`\n      );\n    }\n    if (layer.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${\n          layer.height\n        } is not ${this.height}`\n      );\n    }\n    if (layer.hasOwnProperty('predictKernel')) {\n      if (!layer.predictKernel.immutable) {\n        throw new Error(`${layer.constructor.name}.predictKernel is not reusable, set kernel.immutable = true`);\n      }\n      this.predictKernel = layer.predictKernel;\n    }\n    if (layer.hasOwnProperty('compareKernel')) {\n      if (!layer.compareKernel.immutable) {\n        throw new Error(`${layer.constructor.name}.compareKernel is not reusable, set kernel.immutable = true`);\n      }\n      this.compareKernel = layer.compareKernel;\n    }\n    this.praxis = layer.praxis;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  // eslint-disable-next-line\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    //TODO: do we need to release here?\n    const { weights: oldWeights } = this;\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    release(oldWeights);\n    clear(this.deltas);\n  }\n\n  toArray() {\n    return this.weights.toArray();\n  }\n\n  toJSON() {\n    const jsonLayer = {};\n    const { defaults, name } = this.constructor;\n    if (this.constructor !== Base) {\n      Object.assign(defaults, Base.defaults, defaults);\n    }\n    const keys = Object.keys(defaults);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'deltas') continue;\n      if (key === 'name' && this[key] === null) continue;\n      jsonLayer[key] = this[key];\n    }\n    jsonLayer.type = name;\n    return jsonLayer;\n  }\n}\n\nmodule.exports = {\n  Base\n};\n","const zeros2D = require('./zeros-2d');\n\nmodule.exports = function zeros3D(width, height, depth) {\n  const result = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = zeros2D(width, height);\n  }\n  return result;\n};\n","const { Base } = require('./base');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nclass Activation extends Base {\n  constructor(inputLayer, settings) {\n    super();\n    this.inputLayer = inputLayer;\n\n    const { width, height, depth } = inputLayer;\n    this.predictKernel = null;\n    this.compareKernel = null;\n    this.width = width;\n    this.height = height;\n    this.validate();\n    if (depth > 0) {\n      this.depth = depth;\n      this.weights = zeros3D(width, height, depth);\n      this.deltas = zeros3D(width, height, depth);\n    } else {\n      this.weights = zeros2D(width, height);\n      this.deltas = zeros2D(width, height);\n    }\n    this.setupPraxis(settings);\n  }\n}\n\nmodule.exports = { Activation };\n","const { Base } = require('./base');\nconst { Activation } = require('./activation');\n\nclass Internal {}\nclass InternalModel {}\nclass EntryPoint extends Base {}\nclass Filter extends Base {}\nclass Model extends Base {}\nclass Modifier extends Base {}\nclass Operator extends Base {}\n\nmodule.exports = { Activation, Internal, InternalModel, EntryPoint, Filter, Model, Modifier, Operator };\n","const { makeKernel, release, clone, clear } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { checkSameSize } = require('../utilities/layer-size');\nconst { Operator } = require('./types');\n\nfunction predict(inputWeights1, inputWeights2) {\n  return inputWeights1[this.thread.y][this.thread.x] + inputWeights2[this.thread.y][this.thread.x];\n}\n\nclass Add extends Operator {\n  constructor(inputLayer1, inputLayer2, settings) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.width = this.inputLayer1.width;\n    this.height = this.inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n    this.setupPraxis(settings);\n  }\n\n  validate() {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n    clear(this.deltas);\n  }\n\n  compare() {\n    //TODO: Do we need release and clone here?\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = clone(this.deltas);\n    this.inputLayer2.deltas = clone(this.deltas);\n  }\n\n  /**\n   * @abstract\n   */\n  learn() {}\n}\n\nfunction add(inputLayer1, inputLayer2, settings) {\n  return new Add(inputLayer1, inputLayer2, settings);\n}\n\nmodule.exports = { Add, add, predict };\n","class Base {\n  static get defaults() {\n    return {};\n  }\n\n  constructor(layerTemplate, settings = {}) {\n    this.layerTemplate = layerTemplate;\n    this.width = layerTemplate.width || null;\n    this.height = layerTemplate.height || null;\n    this.depth = layerTemplate.depth || null;\n    Object.assign(this, this.constructor.defaults, settings);\n  }\n\n  setupKernels() {}\n\n  reuseKernels(praxis) {\n    if (praxis.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${praxis.width} is not ${\n          this.width\n        }`\n      );\n    }\n    if (praxis.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${\n          praxis.height\n        } is not ${this.height}`\n      );\n    }\n    if (praxis.hasOwnProperty('kernel')) {\n      this.kernel = praxis.kernel;\n    }\n  }\n\n  run() {}\n}\n\nmodule.exports = {\n  Base\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Base } = require('./base');\n\nfunction updateChange(value) {\n  return value;\n}\n\nfunction update(changes, weights, incomingWeights, inputDeltas) {\n  const lastChange = changes[this.thread.y][this.thread.x];\n  const inputDelta = inputDeltas[this.thread.y][0];\n  const weight = weights[this.thread.y][this.thread.x];\n  const incoming = incomingWeights[this.thread.x][0];\n\n  const change = this.constants.learningRate * inputDelta * incoming + this.constants.momentum * lastChange;\n  updateChange(change);\n  return weight + change;\n}\n\nclass ArthurDeviationWeights extends Base {\n  static get defaults() {\n    return {\n      learningRate: 0.3,\n      momentum: 0.1\n    };\n  }\n\n  constructor(layer, settings) {\n    super(layer, settings);\n    this.weightsLayer = null;\n    this.incomingLayer = null;\n    this.deltaLayer = null;\n\n    if (settings) {\n      if (settings.weightsLayer) {\n        this.weightsLayer = settings.weightsLayer\n      }\n      if (settings.incomingLayer) {\n        this.incomingLayer = settings.incomingLayer;\n      }\n      if (settings.deltaLayer) {\n        this.deltaLayer = settings.deltaLayer;\n      }\n    }\n\n    this.changes = zeros2D(layer.width, layer.height);\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(\n      this.changes,\n      this.weightsLayer.weights,\n      this.incomingLayer.weights,\n      this.deltaLayer.deltas\n    );\n    this.changes = output.changes;\n    return output.result;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      map: {\n        changes: updateChange\n      },\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.learningRate,\n        momentum: this.momentum\n      }\n    });\n  }\n}\n\nfunction arthurDeviationWeights(layer, settings) {\n  return new ArthurDeviationWeights(layer, settings);\n}\n\nmodule.exports = {\n  ArthurDeviationWeights,\n  arthurDeviationWeights,\n  update,\n  updateChange,\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst { Base } = require('./base');\n\nfunction update(weights, deltas) {\n  return weights[this.thread.y][this.thread.x] + this.constants.learningRate * deltas[this.thread.y][this.thread.x];\n}\n\nclass ArthurDeviationBiases extends Base {\n  static get defaults() {\n    return {\n      learningRate: 0.3\n    };\n  }\n\n  constructor(layer, settings) {\n    super(layer, settings);\n    this.kernel = null;\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(layer.weights, layer.deltas);\n    return output;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.learningRate\n      }\n    });\n  }\n}\n\nfunction arthurDeviationBiases(layer, settings) {\n  return new ArthurDeviationBiases(layer, settings);\n}\n\nmodule.exports = {\n  ArthurDeviationBiases,\n  arthurDeviationBiases,\n  update,\n};\n","module.exports = function randomWeight() {\n  return Math.random() * 0.4 - 0.2;\n};\n","function randomFloat(a, b) {\n  return Math.random() * (b - a) + a;\n}\n\n// Random numbers utils\nfunction gaussRandom() {\n  if (gaussRandom.returnV) {\n    gaussRandom.returnV = false;\n    return gaussRandom.vVal;\n  }\n  const u = 2 * Math.random() - 1;\n  const v = 2 * Math.random() - 1;\n  const r = u * u + v * v;\n  if (r === 0 || r > 1) {\n    return gaussRandom();\n  }\n  const c = Math.sqrt((-2 * Math.log(r)) / r);\n  gaussRandom.vVal = v * c; // cache this\n  gaussRandom.returnV = true;\n  return u * c;\n}\n\nfunction randomInteger(a, b) {\n  return Math.floor(Math.random() * (b - a) + a);\n}\n\nfunction randomN(mu, std) {\n  return mu + gaussRandom() * std;\n}\n\ngaussRandom.returnV = false;\ngaussRandom.vVal = 0;\n\nmodule.exports = { randomFloat, randomInteger, randomN };\n","const randomWeight = require('./random-weight');\nconst { randomFloat } = require('./random');\n\nmodule.exports = function randos(size, std) {\n  const array = new Float32Array(size);\n  if (std) {\n    for (let i = 0; i < size; i++) {\n      array[i] = randomFloat(-std, std);\n    }\n  } else {\n    for (let i = 0; i < size; i++) {\n      array[i] = randomWeight();\n    }\n  }\n  return array;\n};\n","const randos = require('./randos');\n\nmodule.exports = function randos2D(width, height, std = null) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = randos(width, std);\n  }\n  return result;\n};\n","const { Model } = require('./types');\nconst randos2D = require('../utilities/randos-2d');\nconst zeros2D = require('../utilities/zeros-2d');\n\nclass Random extends Model {\n  static get defaults() {\n    return {\n      std: null, // standard deviation\n    };\n  }\n\n  constructor(settings) {\n    super(settings);\n    this.validate();\n\n    if (!this.weights) {\n      this.weights = settings.std\n        ? randos2D(this.width, this.height, settings.std)\n        : randos2D(this.width, this.height);\n    }\n    if (!this.deltas) {\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nfunction random(settings) {\n  return new Random(settings);\n}\n\nmodule.exports = {\n  Random,\n  random\n};\n","const { makeKernel, release, clear } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Operator } = require('./types');\n\nfunction predict(weights1, weights2) {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += weights1[this.thread.y][i] * weights2[i][this.thread.x];\n  }\n  return sum;\n}\n\nfunction compareFromX(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i];\n  }\n  return sum;\n}\n\nfunction compareFromY(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y];\n  }\n  return sum;\n}\n\nclass Multiply extends Operator {\n  constructor(inputLayer1, inputLayer2, settings = {}) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.compareKernel1 = null;\n    this.compareKernel2 = null;\n\n    this.width = inputLayer2.width;\n    this.height = inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n\n    if (settings && settings.name) {\n      this.name = settings.name;\n    }\n    this.setupPraxis(settings);\n  }\n\n  validate() {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.height\n        }`\n      );\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      constants: {\n        size: this.inputLayer2.height,\n      },\n      immutable: true,\n    });\n    this.compareKernel1 = makeKernel(compareFromX, {\n      output: [this.inputLayer1.width, this.inputLayer1.height],\n      constants: {\n        size: this.inputLayer2.width,\n      },\n      immutable: true,\n    });\n    this.compareKernel2 = makeKernel(compareFromY, {\n      output: [this.inputLayer2.width, this.inputLayer2.height],\n      constants: {\n        size: this.inputLayer1.height,\n      },\n      immutable: true,\n    });\n  }\n\n  reuseKernels(layer) {\n    super.reuseKernels(layer);\n    this.compareKernel1 = layer.compareKernel1;\n    this.compareKernel2 = layer.compareKernel2;\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n    clear(this.deltas);\n  }\n\n  compare() {\n    const inputLayer1Deltas = this.inputLayer1.deltas;\n    const inputLayer2Deltas = this.inputLayer2.deltas;\n\n    const newDeltas1 = this.compareKernel1(\n      this.deltas,\n      this.inputLayer1.deltas,\n      this.inputLayer2.weights\n    );\n    const newDeltas2 = this.compareKernel2(\n      this.deltas,\n      this.inputLayer2.deltas,\n      this.inputLayer1.weights\n    );\n\n    this.inputLayer2.deltas = newDeltas2;\n    this.inputLayer1.deltas = newDeltas1;\n\n    release(inputLayer1Deltas);\n    release(inputLayer2Deltas);\n  }\n\n  learn() {}\n}\n\nfunction multiply(inputLayer1, inputLayer2, settings) {\n  return new Multiply(inputLayer1, inputLayer2, settings);\n}\n\nmodule.exports = { Multiply, multiply, predict, compareFromX, compareFromY };\n","const { Activation } = require('./types');\nconst { makeKernel, release, clear } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/sigmoid');\n\nfunction predict2D(inputs) {\n  return 1 / (1 + Math.exp(-inputs[this.thread.y][this.thread.x]));\n}\n\nfunction predict3D(inputs) {\n  return 1 / (1 + Math.exp(-inputs[this.thread.z][this.thread.y][this.thread.x]));\n}\n\nfunction compare2D(weights, deltas) {\n  const weight = weights[this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nfunction compare3D(weights, deltas) {\n  const weight = weights[this.thread.z][this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.z][this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nclass Sigmoid extends Activation {\n  setupKernels() {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer.weights);\n    clear(this.deltas);\n  }\n\n  compare() {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction sigmoid(inputLayer, settings) {\n  return new Sigmoid(inputLayer, settings);\n}\n\nmodule.exports = { Sigmoid, sigmoid, predict2D, predict3D, compare2D, compare3D };\n","const { arthurDeviationWeights } = require('../praxis/arthur-deviation-weights');\nconst { arthurDeviationBiases } = require('../praxis/arthur-deviation-biases');\nconst { add } = require('./add');\nconst { random } = require('./random');\nconst { multiply } = require('./multiply');\nconst { sigmoid } = require('./sigmoid');\n\nfunction arthurFeedForward(settings, inputLayer) {\n  const { height } = settings;\n  function weightsPraxis(layer, settings) {\n    const praxis = arthurDeviationWeights(layer, settings);\n    praxis.setupKernels();\n    return praxis;\n  }\n  function biasesPraxis(layer, settings) {\n    const praxis = arthurDeviationBiases(layer, settings);\n    praxis.setupKernels();\n    return praxis;\n  }\n  const weightsLayer = random({\n    name: 'weights',\n    height,\n    width: inputLayer.height,\n    praxis: weightsPraxis,\n  });\n\n  const biasesLayer = random({\n    name: 'biases',\n    height,\n    praxis: biasesPraxis,\n  });\n\n  const multiplyLayer = multiply(weightsLayer, inputLayer);\n  const addLayer = add(multiplyLayer, biasesLayer);\n  const sigmoidLayer = sigmoid(addLayer);\n\n  weightsLayer.praxis.weightsLayer = weightsLayer;\n  weightsLayer.praxis.incomingLayer = inputLayer;\n  weightsLayer.praxis.deltaLayer = sigmoidLayer;\n  return sigmoidLayer;\n}\n\nmodule.exports = {\n  arthurFeedForward\n};\n","function setStride(layer, settings) {\n  const { defaults } = layer.constructor;\n\n  if (settings.hasOwnProperty('stride')) {\n    layer.strideX = settings.stride;\n    layer.strideY = settings.stride;\n  } else {\n    if (settings.hasOwnProperty('strideX')) {\n      layer.strideX = settings.strideX;\n    } else {\n      layer.strideX = defaults.stride;\n    }\n\n    if (settings.hasOwnProperty('strideY')) {\n      layer.strideY = settings.strideY;\n    } else {\n      layer.strideY = defaults.stride;\n    }\n  }\n}\n\nfunction setPadding(layer, settings) {\n  const { defaults } = layer.constructor;\n\n  if (settings.hasOwnProperty('padding')) {\n    layer.paddingX = settings.padding;\n    layer.paddingY = settings.padding;\n  } else {\n    if (settings.hasOwnProperty('paddingX')) {\n      layer.paddingX = settings.paddingX;\n    } else {\n      layer.paddingX = defaults.padding;\n    }\n\n    if (settings.hasOwnProperty('paddingY')) {\n      layer.paddingY = settings.paddingY;\n    } else {\n      layer.paddingY = defaults.padding;\n    }\n  }\n}\n\nmodule.exports = { setStride, setPadding };\n","const rondos2D = require('./randos-2d');\n\nmodule.exports = function randos3D(width, height, depth) {\n  const result = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = rondos2D(width, height);\n  }\n  return result;\n}\n","module.exports = function values(size, value) {\n  return new Float32Array(size).fill(value);\n}","const { makeKernel, release, clone, clear } = require('../utilities/kernel');\nconst { setStride, setPadding } = require('../utilities/layer-setup');\nconst { Filter } = require('./types');\nconst randos = require('../utilities/randos');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros3D = require('../utilities/zeros-3d');\nconst values = require('../utilities/values');\n\nfunction predict(inputs, filters, biases) {\n  const startFilterX = this.constants.paddingX - (this.thread.x * this.constants.strideX);\n  const startInputX = (this.thread.x * this.constants.strideX) - this.constants.paddingX;\n  const endFilterX = Math.min(this.constants.filterWidth, startFilterX + this.constants.inputWidth);\n\n  const startFilterY = this.constants.paddingY - (this.thread.y * this.constants.strideY);\n  const startInputY = (this.thread.y * this.constants.strideY) - this.constants.paddingY;\n  const endFilterY = Math.min(this.constants.filterHeight, startFilterY + this.constants.inputHeight);\n\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let filterY = Math.max(0, startFilterY), inputY = Math.max(0, startInputY); filterY < endFilterY; filterY++, inputY++) {\n      for (let filterX = Math.max(0, startFilterX), inputX = Math.max(0, startInputX); filterX < endFilterX; filterX++, inputX++) {\n        sum += filters[z][filterY][filterX] * inputs[z][inputY][inputX];\n      }\n    }\n  }\n  return sum + biases[this.thread.z];\n}\n\nfunction compareFilterDeltas(filterDeltas, inputs, deltas) {\n  const startDeltaX = Math.max(0, Math.ceil((this.constants.paddingX - this.thread.x) / this.constants.strideX));\n  const startInputX = startDeltaX * this.constants.strideX + this.thread.x - this.constants.paddingX;\n  const endDeltaX = Math.min(this.constants.deltaWidth, Math.floor(((this.constants.inputWidth - 1) - this.thread.x + this.constants.paddingX) / this.constants.strideX) + 1);\n\n  const startDeltaY = Math.max(0, Math.ceil((this.constants.paddingY - this.thread.y) / this.constants.strideY));\n  const startInputY = startDeltaY * this.constants.strideY + this.thread.y - this.constants.paddingY;\n  const endDeltaY = Math.min(this.constants.deltaHeight, Math.floor(((this.constants.inputHeight - 1) - this.thread.y + this.constants.paddingY) / this.constants.strideY) + 1);\n\n  let sum = filterDeltas[this.thread.z][this.thread.y][this.thread.x];\n  for (let deltaY = startDeltaY, inputY = startInputY; deltaY < endDeltaY; deltaY++, inputY += this.constants.strideY) {\n    for (let deltaX = startDeltaX, inputX = startInputX; deltaX < endDeltaX; deltaX++, inputX += this.constants.strideX) {\n      sum += inputs[this.thread.z][inputY][inputX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nfunction compareInputDeltas(inputDeltas, filters, deltas) {\n  const x = this.thread.x + this.constants.paddingX;\n  const startDeltaX = x < this.constants.filterWidth ? 0 : Math.floor((x - this.constants.filterWidth + this.constants.strideX) / this.constants.strideX);\n  const startFilterX = x - startDeltaX * this.constants.strideX;\n  const endDeltaX = Math.min(startDeltaX + Math.floor(startFilterX / this.constants.strideX) + 1, this.constants.deltaWidth);\n\n  const y = this.thread.y + this.constants.paddingY;\n  const startDeltaY = y < this.constants.filterHeight ? 0 : Math.floor((y - this.constants.filterHeight + this.constants.strideY) / this.constants.strideY);\n  const startFilterY = y - startDeltaY * this.constants.strideY;\n  const endDeltaY = Math.min(startDeltaY + Math.floor(startFilterY / this.constants.strideY) + 1, this.constants.deltaHeight);\n\n  let sum = inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n  let deltaY = startDeltaY;\n  for (let filterY = startFilterY; deltaY < endDeltaY; filterY -= this.constants.strideY, deltaY++) {\n    let deltaX = startDeltaX;\n    for (let filterX = startFilterX; deltaX < endDeltaX; filterX -= this.constants.strideX, deltaX++) {\n      sum += filters[this.thread.z][filterY][filterX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nfunction compareBiases(biasDeltas, deltas) {\n  let sum = 0;\n  for (let y = 0; y < this.constants.deltaHeight; y++) {\n    for (let x = 0; x < this.constants.deltaWidth; x++) {\n      sum += deltas[this.thread.z][y][x];\n    }\n  }\n  return biasDeltas[this.thread.z][this.thread.y][this.thread.x] + sum;\n}\n\nclass Convolution extends Filter {\n  static get defaults() {\n    return {\n      stride: 0,\n      padding: 0,\n      bias: 0.1,\n      filterCount: 1,\n      filterWidth: 0,\n      filterHeight: 0,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n\n    this.stride = null;\n    this.strideX = null;\n    this.strideY = null;\n    setStride(this, settings);\n\n    this.padding = null;\n    this.paddingX = null;\n    this.paddingY = null;\n    setPadding(this, settings);\n\n    this.filterCount = settings.filterCount;\n    this.filterWidth = settings.filterWidth;\n    this.filterHeight = settings.filterHeight;\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    );\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n    this.depth = this.filterCount;\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.biases = values(this.depth, this.bias);\n    this.biasDeltas = randos(this.depth);\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount);\n\n    this.learnFilters = null;\n    this.learnInputs = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n      immutable: true,\n    });\n\n    this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n      constants: {\n        deltasWidth: this.width,\n        deltasHeight: this.height,\n        deltasDepth: this.depth,\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n      immutable: true,\n    });\n\n    this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n      constants: {\n        filterCount: this.filterCount,\n      },\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n      immutable: true,\n    });\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [1, 1, this.depth],\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n      },\n      immutable: true,\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare() {\n    const { filterDeltas, biasDeltas } = this;\n    this.filterDeltas = this.compareFilterDeltasKernel(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(filterDeltas);\n    this.biasDeltas = this.compareBiasesKernel(biasDeltas, this.deltas);\n    release(biasDeltas);\n    release(this.deltas);\n    this.deltas = this.compareInputDeltasKernel(this.filters, this.inputLayer.deltas);\n\n    release(this.inputLayer.deltas);\n    //TODO: do we need to clone here?\n    this.inputLayer.deltas = clone(this.deltas);\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    // TODO: handle filters\n    // TODO: do we need to release here?\n    const { weights: oldWeights } = this;\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    release(oldWeights);\n    clear(this.deltas);\n  }\n}\n\nfunction convolution(settings, inputLayer) {\n  return new Convolution(settings, inputLayer);\n}\n\nmodule.exports = {\n  Convolution,\n  convolution,\n  predict,\n  compareFilterDeltas,\n  compareInputDeltas,\n  compareBiases\n};\n","const { Filter } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\n\nfunction setDropout(dropout) {\n  return dropout;\n}\nfunction trainingPredict(inputs) {\n  if (setDropout(Math.random()) < this.constants.probability) {\n    return 0;\n  }\n  return inputs[this.thread.y][this.thread.x];\n}\n\nfunction predict(inputs) {\n  return inputs[this.thread.y][this.thread.x] * this.constants.probability;\n}\n\nfunction compare(dropouts, deltas) {\n  if (dropouts[this.thread.y][this.thread.x] === 0) {\n    return 0;\n  }\n  return deltas[this.thread.y][this.thread.x];\n}\n\nclass Dropout extends Filter {\n  static get defaults() {\n    return {\n      width: 1,\n      height: 1,\n      depth: null,\n      probability: 0.5\n    };\n  }\n\n  constructor(inputLayer, settings) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.height = inputLayer.height;\n    this.width = inputLayer.width;\n    this.dropouts = null;\n    this.validate();\n  }\n\n  setupKernels(isTraining) {\n    const output = [this.width, this.height];\n\n    if (isTraining) {\n      this.predictKernel = makeKernel(trainingPredict, {\n        output,\n        map: { dropouts: setDropout },\n        immutable: true,\n      });\n      this.compareKernel = makeKernel(compare, { output, immutable: true, });\n    } else {\n      this.predictKernel = makeKernel(predict, { output, immutable: true, });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    release(this.dropouts);\n    const { result, dropouts } = this.predictKernel(this.inputLayer.weights);\n    this.weights = result;\n    this.dropouts = dropouts;\n  }\n\n  compare() {\n    release(this.deltas);\n    this.deltas = this.compareKernel(this.dropouts, this.inputLayer.deltas);\n  }\n}\n\nfunction dropout(settings, inputLayer) {\n  return new Dropout(settings, inputLayer);\n}\n\nmodule.exports = { Dropout, dropout, setDropout, trainingPredict, predict, compare };\n","const { random } = require('./random');\nconst { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { sigmoid } = require('./sigmoid');\n\nfunction feedForward(settings, input) {\n  const { height, praxisOpts } = settings;\n  const weights = random({ name: 'weights', height, width: input.height, praxisOpts });\n  const biases = random({ name: 'biases', height, praxisOpts });\n  return sigmoid(add(multiply(weights, input, { praxisOpts }), biases, { praxisOpts }), { praxisOpts });\n}\n\nmodule.exports = {\n  feedForward\n};\n","const { Filter } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst values = require('../utilities/values');\nconst randos2D = require('../utilities/randos-2d');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nfunction predict(inputs, filters, biases) {\n  let output = 0;\n  let i = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      output += inputs[y][x] * filters[this.thread.x][i];\n      i++;\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nfunction predict3D(inputs, filters, biases) {\n  let output = 0;\n  let i = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        output += inputs[z][y][x] * filters[this.thread.x][i];\n        i++;\n      }\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nfunction compareInputDeltas(inputDeltas, deltas, filters) {\n  let sum = 0;\n  const filterX = this.thread.x + (this.thread.y * this.output.x);\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.y][this.thread.x];\n}\n\nfunction compareInputDeltas3D(inputDeltas, deltas, filters) {\n  let sum = 0;\n  const filterX = this.thread.x + (this.thread.y * this.output.x);\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n}\n\nfunction compareBiases(biases, deltas) {\n  return biases[this.thread.x] + deltas[this.thread.y][this.thread.x];\n}\n\nfunction compareFilterDeltas(filterDeltas, inputWeights, deltas) {\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[this.thread.y][this.thread.x] * deltas[this.constants.deltaY][this.constants.deltaX]);\n}\n\nfunction compareFilterDeltas3D(filterDeltas, inputWeights, deltas) {\n  const inputZ = Math.floor(this.thread.x / (this.constants.inputWidth * this.constants.inputHeight));\n  const inputY = Math.floor((this.thread.x - inputZ * this.constants.inputWidth * this.constants.inputHeight) / this.constants.inputWidth);\n  const inputX = this.thread.x - this.constants.inputWidth * (inputY + this.constants.inputHeight * inputZ);\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[inputZ][inputY][inputX] * deltas[0][this.thread.y]);\n}\n\nclass FullyConnected extends Filter {\n  static get defaults() {\n    return {\n      bias: 0.1,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n    this.compareFilterDeltasKernel = null;\n    this.compareInputDeltasKernel = null;\n    this.compareBiasesKernel = null;\n\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n\n    this.biases = values(this.height, this.bias);\n    this.biasDeltas = zeros(this.height);\n\n    this.filters = randos2D(connectionCount, this.height);\n    this.filterDeltas = zeros2D(connectionCount, this.height);\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height);\n      this.deltas = zeros3D(this.width, this.height);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  validate() {\n    super.validate();\n    if (this.depth > 0) throw new Error('depth not supported');\n  }\n\n  setupKernels() {\n    const { inputLayer } = this;\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n    if (inputLayer.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n          inputDepth: inputLayer.depth,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas3D, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n        immutable: true,\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas3D, {\n        output: [inputLayer.width, inputLayer.height, inputLayer.depth],\n        constants: {\n          filterCount: this.height,\n        },\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n        output: [inputLayer.width, inputLayer.height],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    }\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare() {\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = this.compareInputDeltasKernel(\n      inputLayerDeltas,\n      this.deltas,\n      this.filters\n    );\n    release(inputLayerDeltas);\n\n    const { biasDeltas, filterDeltas } = this;\n    // TODO: handle biasDeltas learn\n    this.biasDeltas = this.compareBiasesKernel(this.biases, this.deltas);\n\n    // TODO: handle filterDeltas learn\n    this.filterDeltas = this.compareFilterDeltasKernel(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(biasDeltas);\n    release(filterDeltas);\n  }\n}\n\nfunction fullyConnected(settings, inputLayer) {\n  return new FullyConnected(settings, inputLayer);\n}\n\nmodule.exports = { FullyConnected, fullyConnected, predict, predict3D, compareInputDeltas, compareInputDeltas3D, compareBiases, compareFilterDeltas, compareFilterDeltas3D };\n","const { makeKernel, release } = require('../utilities/kernel');\nconst { Modifier } = require('./types');\n\nfunction predict(weights) {\n  return -weights[this.thread.y][this.thread.x];\n}\n\nclass Negative extends Modifier {\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n}\n\nfunction negative(settings, inputLayer) {\n  return new Negative(settings, inputLayer);\n}\n\nmodule.exports = { Negative, negative, predict };\n","const { makeKernel, release, clear } = require('../utilities/kernel');\nconst { Operator } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { checkSameSize } = require('../utilities/layer-size');\n\nfunction predict(inputLayerWeights1, inputLayerWeights2) {\n  return (\n    inputLayerWeights1[this.thread.y][this.thread.x] *\n    inputLayerWeights2[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare(weights, deltas) {\n  return (\n    weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nclass MultiplyElement extends Operator {\n  constructor(inputLayer1, inputLayer2) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n\n    this.width = inputLayer1.width;\n    this.height = inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  validate() {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer1.weights, this.inputLayer2.weights);\n    clear(this.deltas);\n  }\n\n  compare() {\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = this.compareKernel(this.inputLayer2.weights, this.deltas);\n    this.inputLayer2.deltas = this.compareKernel(this.inputLayer1.weights, this.deltas);\n  }\n}\n\nfunction multiplyElement(inputLayer1, inputLayer2) {\n  return new MultiplyElement(inputLayer1, inputLayer2);\n}\n\nmodule.exports = { MultiplyElement, multiplyElement, predict, compare };\n","module.exports = function ones(size) {\n  return new Float32Array(size).fill(1);\n}\n","const ones = require('./ones');\n\nmodule.exports = function ones2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = ones(width);\n  }\n  return result;\n}\n","const ones2D = require('../utilities/ones-2d');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Model } = require('./types');\n\nclass Ones extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = ones2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n}\n\nfunction ones(settings) {\n  return new Ones(settings);\n}\n\nmodule.exports = {\n  Ones,\n  ones\n};\n","const { Activation } = require('./activation');\nconst { makeKernel } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/tanh');\nconst { release, clear } = require('../utilities/kernel');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, errors) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    errors[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare3D(weights, errors) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    errors[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass Tanh extends Activation {\n  setupKernels() {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer.weights);\n    clear(this.deltas);\n  }\n\n  compare() {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction tanh(inputLayer, settings) {\n  return new Tanh(inputLayer, settings);\n}\n\nmodule.exports = { Tanh, tanh, predict2D, predict3D, compare2D, compare3D };\n","const zeros2D = require('../utilities/zeros-2d');\nconst { Model } = require('./types');\n\nclass Zeros extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nfunction zeros(settings) {\n  return new Zeros(settings);\n}\n\nmodule.exports = {\n  Zeros,\n  zeros\n};\n","const { add } = require('./add');\nconst { negative } = require('./negative');\nconst { multiply } = require('./multiply');\nconst { multiplyElement } = require('./multiply-element');\nconst { ones } = require('./ones');\nconst { sigmoid } = require('./sigmoid');\nconst { random } = require('./random');\nconst { tanh } = require('./tanh');\nconst { zeros } = require('./zeros');\n\nfunction gru(settings, recurrentInput, input) {\n  const { height } = settings;\n  const updateGateWeights = random({ height, width: input.height });\n  const updateGatePeepholes = random({ width: height, height });\n  const updateGateBias = zeros({ height });\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(updateGateWeights, input),\n        multiply(updateGatePeepholes, recurrentInput)\n      ),\n      updateGateBias\n    )\n  );\n\n  const resetGateWeights = random({ height, width: input.height });\n  const resetGatePeepholes = random({ width: height, height });\n  const resetGateBias = zeros({ height });\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(resetGateWeights, input),\n        multiply(resetGatePeepholes, recurrentInput)\n      ),\n      resetGateBias\n    )\n  );\n\n  const cellWeights = random({ height, width: input.height });\n  const cellPeepholes = random({ width: height, height });\n  const cellBias = zeros({ height });\n  const cell = tanh(\n    add(\n      add(\n        multiply(cellWeights, input),\n        multiply(cellPeepholes, multiplyElement(resetGate, recurrentInput))\n      ),\n      cellBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(ones(updateGate.rows, updateGate.columns), negative(updateGate)),\n      cell\n    ),\n    multiplyElement(recurrentInput, updateGate)\n  );\n}\n\nmodule.exports = {\n  gru\n};\n","const { EntryPoint } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { makeKernel, release, kernelInput, clear } = require('../utilities/kernel');\n\nclass Input extends EntryPoint {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = null;\n    this.reshapeInput = null;\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels() {\n    if (this.width === 1) {\n      this.predict = this.predict1D;\n      this.reshapeInput = makeKernel(function(value) {\n        return value[this.thread.y];\n      }, {\n        output: [1, this.height],\n        immutable: true,\n      });\n    } else {\n      this.reshapeInput = (inputs) => inputs;\n    }\n  }\n\n  reuseKernels(layer) {\n    super.reuseKernels(layer);\n    this.reshapeInput = layer.reshapeInput;\n  }\n\n  predict(inputs) {\n    if (typeof inputs[0] !== 'object' && inputs.length === this.height * this.width) {\n      release(this.weights);\n      this.weights = kernelInput(inputs, [this.width, this.height]);\n    } else if (\n      inputs.length === this.height &&\n      inputs[0].length === this.width\n    ) {\n      this.weights = clone(inputs);\n    } else {\n      throw new Error('Inputs are not of sized correctly');\n    }\n    clear(this.deltas);\n  }\n\n  predict1D(inputs) {\n    if (this.weights) release(this.weights);\n    this.weights = this.reshapeInput(inputs);\n    clear(this.deltas);\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  toJSON() {\n    const jsonLayer = {};\n    const { defaults, name } = this.constructor;\n    const keys = Object.keys(defaults);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n\n      if (key === 'deltas' || key === 'weights') continue;\n      jsonLayer[key] = this[key];\n    }\n    jsonLayer.type = name;\n    return jsonLayer;\n  }\n}\n\nfunction input(settings) {\n  return new Input(settings);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n","const { Activation } = require('./types');\nconst { makeKernel, release, clear } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/leaky-relu');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare3D(weights, deltas) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass LeakyRelu extends Activation {\n  setupKernels() {\n    const { width, height, depth } = this.inputLayer;\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer.weights);\n    clear(this.deltas);\n  }\n\n  compare() {\n    const { deltas } = this;\n    this.deltas = this.compareKernel(this.weights, deltas);\n    release(deltas);\n  }\n}\n\nfunction leakyRelu(inputLayer, settings) {\n  return new LeakyRelu(inputLayer, settings);\n}\n\nmodule.exports = { LeakyRelu, leakyRelu, predict2D, predict3D, compare2D, compare3D };\n","const { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { multiplyElement } = require('./multiply-element');\nconst { random } = require('./random');\nconst { sigmoid } = require('./sigmoid');\nconst { tanh } = require('./tanh');\nconst { zeros } = require('./zeros');\n\nfunction lstmCell(settings, input, recurrentInput) {\n  const { height } = settings;\n\n  if (recurrentInput.setDimensions) recurrentInput.setDimensions(1, height);\n\n  const inputGateWeights = random({ height, width: input.height, std: 0.08 });\n  const inputGatePeepholes = random({ width: height, height, std: 0.08 });\n  const inputGateBias = zeros({ height });\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(inputGateWeights, input),\n        multiply(inputGatePeepholes, recurrentInput)\n      ),\n      inputGateBias\n    )\n  );\n\n  const forgetGateWeights = random({ height, width: input.height, std: 0.08 });\n  const forgetGatePeepholes = random({ width: height, height, std: 0.08 });\n  const forgetGateBias = zeros({ height });\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(forgetGateWeights, input),\n        multiply(forgetGatePeepholes, recurrentInput)\n      ),\n      forgetGateBias\n    )\n  );\n\n  const outputGateWeights = random({ height, width: input.height, std: 0.08 });\n  const outputGatePeepholes = random({ width: height, height, std: 0.08 });\n  const outputGateBias = zeros({ height });\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(outputGateWeights, input),\n        multiply(outputGatePeepholes, recurrentInput)\n      ),\n      outputGateBias\n    )\n  );\n\n  const memoryWeights = random({ height, width: input.height, std: 0.08 });\n  const memoryPeepholes = random({ width: height, height, std: 0.08 });\n  const memoryBias = zeros({ height });\n  const memory = tanh(\n    add(\n      add(\n        multiply(memoryWeights, input),\n        multiply(memoryPeepholes, recurrentInput)\n      ),\n      memoryBias\n    )\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, recurrentInput); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, memory); // what do we write to cell\n  const cell = add(retainCell, writeCell); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell));\n}\n\nmodule.exports = {\n  lstmCell\n};\n","const { makeKernel, release, clone, clear } = require('../utilities/kernel');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\nconst { Filter } = require('./types');\n\nfunction compare1D(weights, targetValues) {\n  // return targetValues[this.thread.x] - weights[this.thread.y][this.thread.x];\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x];\n}\n\nfunction compare2D(weights, targetValues) {\n  // return targetValues[this.thread.y][this.thread.x] - weights[this.thread.y][this.thread.x];\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.y][this.thread.x];\n}\n\nclass Target extends Filter {\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.width = inputLayer.width;\n    this.height = inputLayer.height;\n    this.depth = inputLayer.depth;\n    this.validate();\n    if (this.depth) {\n      throw new Error('Target layer not implemented for depth');\n    } else if (this.height) {\n      this.weights = zeros2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n      this.errors = zeros2D(this.width, this.height);\n    } else {\n      this.weights = zeros(this.width);\n      this.deltas = zeros(this.width);\n      this.errors = zeros(this.width);\n    }\n  }\n\n  setupKernels() {\n    const compareFn = this.width === 1 ? compare1D : compare2D;\n    this.compareKernel = makeKernel(compareFn, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n  }\n\n  predict() {\n    //TODO: should we clone here?\n    // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights);\n    clear(this.deltas);\n  }\n\n  compare(targetValues) {\n    // this is where weights attach to deltas\n    // deltas will be zero on learn, so save it in error for comparing to mse later\n    release(this.deltas);\n    release(this.errors);\n    release(this.inputLayer.deltas);\n    this.deltas = this.compareKernel(this.weights, targetValues);\n    this.inputLayer.deltas = clone(this.deltas);\n    this.errors = clone(this.deltas);\n  }\n\n  setupPraxis() {}\n}\n\nfunction target(settings, inputLayer) {\n  return new Target(settings, inputLayer);\n}\n\nmodule.exports = {\n  Target,\n  target\n};\n","const { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { random } = require('./random');\nconst { target } = require('./target');\n\nfunction output(settings, inputLayer) {\n  const { height } = settings;\n  const outputGate = random({ height, width: inputLayer.height, name: 'outputGate', std: 0.08 });\n  const output = random({ height, name: 'output', std: 0.08 });\n  const outputGateConnector = multiply(outputGate, inputLayer, { name: 'outputGateConnected' });\n  return target({ name: 'target', ...settings }, add(outputGateConnector, output));\n}\n\nmodule.exports = {\n  output\n};\n","const { Filter } = require('./types');\nconst { makeKernel, release } = require('../utilities/kernel');\nconst { setPadding, setStride } = require('../utilities/layer-setup');\nconst zeros3D = require('../utilities/zeros-3d');\nconst randos3D = require('../utilities/randos-3d');\n\nfunction setSwitchY(value) {\n  return value;\n}\n\nfunction setSwitchX(value) {\n  return value;\n}\n\nfunction predict(inputs) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.inputWidth -\n      this.constants.paddingX\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.inputHeight -\n      this.constants.paddingY\n  );\n  let largestValue = -Infinity;\n  let largestX = -1;\n  let largestY = -1;\n\n  // convolve centered at this particular location\n  for (let filterY = 0; filterY < this.constants.filterHeight; filterY++) {\n    // coordinates in the original input array coordinates\n    const inputY = filterY + y;\n    for (let filterX = 0; filterX < this.constants.filterWidth; filterX++) {\n      const inputX = filterX + x;\n      if (\n        inputY >= 0 &&\n        inputY < this.constants.inputHeight &&\n        inputX >= 0 &&\n        inputX < this.constants.inputWidth\n      ) {\n        const input = inputs[this.thread.z][inputY][inputX];\n        if (input > largestValue) {\n          largestValue = input;\n          largestY = inputY;\n          largestX = inputX;\n        }\n      }\n    }\n  }\n  setSwitchY(largestY);\n  setSwitchX(largestX);\n  return largestValue;\n}\n\nfunction compare(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[deltasY][deltasX];\n      const switchYValue = switchY[deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction compare3D(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[this.thread.z][deltasY][deltasX];\n      const switchYValue = switchY[this.thread.z][deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[this.thread.z][deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nclass Pool extends Filter {\n  static get defaults() {\n    return {\n      padding: 0,\n      bias: 0,\n      filterWidth: 0,\n      filterHeight: 0,\n      filterCount: 0,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n\n    this.stride = null;\n    this.strideX = null;\n    this.strideY = null;\n    setStride(this, settings);\n\n    this.padding = null;\n    this.paddingX = null;\n    this.paddingY = null;\n    setPadding(this, settings);\n\n    this.filterCount = settings.filterCount;\n    this.filterWidth = settings.filterWidth;\n    this.filterHeight = settings.filterHeight;\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    );\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n    // TODO: handle 1 depth?\n    this.depth = this.filterCount;\n\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount);\n\n    this.learnFilters = null;\n    this.learnInputs = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height, this.depth],\n      map: {\n        switchX: setSwitchX,\n        switchY: setSwitchY,\n      },\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterHeight: this.filterHeight,\n        filterWidth: this.filterWidth,\n      },\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.inputLayer.width, this.inputLayer.height, this.inputLayer.depth],\n      constants: {\n        outputWidth: this.width,\n        outputHeight: this.height,\n        outputDepth: this.depth,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n      },\n    });\n  }\n\n  predict() {\n    const { result: weights, switchX, switchY } = this.predictKernel(this.inputLayer.weights);\n    this.switchX = switchX;\n    this.switchY = switchY;\n    this.weights = weights;\n    return this.weights;\n  }\n\n  compare() {\n    debugger;\n    const depth = this.inputLayer.deltas.length;\n    const height = this.inputLayer.deltas[0].length;\n    const width = this.inputLayer.deltas[0][0].length;\n    const type = typeof this.inputLayer.deltas[0][0][0];\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = this.compareKernel(\n      this.deltas,\n      this.switchX,\n      this.switchY\n    );\n    release(inputLayerDeltas);\n    debugger;\n    if (depth !== this.inputLayer.deltas.length) debugger;\n    if (height !== this.inputLayer.deltas[0].length) debugger;\n    if (width !== this.inputLayer.deltas[0][0].length) debugger;\n    if (type !== typeof this.inputLayer.deltas[0][0][0]) debugger;\n  }\n}\n\nfunction pool(settings, inputLayer) {\n  return new Pool(settings, inputLayer);\n}\n\nmodule.exports = { Pool, pool, predict, compare, compare3D };\n","const { Activation } = require('./types');\nconst { makeKernel, release, clear } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/relu');\nconst zeros2D = require('../utilities/zeros-2d');\n\nfunction predict2D(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction compare2D(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare3D(weights, deltas) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass Relu extends Activation {\n  setupKernels() {\n    const { width, height, depth } = this.inputLayer;\n    if (depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict() {\n    release(this.weights);\n    this.weights = this.predictKernel(this.inputLayer.weights);\n    clear(this.deltas);\n  }\n\n  compare() {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction relu(inputLayer, settings) {\n  return new Relu(inputLayer, settings);\n}\n\nmodule.exports = { Relu, relu, predict2D, compare2D, predict3D, compare3D };\n","const { relu } = require('./relu');\nconst { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { random } = require('./random');\nconst { zeros } = require('./zeros');\n\nfunction rnnCell(settings, input, recurrentInput) {\n  const { height } = settings;\n\n  if (recurrentInput.setDimensions) recurrentInput.setDimensions(1, height);\n\n  // wxh\n  const weight = random({ name: 'weight', height, width: input.height, std: 0.08 });\n  // whh\n  const transition = random({ name: 'transition', height, width: height, std: 0.08 });\n  // bhh\n  const bias = zeros({ name: 'bias', height });\n\n  return relu(\n    add(\n      add(multiply(weight, input), multiply(transition, recurrentInput)),\n      bias\n    )\n  );\n}\n\nmodule.exports = {\n  rnnCell\n};\n","const { Base } = require('./base');\n\nclass Regression extends Base {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n  }\n\n  predict() {\n    this.weights = this.inputs;\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(inputs, targets) {\n  return inputs[this.thread.x] - targets[this.thread.x];\n}\n\n// TODO: handle `loss += 0.5*dy*dy;` total and sum in learn\nfunction regression(settings, inputLayer) {\n  return new Regression(settings, inputLayer);\n}\n\nmodule.exports = {\n  Regression,\n  regression,\n  learn\n};\n","const { makeKernel, release, clone } = require('../utilities/kernel');\nconst { Filter } = require('./types');\nconst randos = require('../utilities/randos');\nconst randos2D = require('../utilities/randos-2d');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nfunction getMaxValue(inputs) {\n  let maxInput = -Infinity;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    const input = inputs[x];\n    if (input > maxInput) {\n      maxInput = input;\n    }\n  }\n  return maxInput;\n}\n\nfunction getMaxValue2D(inputs) {\n  let maxInput = -Infinity;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      const input = inputs[y][x];\n      if (input > maxInput) {\n        maxInput = input;\n      }\n    }\n  }\n  return maxInput;\n}\n\nfunction getMaxValue3D(inputs) {\n  let maxInput = -Infinity;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        const input = inputs[z][y][x];\n        if (input > maxInput) {\n          maxInput = input;\n        }\n      }\n    }\n  }\n  return maxInput;\n}\n\nfunction getSum(inputs) {\n  let sum = 0;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    sum += inputs[x];\n  }\n  return sum;\n}\n\nfunction getSum2D(inputs) {\n  let sum = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      sum += inputs[y][x];\n    }\n  }\n  return sum;\n}\n\nfunction getSum3D(inputs) {\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        sum += inputs[z][y][x];\n      }\n    }\n  }\n  return sum;\n}\n\nfunction getExponentials(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.x] - maxInput[0]\n  );\n}\n\nfunction getExponentials2D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nfunction getExponentials3D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nfunction predict(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.x] / exponentialsSum[0]\n  );\n}\n\nfunction predict2D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nfunction predict3D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.z][this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nfunction compare(target, exponentials) {\n  let indicator = 0;\n  if (this.thread.x === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.x]);\n}\n\nfunction compare2D(target, exponentials) {\n  let indicator = 0;\n  const index = this.thread.x + (this.thread.y * this.output.x);\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.y][this.thread.x]);\n}\n\nfunction compare3D(target, exponentials) {\n  let indicator = 0;\n  const index = this.thread.x\n    + (this.thread.y * this.output.x)\n    + (this.thread.z * this.output.x * this.output.y);\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction loss(exponentials) {\n  return -Math.log();\n}\n\n// TODO: handle: `return -Math.log(this.es[y]);` in learn\n\nclass SoftMax extends Filter {\n  constructor(inputLayer) {\n    super();\n    this.width = inputLayer.width;\n    this.height = inputLayer.height;\n    this.depth = inputLayer.depth;\n    this.getExponentialsKernel = null;\n    this.getMaxValueKernel = null;\n    this.getSumKernel = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    } else {\n      this.weights = randos(this.width);\n      this.deltas = zeros(this.width);\n    }\n  }\n\n  setupKernels() {\n    const { width, height, depth } = this;\n    if (depth > 0) {\n      this.getExponentialsKernel = makeKernel(getExponentials3D, {\n        output: [width, height, depth],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n      });\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        immutable: true,\n      });\n    } else {\n      this.getExponentialsKernel = makeKernel(getExponentials, {\n        output: [width, height],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n      });\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        immutable: true,\n      });\n    }\n  }\n\n  predict() {\n    const maxValue = this.getMaxValueKernel(this.inputLayer.weights);\n    const exponentials = this.getExponentialsKernel(\n      this.inputLayer.weights,\n      maxValue\n    );\n    const exponentialsSum = this.getSumKernel(exponentials);\n    this.weights = this.predictKernel(exponentials, exponentialsSum);\n  }\n\n  compare(targetValues) {\n    const { deltas, errors } = this;\n    this.errors = this.compareKernel(targetValues[0], deltas);\n    this.deltas = clone(this.errors);\n    release(deltas);\n    release(errors);\n\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = clone(this.deltas);\n    release(inputLayerDeltas);\n  }\n}\n\nfunction softMax(settings, inputLayer) {\n  return new SoftMax(settings, inputLayer);\n}\n\nmodule.exports = {\n  SoftMax, softMax,\n  getMaxValue, getMaxValue2D, getMaxValue3D,\n  getSum, getSum2D, getSum3D,\n  getExponentials, getExponentials2D, getExponentials3D,\n  predict, predict2D, predict3D,\n  compare, compare2D, compare3D,\n  loss\n};\n","const { Base } = require('./base');\n\nclass SVM extends Base {\n  predict() {\n    this.weights = this.inputs;\n    this.validate();\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(target) {\n  // if(y === i) { continue; }\n  // var ydiff = -yscore + x.w[i] + margin;\n  // if(ydiff > 0) {\n  //   // violating dimension, apply loss\n  //   x.dw[i] += 1;\n  //   x.dw[y] -= 1;\n  //   loss += ydiff;\n  // }\n}\n\nfunction svm(settings, inputLayer) {\n  return new SVM(settings, inputLayer);\n}\n\nmodule.exports = {\n  SVM,\n  svm\n};\n","const { Modifier } = require('./types');\nconst { makeKernel, release, clear } = require('../utilities/kernel');\n\nfunction predict(array) {\n  return array[this.thread.x][this.thread.y];\n}\n\nconst compare = predict;\n\nclass Transpose extends Modifier {\n  constructor(inputLayer) {\n    super();\n    this.inputLayer = inputLayer;\n    this.width = this.inputLayer.height;\n    this.height = this.inputLayer.width;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.height, this.width],\n    });\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n    clear(this.deltas);\n  }\n\n  compare() {\n    // TODO: needs switched to this.compareKernel?\n    this.inputLayer.deltas = this.predictKernel(this.deltas);\n  }\n}\n\nfunction transpose(inputLayer) {\n  return new Transpose(inputLayer);\n}\n\nmodule.exports = {\n  Transpose,\n  transpose,\n};\n","const { Add, add } = require('./add');\nconst { arthurFeedForward } = require('./arthur-feed-forward');\nconst { Base } = require('./base');\nconst { Convolution, convolution } = require('./convolution');\nconst { Dropout, dropout } = require('./dropout');\nconst { feedForward } = require('./feed-forward');\nconst { FullyConnected, fullyConnected } = require('./fully-connected');\nconst { gru } = require('./gru');\nconst { Input, input } = require('./input');\nconst { LeakyRelu, leakyRelu } = require('./leaky-relu');\nconst { lstmCell } = require('./lstm-cell');\nconst { Multiply, multiply } = require('./multiply');\nconst { MultiplyElement, multiplyElement } = require('./multiply-element');\nconst { Negative, negative } = require('./negative');\nconst { Ones, ones } = require('./ones');\nconst { output } = require('./output');\nconst { Pool, pool } = require('./pool');\nconst { Random, random } = require('./random');\nconst { rnnCell } = require('./rnn-cell');\nconst { Regression, regression } = require('./regression');\nconst { Relu, relu } = require('./relu');\nconst { Sigmoid, sigmoid } = require('./sigmoid');\nconst { SoftMax, softMax } = require('./soft-max');\nconst { SVM, svm } = require('./svm');\nconst { Tanh, tanh } = require('./tanh');\nconst { Target, target } = require('./target');\nconst { Transpose, transpose } = require('./transpose');\nconst { Zeros, zeros } = require('./zeros');\nconst types = require('./types');\n\n/**\n * @description Layer API, to make it easier to use layers for the world\n */\nmodule.exports = {\n  Add,\n  add,\n  arthurFeedForward,\n  Base,\n  Convolution,\n  convolution,\n  Dropout,\n  dropout,\n  feedForward,\n  FullyConnected,\n  fullyConnected,\n  gru,\n  Input,\n  input,\n  LeakyRelu,\n  leakyRelu,\n  lstmCell,\n  Multiply,\n  multiply,\n  MultiplyElement,\n  multiplyElement,\n  Negative,\n  negative,\n  Ones,\n  ones,\n  output,\n  Pool,\n  pool,\n  Random,\n  random,\n  Regression,\n  regression,\n  Relu,\n  relu,\n  rnnCell,\n  Sigmoid,\n  sigmoid,\n  SoftMax,\n  softMax,\n  SVM,\n  svm,\n  Tanh,\n  tanh,\n  Target,\n  target,\n  Transpose,\n  transpose,\n  Zeros,\n  zeros,\n\n  types,\n};\n","/**\n *\n * @param {*} input\n * @param {brain.NeuralNetwork} net\n * @returns {*}\n */\nmodule.exports = function likely(input, net) {\n  if (!net) {\n    throw new TypeError(\n      `Required parameter 'net' is of type ${typeof net}. Must be of type 'brain.NeuralNetwork'`\n    );\n  }\n\n  const output = net.run(input);\n  let maxProp = null;\n  let maxValue = -1;\n\n  Object.keys(output).forEach((key) => {\n    const value = output[key];\n    if (value > maxValue) {\n      maxProp = key;\n      maxValue = value;\n    }\n  });\n\n  return maxProp;\n};\n","/* Functions for turning sparse hashes into arrays and vice versa */\nclass lookup {\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} hashes\n   * @returns {Object}\n   */\n  static toTable(hashes) {\n    const hash = hashes.reduce((memo, hash) => {\n      return Object.assign(memo, hash);\n    }, {});\n\n    return lookup.toHash(hash);\n  }\n\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} objects2D\n   * @returns {Object}\n   */\n  static toTable2D(objects2D) {\n    const table = {};\n    let valueIndex = 0;\n    for (let i = 0; i < objects2D.length; i++) {\n      const objects = objects2D[i];\n      for (let j = 0; j < objects.length; j++) {\n        const object = objects[j];\n        for (const p in object) {\n          if (object.hasOwnProperty(p) && !table.hasOwnProperty(p)) {\n            table[p] = valueIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  static toInputTable(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      for (let p in data[dataIndex].input) {\n        if (!table.hasOwnProperty(p)) {\n          table[p] = tableIndex++;\n        }\n      }\n    }\n    return table;\n  }\n\n  static toInputTable2D(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const input = data[dataIndex].input;\n      for (let i = 0; i < input.length; i++) {\n        const object = input[i];\n        for (let p in object) {\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  static toOutputTable(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      for (let p in data[dataIndex].output) {\n        if (!table.hasOwnProperty(p)) {\n          table[p] = tableIndex++;\n        }\n      }\n    }\n    return table;\n  }\n\n  static toOutputTable2D(data) {\n    const table = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const output = data[dataIndex].output;\n      for (let i = 0; i < output.length; i++) {\n        const object = output[i];\n        for (let p in object) {\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  }\n\n  /**\n   * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\n   * @param {Object} hash\n   * @returns {Object}\n   */\n  static toHash(hash) {\n    let lookup = {};\n    let index = 0;\n    for (let i in hash) {\n      lookup[i] = index++;\n    }\n    return lookup;\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\n   * @param {*} lookup\n   * @param {*} object\n   * @param {*} arrayLength\n   * @returns {Float32Array}\n   */\n  static toArray(lookup, object, arrayLength) {\n    const result = new Float32Array(arrayLength);\n    for (let p in lookup) {\n      result[lookup[p]] = object.hasOwnProperty(p) ? object[p] : 0;\n    }\n    return result;\n  }\n\n  static toArrayShort(lookup, object) {\n    const result = [];\n    for (let p in lookup) {\n      if (!object.hasOwnProperty(p)) break;\n      result[lookup[p]] = object[p];\n    }\n    return Float32Array.from(result);\n  }\n\n  static toArrays(lookup, objects, arrayLength) {\n    const result = [];\n    for (let i = 0; i < objects.length; i++) {\n      result.push(this.toArray(lookup, objects[i], arrayLength));\n    }\n    return result;\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\n   * @param {Object} lookup\n   * @param {Array} array\n   * @returns {Object}\n   */\n  static toObject(lookup, array) {\n    const object = {};\n    for (let p in lookup) {\n      object[p] = array[lookup[p]];\n    }\n    return object;\n  }\n\n  static toObjectPartial(lookup, array, offset = 0, limit = 0) {\n    const object = {};\n    let i = 0;\n    for (let p in lookup) {\n      if (offset > 0) {\n        if (i++ < offset) continue;\n      }\n      if (limit > 0) {\n        if (i++ >= limit) continue;\n      }\n      object[p] = array[lookup[p] - offset];\n    }\n    return object;\n  }\n\n  /**\n   *\n   * @param {Array} array\n   * @returns {*}\n   */\n  static lookupFromArray(array) {\n    let lookup = {};\n    let z = 0;\n    let i = array.length;\n    while (i-- > 0) {\n      lookup[array[i]] = z++;\n    }\n    return lookup;\n  }\n\n  static dataShape(data) {\n    const shape = [];\n\n    if (data.input) {\n      shape.push('datum');\n      data = data.input;\n    } else if (Array.isArray(data)) {\n      if (data[0].input) {\n        shape.push('array', 'datum');\n        data = data[0].input;\n      } else {\n        shape.push('array');\n        data = data[0];\n      }\n    }\n\n    let p;\n    while (data) {\n      for (p in data) { break; }\n      if (!data.hasOwnProperty(p)) break;\n      if (Array.isArray(data) || data.buffer instanceof ArrayBuffer) {\n        shape.push('array');\n        data = data[p];\n      } else if (typeof data === 'object') {\n        shape.push('object');\n        data = data[p];\n      } else {\n        throw new Error('unhandled signature');\n      }\n    }\n    shape.push(typeof data);\n    return shape;\n  }\n\n  static addKeys(value, table) {\n    if (Array.isArray(value)) return;\n    table = table || {};\n    let i = Object.keys(table).length;\n    for (const p in value) {\n      if (!value.hasOwnProperty(p)) continue;\n      if (table.hasOwnProperty(p)) continue;\n      table[p] = i++;\n    }\n    return table;\n  }\n}\n\nmodule.exports = lookup;\n","// TODO: implement and test\nclass Adam {}\n\nfunction adam() {\n  // gradient = grad_fun(theta)\n  //\n  //           # Update moment estimates\n  // moment1 = beta1 * moment1 + (1 - beta1) * gradient\n  // moment2 = beta2 * moment2 + (1 - beta2) * np.square(gradient)\n  //\n  //           # Yield adapted gradient\n  // theta = ( theta - alpha * (1 - beta2**t)**0.5 / (1 - beta1**t) *\n  //   moment1 / (epsilon + np.sqrt(moment2)) )\n  // yield theta\n  // t += 1\n  // adam update\n  // gsumi[j] = gsumi[j] * this.beta1 + (1- this.beta1) * gij; // update biased first moment estimate\n  // xsumi[j] = xsumi[j] * this.beta2 + (1-this.beta2) * gij * gij; // update biased second moment estimate\n  // var biasCorr1 = gsumi[j] * (1 - Math.pow(this.beta1, this.k)); // correct bias first moment estimate\n  // var biasCorr2 = xsumi[j] * (1 - Math.pow(this.beta2, this.k)); // correct bias second moment estimate\n  // var dx =  - this.learning_rate * biasCorr1 / (Math.sqrt(biasCorr2) + this.eps);\n  // p[j] += dx;\n}\n\nmodule.exports = {\n  Adam, adam\n};\n","const { makeKernel, release } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\n\nconst { Base } = require('./base');\n\nfunction getMomentum(delta, decay, previousMomentum) {\n  return previousMomentum * decay + (1 - decay) * delta * delta;\n}\n\nfunction clipByValue(value, max, min) {\n  if (value > max) {\n    return max;\n  }\n  if (value < min) {\n    return min;\n  }\n  return value;\n}\n\n/**\n * @description Momentum Root Mean Square Propagation Function\n * @returns {number}\n */\nfunction update(\n  weights,\n  deltas,\n  previousMomenta\n) {\n  const delta = deltas[this.thread.y][this.thread.x];\n  const clippedDelta = clipByValue(\n    delta,\n    this.constants.clipValue,\n    -this.constants.clipValue\n  );\n  const weight = weights[this.thread.y][this.thread.x];\n  const previousMomentum = previousMomenta[this.thread.y][this.thread.x];\n  const momentum = getMomentum(\n    delta,\n    this.constants.decayRate,\n    previousMomentum\n  );\n  return (\n    weight +\n    (-this.constants.learningRate * clippedDelta) /\n      Math.sqrt(momentum + this.constants.smoothEps) -\n    this.constants.regularizationStrength * weight\n  );\n}\n\nfunction isClippedByValue(value, max, min) {\n  if (value > max) {\n    return 1;\n  }\n  if (value < min) {\n    return 1;\n  }\n  return 0;\n}\n\nclass MomentumRootMeanSquaredPropagation extends Base {\n  static get defaults() {\n    return {\n      decayRate: 0.999,\n      regularizationStrength: 0.0001,\n      learningRate: 0.01,\n      smoothEps: 1e-8,\n      clipValue: 5\n    };\n  }\n\n  constructor(layerTemplate, settings = {}) {\n    super(layerTemplate, settings);\n    this.momenta = zeros2D(layerTemplate.width, layerTemplate.height);\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const { momenta, result } = this.kernel(layer.weights, layer.deltas, this.momenta);\n    release(this.momenta);\n    this.momenta = momenta;\n    return result;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        clipValue: this.clipValue,\n        decayRate: this.decayRate,\n        learningRate: this.learningRate,\n        regularizationStrength: this.regularizationStrength,\n        smoothEps: this.smoothEps,\n      },\n      functions: [clipByValue],\n      map: {\n        momenta: getMomentum,\n      },\n      immutable: true,\n    });\n  }\n}\n\nfunction momentumRootMeanSquaredPropagation(layer, settings) {\n  return new MomentumRootMeanSquaredPropagation(layer, settings);\n}\n\n/**\n * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\n * @type {MomentumRootMeanSquaredPropagation}\n */\nconst MRmsProp = MomentumRootMeanSquaredPropagation;\nconst mRmsProp = momentumRootMeanSquaredPropagation;\n\nmodule.exports = {\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp,\n  getMomentum, clipByValue, isClippedByValue\n};\n","const { Adam, adam } = require('./adam');\nconst { ArthurDeviationBiases, arthurDeviationBiases } = require('./arthur-deviation-biases');\nconst { ArthurDeviationWeights, arthurDeviationWeights } = require('./arthur-deviation-weights');\nconst {\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp\n} = require('./momentum-root-mean-squared-propagation');\n\nmodule.exports = {\n  Adam, adam,\n  ArthurDeviationBiases, arthurDeviationBiases,\n  ArthurDeviationWeights, arthurDeviationWeights,\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp,\n};\n","const layer = require('../layer');\n\nmodule.exports = function layerFromJSON(jsonLayer) {\n  if (!layer.hasOwnProperty(jsonLayer.type)) return null;\n  const Layer = layer[jsonLayer.type];\n\n  // eslint-disable-next-line\n  const realLayer = Reflect.construct(Layer, arguments)\n\n  Object.keys(jsonLayer).forEach(p => {\n    if (p !== 'type') {\n      realLayer[p] = jsonLayer[p];\n    }\n  });\n\n  return realLayer;\n}\n","module.exports = function traverseLayersFrom(layer, cb) {\n  if (layer.hasOwnProperty('inputLayer')) {\n    traverseLayersFrom(layer.inputLayer, cb);\n  } else {\n    if (layer.hasOwnProperty('inputLayer1')) {\n      traverseLayersFrom(layer.inputLayer1, cb);\n    }\n    if (layer.hasOwnProperty('inputLayer2')) {\n      traverseLayersFrom(layer.inputLayer2, cb);\n    }\n  }\n  cb(layer);\n};\n","const traverseLayersFrom = require('./traverse-layers-from');\n\nmodule.exports = function flattenLayers(layers) {\n  const result = layers.slice(0);\n  for (let i = 0; i < result.length; i++) {\n    let offset = 0;\n    traverseLayersFrom(result[i], layer => {\n      if (result.indexOf(layer) === -1) {\n        result.splice(i + offset, 0, layer);\n        offset++;\n      }\n    });\n  }\n  return result;\n};\n","const { makeKernel } = require('../utilities/kernel');\n\nfunction mse2d(errors) {\n  // mean squared error 2d\n  let sum = 0;\n  for (let y = 0; y < this.constants.height; y++) {\n    for (let x = 0; x < this.constants.width; x++) {\n      sum += errors[y][x] ** 2;\n    }\n  }\n  return sum / this.constants.length;\n}\n\nclass MeanSquaredError {\n  constructor({ width, height }) {\n    this.calculate = makeKernel(mse2d, {\n      output: [1],\n      constants: {\n        width,\n        height,\n        length: width * height,\n      },\n      immutable: true,\n    });\n    this.addAbsolute = makeKernel(function(value1, value2) {\n      return value1[0] + Math.abs(value2[0][0]);\n    }, {\n      output: [1],\n      immutable: true,\n    });\n    this.add = makeKernel(function(value1, value2) {\n      return value1[0] + value2[0];\n    }, {\n      output: [1],\n      immutable: true,\n    });\n    this.divide = makeKernel(function(length, mseSum) {\n      const value = mseSum[0];\n      if (value > 0) {\n        return value / length;\n      }\n      return 0;\n    }, {\n      output: [1],\n      immutable: true,\n    });\n  }\n}\n\nmodule.exports = { MeanSquaredError };\n","const lookup = require('./lookup');\nconst layerFromJSON = require('./utilities/layer-from-json');\nconst praxis = require('./praxis');\nconst flattenLayers = require('./utilities/flatten-layers');\nconst { makeKernel, release } = require('./utilities/kernel');\nconst { MeanSquaredError } = require('./estimator/mean-squared-error');\nconst { Model } = require('./layer/types');\n\nclass FeedForward {\n  static get trainDefaults() {\n    return {\n      iterations: 20000,\n      errorThresh: 0.005,\n      log: false,\n      logPeriod: 10,\n      learningRate: 0.3,\n      callback: null,\n      callbackPeriod: 10,\n      errorCheckInterval: 100,\n      reinforce: false,\n    };\n  }\n\n  static get defaults() {\n    return {\n      learningRate: 0.3,\n      binaryThresh: 0.5,\n      hiddenLayers: null,\n      inputLayer: null,\n      outputLayer: null,\n      praxisOpts: null,\n      praxis: (layer, settings) =>\n        praxis.momentumRootMeanSquaredPropagation(\n          { ...layer },\n          layer.praxisOpts || settings\n        ),\n    };\n  }\n\n  /**\n   *\n   * @param options\n   * @private\n   */\n  static _validateTrainingOptions(options) {\n    const validations = {\n      iterations: (val) => typeof val === 'number' && val > 0,\n      errorThresh: (val) => typeof val === 'number' && val > 0 && val < 1,\n      log: (val) => typeof val === 'function' || typeof val === 'boolean',\n      logPeriod: (val) => typeof val === 'number' && val > 0,\n      learningRate: (val) => typeof val === 'number' && val > 0 && val < 1,\n      callback: (val) => typeof val === 'function' || val === null,\n      callbackPeriod: (val) => typeof val === 'number' && val > 0,\n      timeout: (val) => typeof val === 'number' && val > 0,\n    };\n    Object.keys(FeedForward.trainDefaults).forEach((key) => {\n      if (validations.hasOwnProperty(key) && !validations[key](options[key])) {\n        throw new Error(\n          `[${key}, ${options[key]}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    });\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  _setLogMethod(log) {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      // eslint-disable-next-line\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param opts\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number)\n   */\n  _updateTrainingOptions(opts) {\n    Object.keys(this.constructor.trainDefaults).forEach((opt) => {\n      this.trainOpts[opt] = opts.hasOwnProperty(opt)\n        ? opts[opt]\n        : this.trainOpts[opt];\n    });\n    this.constructor._validateTrainingOptions(this.trainOpts);\n    this._setLogMethod(opts.log || this.trainOpts.log);\n    if (\n      this.trainOpts.callback &&\n      this.trainOpts.callbackPeriod !== this.trainOpts.errorCheckInterval\n    ) {\n      console.warn(\n        `options.callbackPeriod with value of ${this.trainOpts.callbackPeriod} does not match options.errorCheckInterval with value of ${this.trainOpts.errorCheckInterval}, if logging error, it will repeat.  These values may need to match`\n      );\n    }\n  }\n\n  static get structure() {\n    return {\n      layers: null,\n      _inputLayer: null,\n      _outputLayer: null,\n      _model: null,\n    };\n  }\n\n  /**\n   *\n   * @param {object} options\n   * @constructor\n   */\n  constructor(options = {}) {\n    this.layers = null;\n    this.inputLayer = null;\n    this.hiddenLayers = null;\n    this.outputLayer = null;\n    this.praxisOpts = null;\n    this.praxis = null;\n    Object.assign(this, this.constructor.defaults, options);\n    this.trainOpts = {};\n    this._updateTrainingOptions({\n      ...this.constructor.trainDefaults,\n      ...options,\n    });\n    Object.assign(this, this.constructor.structure);\n    this._inputLayer = null;\n    this._hiddenLayers = null;\n    this._outputLayer = null;\n  }\n\n  _connectLayers() {\n    const layers = [];\n    this._inputLayer = this.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(this._inputLayer);\n    this._outputLayer = this.outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      hiddenLayers.length\n    );\n    layers.push(this._inputLayer);\n    layers.push(...hiddenLayers);\n    layers.push(this._outputLayer);\n    this.layers = flattenLayers(layers);\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    this._hiddenLayers = [];\n    const hiddenLayers = [];\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, i);\n      hiddenLayers.push(hiddenLayer);\n      this._hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n    }\n    return hiddenLayers;\n  }\n\n  initialize() {\n    this._connectLayers();\n    this.initializeLayers(this.layers);\n    this._model = this.layers.filter((l) => l instanceof Model);\n  }\n\n  initializeLayers(layers) {\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      // TODO: optimize for when training or just running\n      layer.setupKernels(true);\n      if (\n        layer instanceof Model &&\n        layer.hasOwnProperty('praxis') &&\n        layer.praxis === null\n      ) {\n        layer.praxis = this.praxis(layer, layer.praxisOpts || this.praxisOpts);\n        layer.praxis.setupKernels();\n      }\n    }\n\n    const lastLayer = layers[layers.length - 1];\n    this.meanSquaredError = new MeanSquaredError({\n      width: lastLayer.width,\n      height: lastLayer.height,\n    });\n    // this._getMSE = makeKernel(mse2d, {\n    //   output: [1],\n    //   constants: {\n    //     width: this._outputLayer.width,\n    //     height: this._outputLayer.height,\n    //     length: this._outputLayer.width * this._outputLayer.height,\n    //   }\n    // });\n    // this._addMSE = makeKernel(function(value1, value2) {\n    //   return value1[0] + value2[0];\n    // }, {\n    //   output: [1]\n    // });\n    // this._divideMSESum = makeKernel(function(length, mseSum) {\n    //   const value = mseSum[0];\n    //   if (value > 0) {\n    //     return value / length;\n    //   }\n    //   return 0;\n    // }, {\n    //   output: [1]\n    // });\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input);\n    }\n\n    let output = this.runInput(input);\n\n    if (output.toArray) {\n      output = output.toArray();\n    }\n\n    if (this.outputLookup) {\n      output = lookup.toHash(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  runInput(input) {\n    this.layers[0].predict(input);\n    for (let i = 1; i < this.layers.length; i++) {\n      this.layers[i].predict();\n    }\n    return this.layers[this.layers.length - 1].weights;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    let status;\n    let endTime;\n    ({ data, status, endTime } = this._prepTraining(data, options));\n\n    while (this._trainingTick(data, status, endTime));\n    return status;\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param {Number} endTime\n   */\n  _trainingTick(data, status, endTime) {\n    if (\n      status.iterations >= this.trainOpts.iterations ||\n      status.error <= this.trainOpts.errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    if (\n      this.trainOpts.log &&\n      status.iterations % this.trainOpts.logPeriod === 0\n    ) {\n      status.error = this._calculateTrainingError(data);\n      this.trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      );\n    } else if (status.iterations % this.trainOpts.errorCheckInterval === 0) {\n      status.error = this._calculateTrainingError(data);\n    } else {\n      this._trainPatterns(data);\n    }\n\n    if (\n      this.trainOpts.callback &&\n      status.iterations % this.trainOpts.callbackPeriod === 0\n    ) {\n      this.trainOpts.callback(Object.assign(status));\n    }\n\n    status.iterations++;\n    return true;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  _prepTraining(data, options) {\n    this._updateTrainingOptions(options);\n\n    const formattedData = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      data: this.transferData(formattedData),\n      status,\n      endTime,\n    };\n  }\n\n  verifyIsInitialized() {\n    if (!this._model) {\n      this.initialize();\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  _calculateTrainingError(data) {\n    let sum = new Float32Array([0]);\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this._trainPattern(data[i].input, data[i].output, true);\n      sum = this.meanSquaredError.add(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this.meanSquaredError.divide(data.length, sum);\n    release(sum);\n    if (result.toArray) {\n      const resultArray = result.toArray();\n      release(result);\n      return resultArray[0];\n    }\n    return result[0];\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false);\n    }\n  }\n\n  /**\n   *\n   * @param input\n   * @param target\n   * @param {Boolean} logErrorRate\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return this.meanSquaredError.calculate(this._outputLayer.errors);\n    }\n    return null;\n  }\n\n  _calculateDeltas(target) {\n    for (let i = this.layers.length - 1; i > -1; i--) {\n      this.layers[i].compare(target);\n    }\n  }\n\n  /**\n   *\n   */\n  adjustWeights() {\n    const { _model } = this;\n    for (let i = 0; i < _model.length; i++) {\n      _model[i].learn(null, null, this.trainOpts.learningRate);\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = [];\n      tmp.push(data);\n      data = tmp;\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    const inputDatumCheck = data[0].input;\n    if (\n      !Array.isArray(inputDatumCheck) &&\n      !(inputDatumCheck instanceof Float32Array)\n    ) {\n      if (!this.inputLookup) {\n        this.inputLookup = lookup.buildLookup(data.map((value) => value.input));\n      }\n      data = data.map((datumParam) => {\n        const array = lookup.toArray(this.inputLookup, datumParam.input);\n        return { ...datumParam, input: array };\n      }, this);\n    }\n\n    const outputDatumCheck = data[0].output;\n    if (\n      !Array.isArray(outputDatumCheck) &&\n      !(outputDatumCheck instanceof Float32Array)\n    ) {\n      if (!this.outputLookup) {\n        this.outputLookup = lookup.buildLookup(\n          data.map((value) => value.output)\n        );\n      }\n      data = data.map((datumParam) => {\n        const array = lookup.toArray(this.outputLookup, datumParam.output);\n        return { ...datumParam, output: array };\n      }, this);\n    }\n    return data;\n  }\n\n  transferData(formattedData) {\n    const transferredData = new Array(formattedData.length);\n    const transferInput = makeKernel(\n      function (value) {\n        return value[this.thread.x];\n      },\n      {\n        output: [formattedData[0].input.length],\n        immutable: true,\n      }\n    );\n    const transferOutput = makeKernel(\n      function (value) {\n        return value[this.thread.x];\n      },\n      {\n        output: [formattedData[0].output.length],\n        immutable: true,\n      }\n    );\n\n    for (let i = 0; i < formattedData.length; i++) {\n      const formattedDatum = formattedData[i];\n      transferredData[i] = {\n        input: transferInput(formattedDatum.input),\n        output: transferOutput(formattedDatum.output),\n      };\n    }\n    return transferredData;\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test() {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`);\n  }\n\n  /**\n   *\n   */\n  toJSON() {\n    if (!this.layers) {\n      this.initialize();\n    }\n    const jsonLayers = [];\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      const jsonLayer = layer.toJSON();\n      if (layer.hasOwnProperty('inputLayer')) {\n        jsonLayer.inputLayerIndex = this.layers.indexOf(layer.inputLayer);\n      } else if (\n        layer.hasOwnProperty('inputLayer1') &&\n        layer.hasOwnProperty('inputLayer2')\n      ) {\n        jsonLayer.inputLayer1Index = this.layers.indexOf(layer.inputLayer1);\n        jsonLayer.inputLayer2Index = this.layers.indexOf(layer.inputLayer2);\n      }\n      jsonLayers.push(jsonLayer);\n    }\n\n    return {\n      type: this.constructor.name,\n      sizes: [this._inputLayer.height]\n        .concat(this._hiddenLayers.map((l) => l.height))\n        .concat([this._outputLayer.height]),\n      layers: jsonLayers,\n    };\n  }\n\n  /**\n   *\n   * @param json\n   * @param [getLayer]\n   * @returns {FeedForward}\n   */\n  static fromJSON(json, getLayer) {\n    const jsonLayers = json.layers;\n    const layers = [];\n    const inputLayer = layerFromJSON(jsonLayers[0]) || getLayer(jsonLayers[0]);\n    layers.push(inputLayer);\n\n    for (let i = 1; i < jsonLayers.length; i++) {\n      const jsonLayer = jsonLayers[i];\n      if (jsonLayer.hasOwnProperty('inputLayerIndex')) {\n        const inputLayer1 = layers[jsonLayer.inputLayerIndex];\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer1) ||\n            getLayer(jsonLayer, inputLayer1)\n        );\n      } else {\n        if (!jsonLayer.hasOwnProperty('inputLayer1Index'))\n          throw new Error(\n            'Cannot create network from provided JOSN. inputLayer1Index not defined.'\n          );\n        if (!jsonLayer.hasOwnProperty('inputLayer2Index'))\n          throw new Error(\n            'Cannot create network from provided JOSN. inputLayer2Index not defined.'\n          );\n        const inputLayer1 = layers[jsonLayer.inputLayer1Index];\n        const inputLayer2 = layers[jsonLayer.inputLayer2Index];\n\n        if (inputLayer1 === undefined)\n          throw new Error(\n            `Cannot create network from provided JOSN. layer of index ${jsonLayer.inputLayer1Index} not found.`\n          );\n        if (inputLayer2 === undefined)\n          throw new Error(\n            `Cannot create network from provided JOSN. layer of index ${jsonLayer.inputLayer2Index} not found.`\n          );\n\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer) ||\n            getLayer(jsonLayer, inputLayer1, inputLayer2)\n        );\n      }\n    }\n\n    const net = new FeedForward(json);\n    net.layers = layers;\n    return net;\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  /**\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\n   * @param opts training options\n   * @returns {TrainStream|*}\n   */\n  createTrainStream() {\n    throw new Error(\n      `${this.constructor.name}-createTrainStream is not yet implemented`\n    );\n  }\n}\n\nmodule.exports = {\n  FeedForward,\n};\n","//private variables\nlet thawing = false;\nlet thaws = [];\n\n/**\n * thaw an array of items\n * @param {Array} items\n * @param {Object} [options]\n * @constructor\n */\nexport default class Thaw {\n  /**\n   *\n   * @type {{each: null, done: null}}\n   */\n  static get defaultSettings() {\n    return {\n      each: null,\n      done: null\n    };\n  }\n\n  /**\n   * returns if Thaw.js is thawing\n   * @returns {boolean}\n   */\n  static get isThawing() {\n    return thawing;\n  }\n\n  /**\n   * Stops all Thaw instances\n   */\n  static stopAll() {\n    for(let i = 0;i< thaws.length; i++) {\n      thaws[i].stop();\n    }\n  }\n\n  constructor(items, options = {}) {\n    const { each, done } = {...this.constructor.defaultSettings, ...options};\n    this.items = items;\n    this.i = 0;\n    this.options = options;\n    const tick = this.tick = () => {\n      if (this.i < 0) return;\n\n      this.timeout = setTimeout(tick, 0);\n\n      if (thawing) return;\n      const item = items[this.i];\n      if (this.i >= items.length) {\n        if (done !== null) {\n          thawing = true;\n          done(item, this.i);\n          thawing = false;\n        }\n\n        this.i = -1;\n        clearTimeout(this.timeout);\n        return;\n      }\n      if (each !== null) {\n        thawing = true;\n        each(item, this.i);\n        thawing = false;\n      } else if (item !== undefined) {\n        item();\n      }\n      this.i++;\n    };\n\n    thaws.push(this);\n    if (!options.delay) {\n      tick();\n    }\n  }\n\n  /**\n   * readies thaw to continue\n   * @returns {boolean} if had to get ready\n   */\n  makeReady() {\n    if (this.i < 0) {\n      this.i = this.items.length;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n   * @param item\n   * @returns {Thaw}\n   */\n  add(item) {\n    const doTick = this.makeReady();\n\n    this.items.push(item);\n\n    if (doTick) {\n      this.tick();\n    }\n    return this;\n  }\n\n  /**\n   * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n   * @param item\n   * @returns {Thaw}\n   */\n  insert(item) {\n    const doTick = this.makeReady();\n\n    this.items.splice(this.i, 0, item);\n\n    if (doTick) {\n      this.tick();\n    }\n\n    return this;\n  }\n\n  /**\n   * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n   * @param {Array} items\n   * @returns {Thaw}\n   */\n  addArray(items) {\n    const doTick = this.makeReady();\n\n    this.items = this.items.concat(items);\n\n    if (doTick) {\n      this.tick();\n    }\n\n    return this;\n  }\n\n  /**\n   * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n   * @param {Array} items\n   * @returns {Thaw}\n   */\n  insertArray(items) {\n    const doTick = this.makeReady();\n    const left = this.items;\n    const middle = items;\n    const right = this.items.splice(this.i, (this.items.length - this.i) + 1);\n\n    this.items = left.concat(middle, right);\n\n    if (doTick) {\n      this.tick();\n    }\n    return this;\n  }\n\n  /**\n   * Stops this instance of Thaw\n   * @returns {Thaw}\n   */\n  stop() {\n    this.i = -1;\n    clearTimeout(this.timeout);\n    if (this.options.done) {\n      this.options.done();\n    }\n    return this;\n  }\n}\n\n/**\n * simple thaw\n * @param {Array} items\n * @param {Object} [options]\n * @returns Thaw\n */\nexport function thaw(items, options = {}) {\n  return new Thaw(items, options);\n}","import Thaw from './';\n\n/**\n *\n * @param {Object} [options]\n * @param {Number} [count]\n * @constructor\n */\nexport default class Block {\n  constructor(options, count) {\n    this.index = 0;\n    this.thaws = [];\n    this.count = count || 200;\n    this.options = options;\n  }\n\n  /**\n   * add an item to the end of items\n   * @param item\n   * @returns {Block}\n   */\n  add(item) {\n    const next = this._next();\n    next.add(item);\n\n    return this;\n  }\n\n  /**\n   * add an Array to the end of items\n   * @param items\n   * @returns {Block}\n   */\n  addArray(items) {\n    const next = this._next();\n    next.addArray(items);\n\n    return this;\n  }\n\n  /**\n   * insert an item into items @ current position\n   * @param item\n   * @returns {Block}\n   */\n  insert(item) {\n    const next = this._next();\n    next.insert(item);\n\n    return this;\n  }\n\n  /**\n   * insert and array into items @ current position\n   * @param items\n   * @returns {Block}\n   */\n  insertArray(items) {\n    const next = this._next();\n    next.insertArray(items);\n\n    return this;\n  }\n\n  /**\n   * Stops all thaws in this block\n   * @returns {Block}\n   */\n  stop() {\n    for (let i = 0;i < this.thaws.length;i++) {\n      this.thaws[i].stop();\n    }\n    return this;\n  }\n\n  /**\n   * Get next available in block\n   * @returns {*}\n   * @private\n   */\n  _next() {\n    let thaw = null;\n    const thaws = this.thaws;\n\n    if (thaws.length < this.count) {\n      thaws.push(thaw = new Thaw([], this.options));\n    } else {\n      thaw = thaws[this.index];\n    }\n    this.index++;\n    if (this.index >= this.count) {\n      this.index = 0;\n    }\n\n    return thaw;\n  }\n};","const activation = require('./activation');\nconst CrossValidate = require('./cross-validate');\nconst layer = require('./layer');\nconst layerTypes = require('./layer/types');\nconst likely = require('./likely');\nconst lookup = require('./lookup');\nconst praxis = require('./praxis');\nconst { FeedForward } = require('./feed-forward');\nconst NeuralNetwork = require('./neural-network');\nconst NeuralNetworkGPU = require('./neural-network-gpu');\nconst TrainStream = require('./train-stream');\nconst { Recurrent } = require('./recurrent');\nconst RNNTimeStep = require('./recurrent/rnn-time-step');\nconst LSTMTimeStep = require('./recurrent/lstm-time-step');\nconst GRUTimeStep = require('./recurrent/gru-time-step');\nconst RNN = require('./recurrent/rnn');\nconst LSTM = require('./recurrent/lstm');\nconst GRU = require('./recurrent/gru');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst ones = require('./utilities/ones');\nconst random = require('./utilities/random');\nconst randomWeight = require('./utilities/random-weight');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst DataFormatter = require('./utilities/data-formatter');\nconst zeros = require('./utilities/zeros');\nconst toSVG = require('./utilities/to-svg');\n\nconst brain = {\n  activation,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n    toSVG,\n  },\n};\n\nif (typeof window !== 'undefined') {\n  window.brain = brain //eslint-disable-line\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = brain;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('events').EventEmitter;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","const { Writable } = require('stream');\n\n/**\n *\n * @param opts\n * @returns {TrainStream}\n * @constructor\n */\nclass TrainStream extends Writable {\n  constructor(options) {\n    super({\n      objectMode: true,\n    });\n\n    options = options || {};\n\n    // require the neuralNetwork\n    if (!options.neuralNetwork) {\n      throw new Error(\n        'No neural network specified. PLease see lis of available networks types: https://github.com/BrainJS/brain.js#neural-network-types'\n      );\n    }\n\n    const { neuralNetwork } = options;\n    this.neuralNetwork = neuralNetwork;\n    this.dataFormatDetermined = false;\n    this.i = 0; // keep track of internal iterations\n    this.size = 0;\n    this.count = 0;\n    this.sum = 0;\n    this.floodCallback = options.floodCallback;\n    this.doneTrainingCallback = options.doneTrainingCallback;\n\n    // inherit trainOpts settings from neuralNetwork\n    neuralNetwork.updateTrainingOptions(options);\n    const { trainOpts } = neuralNetwork;\n    this.iterations = trainOpts.iterations;\n    this.errorThresh = trainOpts.errorThresh;\n    this.log = trainOpts.log;\n    this.logPeriod = trainOpts.logPeriod;\n    this.callbackPeriod = trainOpts.callbackPeriod;\n    this.callback = trainOpts.callback;\n\n    this.on('finish', this.finishStreamIteration.bind(this));\n  }\n\n  endInputs() {\n    this.write(false);\n  }\n\n  /**\n   * _write expects data to be in the form of a datum. ie. {input: {a: 1 b: 0}, output: {z: 0}}\n   * @param chunk\n   * @param enc\n   * @param next\n   * @returns {*}\n   * @private\n   */\n  _write(chunk, enc, next) {\n    if (!chunk) {\n      // check for the end of one iteration of the stream\n      this.emit('finish');\n      return next();\n    }\n\n    if (!this.dataFormatDetermined) {\n      this.size++;\n      this.neuralNetwork.addFormat(chunk);\n      this.firstDatum = this.firstDatum || chunk;\n      return next();\n    }\n\n    this.count++;\n\n    const data = this.neuralNetwork.formatData(chunk);\n    this.sum += this.neuralNetwork.trainPattern(data[0], true);\n\n    // tell the Readable Stream that we are ready for more data\n    next();\n  }\n\n  /**\n   *\n   * @returns {*}\n   */\n  finishStreamIteration() {\n    if (this.dataFormatDetermined && this.size !== this.count) {\n      this.log(\"This iteration's data length was different from the first.\");\n    }\n\n    if (!this.dataFormatDetermined) {\n      const data = this.neuralNetwork.formatData(this.firstDatum);\n      this.neuralNetwork.verifyIsInitialized(data);\n      this.dataFormatDetermined = true;\n\n      if (typeof this.floodCallback === 'function') {\n        this.floodCallback();\n      }\n      return;\n    }\n\n    const error = this.sum / this.size;\n\n    if (this.log && this.i % this.logPeriod === 0) {\n      this.log(`iterations: ${this.i}, training error: ${error}`);\n    }\n    if (this.callback && this.i % this.callbackPeriod === 0) {\n      this.callback({\n        error,\n        iterations: this.i,\n      });\n    }\n\n    this.sum = 0;\n    this.count = 0;\n    // update the iterations\n    this.i++;\n\n    // do a check here to see if we need the stream again\n    if (this.i < this.iterations && error > this.errorThresh) {\n      if (typeof this.floodCallback === 'function') {\n        return this.floodCallback();\n      }\n    } else {\n      // done training\n      if (typeof this.doneTrainingCallback === 'function') {\n        return this.doneTrainingCallback({\n          error,\n          iterations: this.i,\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = TrainStream;\n","/**\n *\n * @param values\n * @returns {*}\n */\nmodule.exports = function toArray(values) {\n  if (Array.isArray(values)) {\n    return values;\n  }\n  return new Float32Array(Object.values(values));\n};\n","const toArray = require('./to-array');\n/**\n *\n * @param values\n * @returns {number}\n */\nmodule.exports = function max(values) {\n  return Math.max(...toArray(values));\n}\n","module.exports = function mse(errors) {\n  // mean squared error\n  let sum = 0;\n  for (let i = 0; i < errors.length; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / errors.length;\n};\n","/**\n *\n * @param start\n * @param end\n * @returns {Array}\n */\nmodule.exports = function range(start, end) {\n  const result = [];\n  for (; start < end; start++) {\n    result.push(start);\n  }\n  return result;\n}\n","function LookupTable(data, prop) {\n  this.length = 0;\n  if (prop) {\n    this.prop = prop;\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      const object = datum[prop];\n      for (let p in object) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  } else if (Array.isArray(data[0])) {\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const array = data[i];\n      for (let j = 0; j < array.length; j++) {\n        const object = array[j];\n        for (let p in object) {\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    }\n  } else {\n    const table = this.table = {};\n    for (let i = 0; i < data.length; i++) {\n      const object = data[i];\n      for (let p in object) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  }\n}\n\nmodule.exports = LookupTable;\n","function arraysToFloat32Arrays(arrays) {\n  const result = [];\n  for (let i = 0; i < arrays.length; i++) {\n    result.push(Float32Array.from(arrays[i]));\n  }\n  return result;\n}\nfunction arrayToFloat32Arrays(array) {\n  const result = [];\n  for (let i = 0; i < array.length; i++) {\n    result.push(Float32Array.from([array[i]]));\n  }\n  return result;\n}\nfunction arrayToFloat32Array(array) {\n  return Float32Array.from(array)\n}\nfunction objectsToFloat32Arrays(objects, table, length) {\n  const results = [];\n  for (let i = 0; i < objects.length; i++) {\n    const object = objects[i];\n    const result = new Float32Array(length);\n    for (let p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[table[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\nfunction objectToFloat32Arrays(object) {\n  const result = [];\n  for (let p in object) {\n    result.push(Float32Array.from([object[p]]));\n  }\n  return result;\n}\nfunction objectToFloat32Array(object, table, length) {\n  const result = new Float32Array(length);\n  for (let p in object) {\n    if (object.hasOwnProperty(p)) {\n      result[table[p]] = object[p];\n    }\n  }\n  return result;\n}\n\nmodule.exports = {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  arrayToFloat32Array,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array,\n};\n","const Thaw = require('thaw.js').default;\nconst lookup = require('./lookup');\nconst TrainStream = require('./train-stream');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst zeros = require('./utilities/zeros');\nconst LookupTable = require('./utilities/lookup-table');\nconst { arrayToFloat32Array } = require('./utilities/cast');\n\n/**\n * @param {object} options\n * @constructor\n */\nclass NeuralNetwork {\n  static get trainDefaults() {\n    return {\n      iterations: 20000, // the maximum times to iterate the training data\n      errorThresh: 0.005, // the acceptable error percentage from training data\n      log: false, // true to use console.log, when a function is supplied it is used\n      logPeriod: 10, // iterations between logging out\n      learningRate: 0.3, // multiply's against the input and the delta then adds to momentum\n      momentum: 0.1, // multiply's against the specified \"change\" then adds to learning rate for change\n      callback: null, // a periodic call back that can be triggered while training\n      callbackPeriod: 10, // the number of iterations through the training data between callback calls\n      timeout: Infinity, // the max number of milliseconds to train for\n      praxis: null,\n      beta1: 0.9,\n      beta2: 0.999,\n      epsilon: 1e-8,\n    };\n  }\n\n  static get defaults() {\n    return {\n      leakyReluAlpha: 0.01,\n      binaryThresh: 0.5,\n      hiddenLayers: null, // array of ints for the sizes of the hidden layers in the network\n      activation: 'sigmoid', // Supported activation types ['sigmoid', 'relu', 'leaky-relu', 'tanh']\n    };\n  }\n\n  constructor(options = {}) {\n    Object.assign(this, this.constructor.defaults, options);\n    this.trainOpts = {};\n    this.updateTrainingOptions({\n      ...this.constructor.trainDefaults,\n      ...options,\n    });\n\n    this.sizes = null;\n    this.outputLayer = null;\n    this.biases = null; // weights for bias nodes\n    this.weights = null;\n    this.outputs = null;\n\n    // state for training\n    this.deltas = null;\n    this.changes = null; // for momentum\n    this.errors = null;\n    this.errorCheckInterval = 1;\n    if (!this.constructor.prototype.hasOwnProperty('runInput')) {\n      this.runInput = null;\n    }\n    if (!this.constructor.prototype.hasOwnProperty('calculateDeltas')) {\n      this.calculateDeltas = null;\n    }\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n\n    if (options.inputSize && options.hiddenLayers && options.outputSize) {\n      this.sizes = [options.inputSize]\n        .concat(options.hiddenLayers)\n        .concat([options.outputSize]);\n    }\n  }\n\n  /**\n   *\n   * Expects this.sizes to have been set\n   */\n  initialize() {\n    if (!this.sizes) throw new Error('Sizes must be set before initializing');\n\n    this.outputLayer = this.sizes.length - 1;\n    this.biases = []; // weights for bias nodes\n    this.weights = [];\n    this.outputs = [];\n\n    // state for training\n    this.deltas = [];\n    this.changes = []; // for momentum\n    this.errors = [];\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      const size = this.sizes[layer];\n      this.deltas[layer] = zeros(size);\n      this.errors[layer] = zeros(size);\n      this.outputs[layer] = zeros(size);\n\n      if (layer > 0) {\n        this.biases[layer] = randos(size);\n        this.weights[layer] = new Array(size);\n        this.changes[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          const prevSize = this.sizes[layer - 1];\n          this.weights[layer][node] = randos(prevSize);\n          this.changes[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.setActivation();\n    if (this.trainOpts.praxis === 'adam') {\n      this._setupAdam();\n    }\n  }\n\n  /**\n   *\n   * @param activation supported inputs: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  setActivation(activation) {\n    this.activation = activation || this.activation;\n    switch (this.activation) {\n      case 'sigmoid':\n        this.runInput = this.runInput || this._runInputSigmoid;\n        this.calculateDeltas =\n          this.calculateDeltas || this._calculateDeltasSigmoid;\n        break;\n      case 'relu':\n        this.runInput = this.runInput || this._runInputRelu;\n        this.calculateDeltas =\n          this.calculateDeltas || this._calculateDeltasRelu;\n        break;\n      case 'leaky-relu':\n        this.runInput = this.runInput || this._runInputLeakyRelu;\n        this.calculateDeltas =\n          this.calculateDeltas || this._calculateDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        this.runInput = this.runInput || this._runInputTanh;\n        this.calculateDeltas =\n          this.calculateDeltas || this._calculateDeltasTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${this.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n  }\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable() {\n    if (!this.runInput) {\n      console.error(\n        'Activation function has not been initialized, did you run train()?'\n      );\n      return false;\n    }\n\n    const checkFns = [\n      'sizes',\n      'outputLayer',\n      'biases',\n      'weights',\n      'outputs',\n      'deltas',\n      'changes',\n      'errors',\n    ].filter((c) => this[c] === null);\n\n    if (checkFns.length > 0) {\n      console.error(\n        `Some settings have not been initialized correctly, did you run train()? Found issues with: ${checkFns.join(\n          ', '\n        )}`\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n\n    let output = this.runInput(input).slice(0);\n\n    if (this.outputLookup) {\n      output = lookup.toObject(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  /**\n   * trains via sigmoid\n   * @param input\n   * @returns {*}\n   */\n  _runInputSigmoid(input) {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeLayer = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeLayer; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // sigmoid\n        activeOutputs[node] = 1 / (1 + Math.exp(-sum));\n      }\n      output = input = this.outputs[layer];\n    }\n    return output;\n  }\n\n  _runInputRelu(input) {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        const weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // relu\n        currentOutputs[node] = sum < 0 ? 0 : sum;\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  _runInputLeakyRelu(input) {\n    this.outputs[0] = input; // set output state of input layer\n    const alpha = this.leakyReluAlpha;\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        const weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // leaky relu\n        currentOutputs[node] = sum < 0 ? 0 : alpha * sum;\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  _runInputTanh(input) {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const currentSize = this.sizes[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentOutputs = this.outputs[layer];\n      for (let node = 0; node < currentSize; node++) {\n        const weights = currentWeights[node];\n\n        let sum = currentBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // tanh\n        currentOutputs[node] = Math.tanh(sum);\n      }\n      output = input = currentOutputs;\n    }\n    return output;\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (this.sizes) return;\n\n    this.sizes = [];\n    this.sizes.push(data[0].input.length);\n    if (!this.hiddenLayers) {\n      this.sizes.push(Math.max(3, Math.floor(data[0].input.length / 2)));\n    } else {\n      this.hiddenLayers.forEach((size) => {\n        this.sizes.push(size);\n      });\n    }\n    this.sizes.push(data[0].output.length);\n\n    this.initialize();\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options) {\n    const { trainDefaults } = this.constructor;\n    for (const p in trainDefaults) {\n      if (!trainDefaults.hasOwnProperty(p)) continue;\n      this.trainOpts[p] = options.hasOwnProperty(p)\n        ? options[p]\n        : trainDefaults[p];\n    }\n    this.validateTrainingOptions(this.trainOpts);\n    this.setLogMethod(options.log || this.trainOpts.log);\n    this.activation = options.activation || this.activation;\n  }\n\n  /**\n   *\n   * @param options\n   */\n  validateTrainingOptions(options) {\n    const validations = {\n      iterations: (val) => {\n        return typeof val === 'number' && val > 0;\n      },\n      errorThresh: (val) => {\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      log: (val) => {\n        return typeof val === 'function' || typeof val === 'boolean';\n      },\n      logPeriod: (val) => {\n        return typeof val === 'number' && val > 0;\n      },\n      learningRate: (val) => {\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      momentum: (val) => {\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      callback: (val) => {\n        return typeof val === 'function' || val === null;\n      },\n      callbackPeriod: (val) => {\n        return typeof val === 'number' && val > 0;\n      },\n      timeout: (val) => {\n        return typeof val === 'number' && val > 0;\n      },\n    };\n    for (const p in validations) {\n      if (!validations.hasOwnProperty(p)) continue;\n      if (!options.hasOwnProperty(p)) continue;\n      if (!validations[p](options[p])) {\n        throw new Error(\n          `[${p}, ${options[p]}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    }\n  }\n\n  /**\n   *\n   *  Gets JSON of trainOpts object\n   *    NOTE: Activation is stored directly on JSON object and not in the training options\n   */\n  getTrainOptsJSON() {\n    return Object.keys(this.constructor.trainDefaults).reduce((opts, opt) => {\n      if (opt === 'timeout' && this.trainOpts[opt] === Infinity) return opts;\n      if (opt === 'callback') return opts;\n      if (this.trainOpts[opt]) opts[opt] = this.trainOpts[opt];\n      if (opt === 'log') opts.log = typeof opts.log === 'function';\n      return opts;\n    }, {});\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  setLogMethod(log) {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = this.logTrainingStatus;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param status\n   * log training status\n   */\n  logTrainingStatus(status) {\n    console.log(\n      `iterations: ${status.iterations}, training error: ${status.error}`\n    );\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  calculateTrainingError(data) {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this.trainPattern(data[i], true);\n    }\n    return sum / data.length;\n  }\n\n  /**\n   * @param data\n   */\n  trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this.trainPattern(data[i]);\n    }\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param endTime\n   */\n  trainingTick(data, status, endTime) {\n    const {\n      callback,\n      callbackPeriod,\n      errorThresh,\n      iterations,\n      log,\n      logPeriod,\n    } = this.trainOpts;\n\n    if (\n      status.iterations >= iterations ||\n      status.error <= errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (log && status.iterations % logPeriod === 0) {\n      status.error = this.calculateTrainingError(data);\n      log(status);\n    } else if (status.iterations % this.errorCheckInterval === 0) {\n      status.error = this.calculateTrainingError(data);\n    } else {\n      this.trainPatterns(data);\n    }\n\n    if (callback && status.iterations % callbackPeriod === 0) {\n      callback({\n        iterations: status.iterations,\n        error: status.error,\n      });\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return {object} { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(data);\n\n    return {\n      data,\n      status,\n      endTime,\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {object} {error: number, iterations: number}\n   */\n  train(data, options = {}) {\n    let status;\n    let endTime;\n    ({ data, status, endTime } = this.prepTraining(data, options));\n\n    while (this.trainingTick(data, status, endTime));\n    return status;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {Promise}\n   * @resolves {{error: number, iterations: number}}\n   * @rejects {{trainError: string, status: {error: number, iterations: number}}\n   */\n  trainAsync(data, options = {}) {\n    let status;\n    let endTime;\n    ({ data, status, endTime } = this.prepTraining(data, options));\n\n    return new Promise((resolve, reject) => {\n      try {\n        const thawedTrain = new Thaw(new Array(this.trainOpts.iterations), {\n          delay: true,\n          each: () =>\n            this.trainingTick(data, status, endTime) || thawedTrain.stop(),\n          done: () => resolve(status),\n        });\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject({ trainError, status });\n      }\n    });\n  }\n\n  /**\n   *\n   * @param {object} value\n   * @param {boolean} [logErrorRate]\n   */\n  trainPattern(value, logErrorRate) {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return mse(this.errors[this.outputLayer]);\n    }\n    return null;\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasSigmoid(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const activeSize = this.sizes[layer];\n      const activeOutput = this.outputs[layer];\n      const activeError = this.errors[layer];\n      const activeDeltas = this.deltas[layer];\n      const nextLayer = this.weights[layer + 1];\n\n      for (let node = 0; node < activeSize; node++) {\n        const output = activeOutput[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          const deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * nextLayer[k][node];\n          }\n        }\n        activeError[node] = error;\n        activeDeltas[node] = error * output * (1 - output);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasRelu(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextWeights = this.weights[layer + 1];\n      const nextDeltas = this.deltas[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : 0;\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasLeakyRelu(target) {\n    const alpha = this.leakyReluAlpha;\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : alpha * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasTanh(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = (1 - output * output) * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * Changes weights of networks\n   */\n  adjustWeights() {\n    const { learningRate, momentum } = this.trainOpts;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const activeSize = this.sizes[layer];\n      const activeDelta = this.deltas[layer];\n      const activeChanges = this.changes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n\n      for (let node = 0; node < activeSize; node++) {\n        const delta = activeDelta[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          let change = activeChanges[node][k];\n\n          change = learningRate * delta * incoming[k] + momentum * change;\n\n          activeChanges[node][k] = change;\n          activeWeights[node][k] += change;\n        }\n        activeBiases[node] += learningRate * delta;\n      }\n    }\n  }\n\n  _setupAdam() {\n    this.biasChangesLow = [];\n    this.biasChangesHigh = [];\n    this.changesLow = [];\n    this.changesHigh = [];\n    this.iterations = 0;\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      const size = this.sizes[layer];\n      if (layer > 0) {\n        this.biasChangesLow[layer] = zeros(size);\n        this.biasChangesHigh[layer] = zeros(size);\n        this.changesLow[layer] = new Array(size);\n        this.changesHigh[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          const prevSize = this.sizes[layer - 1];\n          this.changesLow[layer][node] = zeros(prevSize);\n          this.changesHigh[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.adjustWeights = this._adjustWeightsAdam;\n  }\n\n  _adjustWeightsAdam() {\n    this.iterations++;\n\n    const { iterations } = this;\n    const { beta1, beta2, epsilon, learningRate } = this.trainOpts;\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const currentSize = this.sizes[layer];\n      const currentDeltas = this.deltas[layer];\n      const currentChangesLow = this.changesLow[layer];\n      const currentChangesHigh = this.changesHigh[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentBiasChangesLow = this.biasChangesLow[layer];\n      const currentBiasChangesHigh = this.biasChangesHigh[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const delta = currentDeltas[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          const gradient = delta * incoming[k];\n          const changeLow =\n            currentChangesLow[node][k] * beta1 + (1 - beta1) * gradient;\n          const changeHigh =\n            currentChangesHigh[node][k] * beta2 +\n            (1 - beta2) * gradient * gradient;\n\n          const momentumCorrection =\n            changeLow / (1 - Math.pow(beta1, iterations));\n          const gradientCorrection =\n            changeHigh / (1 - Math.pow(beta2, iterations));\n\n          currentChangesLow[node][k] = changeLow;\n          currentChangesHigh[node][k] = changeHigh;\n          currentWeights[node][k] +=\n            (learningRate * momentumCorrection) /\n            (Math.sqrt(gradientCorrection) + epsilon);\n        }\n\n        const biasGradient = currentDeltas[node];\n        const biasChangeLow =\n          currentBiasChangesLow[node] * beta1 + (1 - beta1) * biasGradient;\n        const biasChangeHigh =\n          currentBiasChangesHigh[node] * beta2 +\n          (1 - beta2) * biasGradient * biasGradient;\n\n        const biasMomentumCorrection =\n          currentBiasChangesLow[node] / (1 - Math.pow(beta1, iterations));\n        const biasGradientCorrection =\n          currentBiasChangesHigh[node] / (1 - Math.pow(beta2, iterations));\n\n        currentBiasChangesLow[node] = biasChangeLow;\n        currentBiasChangesHigh[node] = biasChangeHigh;\n        currentBiases[node] +=\n          (learningRate * biasMomentumCorrection) /\n          (Math.sqrt(biasGradientCorrection) + epsilon);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      data = [data];\n    }\n\n    if (!Array.isArray(data[0].input)) {\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      } else {\n        const inputLookup = new LookupTable(data, 'input');\n        this.inputLookup = inputLookup.table;\n        this.inputLookupLength = inputLookup.length;\n      }\n    }\n\n    if (!Array.isArray(data[0].output)) {\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      } else {\n        const lookup = new LookupTable(data, 'output');\n        this.outputLookup = lookup.table;\n        this.outputLookupLength = lookup.length;\n      }\n    }\n\n    if (typeof this._formatInput === 'undefined') {\n      this._formatInput = getTypedArrayFn(data[0].input, this.inputLookup);\n      this._formatOutput = getTypedArrayFn(data[0].output, this.outputLookup);\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    if (this._formatInput && this._formatOutput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: this._formatInput(data[i].input),\n          output: this._formatOutput(data[i].output),\n        });\n      }\n      return result;\n    }\n    if (this._formatInput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: this._formatInput(data[i].input),\n          output: data[i].output,\n        });\n      }\n      return result;\n    }\n    if (this._formatOutput) {\n      const result = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: data[i].input,\n          output: this._formatOutput(data[i].output),\n        });\n      }\n      return result;\n    }\n    return data;\n  }\n\n  addFormat(data) {\n    this.inputLookup = lookup.addKeys(data.input, this.inputLookup);\n    if (this.inputLookup) {\n      this.inputLookupLength = Object.keys(this.inputLookup).length;\n    }\n    this.outputLookup = lookup.addKeys(data.output, this.outputLookup);\n    if (this.outputLookup) {\n      this.outputLookupLength = Object.keys(this.outputLookup).length;\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array,\n   *  }\n   * }\n   */\n  test(data) {\n    data = this.formatData(data);\n    // for binary classification problems with one output node\n    const isBinary = data[0].output.length === 1;\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n\n    if (isBinary) {\n      let falsePos = 0;\n      let falseNeg = 0;\n      let truePos = 0;\n      let trueNeg = 0;\n\n      for (let i = 0; i < data.length; i++) {\n        const output = this.runInput(data[i].input);\n        const target = data[i].output;\n        const actual = output[0] > this.binaryThresh ? 1 : 0;\n        const expected = target[0];\n\n        if (actual !== expected) {\n          const misclass = data[i];\n          misclasses.push({\n            input: misclass.input,\n            output: misclass.output,\n            actual,\n            expected,\n          });\n        }\n\n        if (actual === 0 && expected === 0) {\n          trueNeg++;\n        } else if (actual === 1 && expected === 1) {\n          truePos++;\n        } else if (actual === 0 && expected === 1) {\n          falseNeg++;\n        } else if (actual === 1 && expected === 0) {\n          falsePos++;\n        }\n\n        errorSum += mse(\n          output.map((value, i) => {\n            return target[i] - value;\n          })\n        );\n      }\n\n      return {\n        error: errorSum / data.length,\n        misclasses,\n        total: data.length,\n        trueNeg,\n        truePos,\n        falseNeg,\n        falsePos,\n        precision: truePos > 0 ? truePos / (truePos + falsePos) : 0,\n        recall: truePos > 0 ? truePos / (truePos + falseNeg) : 0,\n        accuracy: (trueNeg + truePos) / data.length,\n      };\n    }\n\n    for (let i = 0; i < data.length; i++) {\n      const output = this.runInput(data[i].input);\n      const target = data[i].output;\n      const actual = output.indexOf(max(output));\n      const expected = target.indexOf(max(target));\n\n      if (actual !== expected) {\n        const misclass = data[i];\n        misclasses.push({\n          input: misclass.input,\n          output: misclass.output,\n          actual,\n          expected,\n        });\n      }\n\n      errorSum += mse(\n        output.map((value, i) => {\n          return target[i] - value;\n        })\n      );\n    }\n    return {\n      error: errorSum / data.length,\n      misclasses,\n      total: data.length,\n    };\n  }\n\n  /**\n   *\n   * @returns\n   *  {\n   *    layers: [\n   *      {\n   *        x: {},\n   *        y: {}\n   *      },\n   *      {\n   *        '0': {\n   *          bias: -0.98771313,\n   *          weights: {\n   *            x: 0.8374838,\n   *            y: 1.245858\n   *          },\n   *        '1': {\n   *          bias: 3.48192004,\n   *          weights: {\n   *            x: 1.7825821,\n   *            y: -2.67899\n   *          }\n   *        }\n   *      },\n   *      {\n   *        f: {\n   *          bias: 0.27205739,\n   *          weights: {\n   *            '0': 1.3161821,\n   *            '1': 2.00436\n   *          }\n   *        }\n   *      }\n   *    ]\n   *  }\n   */\n  toJSON() {\n    if (this.sizes === null) {\n      this.initialize();\n    }\n    const layers = [];\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      layers[layer] = {};\n\n      let nodes;\n      // turn any internal arrays back into hashes for readable json\n      if (layer === 0 && this.inputLookup) {\n        nodes = Object.keys(this.inputLookup);\n      } else if (this.outputLookup && layer === this.outputLayer) {\n        nodes = Object.keys(this.outputLookup);\n      } else {\n        nodes = range(0, this.sizes[layer]);\n      }\n\n      for (let j = 0; j < nodes.length; j++) {\n        const node = nodes[j];\n        layers[layer][node] = {};\n\n        if (layer > 0) {\n          layers[layer][node].bias = this.biases[layer][j];\n          layers[layer][node].weights = {};\n          for (const k in layers[layer - 1]) {\n            let index = k;\n            if (layer === 1 && this.inputLookup) {\n              index = this.inputLookup[k];\n            }\n            layers[layer][node].weights[k] = this.weights[layer][j][index];\n          }\n        }\n      }\n    }\n    return {\n      sizes: this.sizes.slice(0),\n      layers,\n      outputLookup: this.outputLookup !== null,\n      inputLookup: this.inputLookup !== null,\n      activation: this.activation,\n      trainOpts: this.getTrainOptsJSON(),\n    };\n  }\n\n  /**\n   *\n   * @param json\n   * @returns {NeuralNetwork}\n   */\n  fromJSON(json) {\n    Object.assign(this, this.constructor.defaults, json);\n    this.sizes = json.sizes;\n    this.initialize();\n\n    for (let i = 0; i <= this.outputLayer; i++) {\n      const layer = json.layers[i];\n      if (i === 0 && (!layer[0] || json.inputLookup)) {\n        this.inputLookup = lookup.toHash(layer);\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      } else if (i === this.outputLayer && (!layer[0] || json.outputLookup)) {\n        this.outputLookup = lookup.toHash(layer);\n      }\n      if (i > 0) {\n        const nodes = Object.keys(layer);\n        this.sizes[i] = nodes.length;\n        for (const j in nodes) {\n          if (nodes.hasOwnProperty(j)) {\n            const node = nodes[j];\n            this.biases[i][j] = layer[node].bias;\n            this.weights[i][j] = toArray(layer[node].weights);\n          }\n        }\n      }\n    }\n    if (json.hasOwnProperty('trainOpts')) {\n      this.updateTrainingOptions(json.trainOpts);\n    }\n    return this;\n  }\n\n  /**\n   * @param {Function} [cb]\n   * @returns {Function}\n   */\n  toFunction(cb) {\n    const { activation } = this;\n    const { leakyReluAlpha } = this;\n    let needsVar = false;\n    function nodeHandle(layers, layerNumber, nodeKey) {\n      if (layerNumber === 0) {\n        return typeof nodeKey === 'string'\n          ? `(input['${nodeKey}']||0)`\n          : `(input[${nodeKey}]||0)`;\n      }\n\n      const layer = layers[layerNumber];\n      const node = layer[nodeKey];\n      const result = ['(', node.bias];\n      for (const w in node.weights) {\n        if (node.weights[w] < 0) {\n          result.push(\n            `${node.weights[w]}*${nodeHandle(layers, layerNumber - 1, w)}`\n          );\n        } else {\n          result.push(\n            `+${node.weights[w]}*${nodeHandle(layers, layerNumber - 1, w)}`\n          );\n        }\n      }\n      result.push(')');\n\n      switch (activation) {\n        case 'sigmoid':\n          return `1/(1+1/Math.exp(${result.join('')}))`;\n        case 'relu': {\n          needsVar = true;\n          return `((v=${result.join('')})<0?0:v)`;\n        }\n        case 'leaky-relu': {\n          needsVar = true;\n          return `((v=${result.join('')})<0?0:${leakyReluAlpha}*v)`;\n        }\n        case 'tanh':\n          return `Math.tanh(${result.join('')})`;\n        default:\n          throw new Error(\n            `Unknown activation ${this.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n          );\n      }\n    }\n\n    const { layers } = this.toJSON();\n    const layersAsMath = [];\n    let result;\n    for (const i in layers[layers.length - 1]) {\n      layersAsMath.push(nodeHandle(layers, layers.length - 1, i));\n    }\n    if (this.outputLookup) {\n      result = `{${Object.keys(this.outputLookup).map(\n        (key, i) => `'${key}':${layersAsMath[i]}`\n      )}}`;\n    } else {\n      result = `[${layersAsMath.join(',')}]`;\n    }\n\n    const source = `${needsVar ? 'var v;' : ''}return ${result};`;\n    return new Function('input', cb ? cb(source) : source);\n  }\n}\n\nfunction getTypedArrayFn(value, table) {\n  if (value.buffer instanceof ArrayBuffer) {\n    return null;\n  }\n  if (Array.isArray(value)) {\n    return arrayToFloat32Array;\n  }\n  const { length } = Object.keys(table);\n  return (v) => {\n    const array = new Float32Array(length);\n    for (const p in table) {\n      array[table[p]] = v[p] || 0;\n    }\n    return array;\n  };\n}\n\nmodule.exports = NeuralNetwork;\n","const { GPU, alias, utils: gpuUtils } = require('gpu.js');\nconst NeuralNetwork = require('./neural-network');\nconst lookup = require('./lookup');\nconst { release } = require('./utilities/kernel');\n\nfunction weightedSumSigmoid(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output, targets) {\n  return targets[this.thread.x] - output;\n}\n\nfunction calcDeltasSigmoid(error, output) {\n  // sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error, output) {\n  // relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error, output) {\n  // leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error, output) {\n  // tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(nextWeights, nextDeltas) {\n  let error = 0;\n  for (let k = 0; k < this.constants.size; k++) {\n    error += nextDeltas[k] * nextWeights[k][this.thread.x];\n  }\n  return error;\n}\n\nfunction calcChanges(previousChanges, deltas, previousOutputs) {\n  return (\n    this.constants.learningRate *\n      deltas[this.thread.y] *\n      previousOutputs[this.thread.x] +\n    this.constants.momentum * previousChanges[this.thread.y][this.thread.x]\n  );\n}\n\nfunction addWeights(change, weights) {\n  return change + weights[this.thread.y][this.thread.x];\n}\n\nfunction addBiases(biases, deltas) {\n  return (\n    biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate\n  );\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(errors) {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / this.constants.size;\n}\n\n/**\n *\n * @param {object} options\n * @constructor\n */\nclass NeuralNetworkGPU extends NeuralNetwork {\n  constructor(options = {}) {\n    super(options);\n    this.forwardPropagate = [];\n    this.backwardPropagate = [];\n    this.changesPropagate = [];\n    this.biasesPropagate = [];\n    this.errorCheckInterval = 100;\n    this.gpu = new GPU({ mode: options.mode });\n  }\n\n  /**\n   *\n   */\n  initialize() {\n    super.initialize();\n    this.buildRunInput();\n    this.buildCalculateDeltas();\n    this.buildGetChanges();\n    this.buildChangeBiases();\n    this.buildGetMSE();\n  }\n\n  setActivation() {\n    return;\n    throw new Error(\n      `${this.constructor.name}-setActivation is not yet implemented`\n    );\n  }\n\n  /**\n   *\n   * @param value\n   * @param logErrorRate\n   */\n  trainPattern(value, logErrorRate) {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return this.getMSE(this.errors[this.outputLayer]);\n    }\n    return null;\n  }\n\n  calculateTrainingError(data) {\n    let sum = new Float32Array([0]);\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this.trainPattern(data[i], true);\n      sum = this._addMSE(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this._divideMSESum(data.length, sum)[0];\n    release(sum);\n    return result;\n  }\n\n  adjustWeights() {\n    this.getChanges();\n    this.changeBiases();\n  }\n\n  buildRunInput() {\n    let weightedSum = null;\n\n    switch (this.activation) {\n      case 'sigmoid':\n        weightedSum = weightedSumSigmoid;\n        break;\n      case 'relu':\n        weightedSum = weightedSumRelu;\n        break;\n      case 'leaky-relu':\n        weightedSum = weightedSumLeakyRelu;\n        break;\n      case 'tanh':\n        weightedSum = weightedSumTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${this.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          size: this.sizes[layer - 1]\n        },\n        immutable: true\n      });\n    }\n\n    this.texturizeInputData = this.gpu.createKernel(\n      function (value) {\n        return value[this.thread.x];\n      },\n      {\n        output: [this.sizes[1]],\n        pipeline: true,\n        immutable: true\n      }\n    );\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  runInput(input) {\n    let output;\n    this.outputs[0] = input;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      release(this.outputs[layer]);\n      this.outputs[layer] = this.forwardPropagate[layer](\n        this.weights[layer],\n        this.biases[layer],\n        input\n      );\n      output = input = this.outputs[layer];\n    }\n    return output;\n  }\n\n  buildCalculateDeltas() {\n    let calcDeltas = null;\n    switch (this.activation) {\n      case 'sigmoid':\n        calcDeltas = calcDeltasSigmoid;\n        break;\n      case 'relu':\n        calcDeltas = calcDeltasRelu;\n        break;\n      case 'leaky-relu':\n        calcDeltas = calcDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        calcDeltas = calcDeltasTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${this.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n\n    calcDeltas = alias(\n      gpuUtils.getMinifySafeName(() => calcDeltas),\n      calcDeltas\n    );\n    this.gpu.addFunction(calcDeltas);\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      if (layer === this.outputLayer) {\n        this.backwardPropagate[this.outputLayer] = this.gpu.createKernelMap(\n          {\n            error: calcErrorOutput\n          },\n          function (outputs, targets) {\n            const output = outputs[this.thread.x];\n            return calcDeltas(calcErrorOutput(output, targets), output);\n          },\n          {\n            output: [this.sizes[this.outputLayer]],\n            pipeline: true,\n            immutable: true\n          }\n        );\n      } else {\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: calcError\n          },\n          function (nextWeights, outputs, nextDeltas) {\n            const output = outputs[this.thread.x];\n            return calcDeltas(calcError(nextWeights, nextDeltas), output);\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n            constants: {\n              size: this.deltas[layer + 1].length\n            },\n            immutable: true\n          }\n        );\n      }\n    }\n  }\n\n  calculateDeltas(target) {\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      let output;\n      release(this.deltas[layer]);\n      release(this.errors[layer]);\n\n      if (layer === this.outputLayer) {\n        output = this.backwardPropagate[layer](this.outputs[layer], target);\n      } else {\n        output = this.backwardPropagate[layer](\n          this.weights[layer + 1],\n          this.outputs[layer],\n          this.deltas[layer + 1]\n        );\n      }\n      this.deltas[layer] = output.result;\n      this.errors[layer] = output.error;\n    }\n  }\n\n  buildGetChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.changesPropagate[layer] = this.gpu.createKernelMap(\n        {\n          weights: addWeights,\n          changes: calcChanges\n        },\n        function (previousOutputs, deltas, weights, changes) {\n          const change = calcChanges(changes, deltas, previousOutputs);\n\n          return addWeights(change, weights);\n        },\n        {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            size: this.outputs[layer - 1].length,\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum\n          },\n          immutable: true\n        }\n      );\n    }\n  }\n\n  getChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const weights = this.weights[layer];\n      const changes = this.changes[layer];\n      const output = this.changesPropagate[layer](\n        this.outputs[layer - 1],\n        this.deltas[layer],\n        weights,\n        changes\n      );\n      release(weights);\n      release(changes);\n      this.weights[layer] = output.weights;\n      this.changes[layer] = output.changes;\n      release(output.result);\n    }\n  }\n\n  buildChangeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          learningRate: this.trainOpts.learningRate\n        },\n        immutable: true\n      });\n    }\n  }\n\n  changeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const biases = this.biases[layer];\n      this.biases[layer] = this.biasesPropagate[layer](\n        biases,\n        this.deltas[layer]\n      );\n      release(biases);\n    }\n  }\n\n  buildGetMSE() {\n    this.getMSE = this.gpu.createKernel(mse, {\n      output: [1],\n      constants: {\n        size: this.sizes[this.outputLayer]\n      },\n      pipeline: true,\n      immutable: true\n    });\n    this._addMSE = this.gpu.createKernel(\n      function (value1, value2) {\n        return value1[0] + value2[0];\n      },\n      {\n        output: [1],\n        pipeline: true,\n        immutable: true\n      }\n    );\n    this._divideMSESum = this.gpu.createKernel(\n      function (length, mseSum) {\n        const value = mseSum[0];\n        if (value > 0) {\n          return value / length;\n        }\n        return 0;\n      },\n      {\n        output: [1]\n      }\n    );\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n    const outputTextures = this.runInput(input);\n    let output = outputTextures.toArray\n      ? outputTextures.toArray()\n      : outputTextures;\n\n    if (this.outputLookup) {\n      output = lookup.toObject(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0\n    };\n\n    this.verifyIsInitialized(data);\n\n    const texturizeOutputData = this.gpu.createKernel(\n      function (value) {\n        return value[this.thread.x];\n      },\n      {\n        output: [data[0].output.length],\n        pipeline: true,\n        immutable: true\n      }\n    );\n\n    return {\n      data: data.map((set) => ({\n        input: this.texturizeInputData(set.input),\n        output: texturizeOutputData(set.output)\n      })),\n      status,\n      endTime\n    };\n  }\n\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  toJSON() {\n    if (!this.weights[1].toArray) {\n      // in fallback mode\n      return super.toJSON();\n    }\n\n    // in GPU mode\n    const weights = [];\n    const biases = [];\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      weights[layer] = Array.from(this.weights[layer].toArray());\n      biases[layer] = Array.from(this.biases[layer].toArray());\n    }\n\n    // pseudo lo-fi decorator\n    return NeuralNetwork.prototype.toJSON.call({\n      activation: this.activation,\n      inputLookup: this.inputLookup,\n      outputLookup: this.outputLookup,\n      outputLayer: this.outputLayer,\n      sizes: this.sizes,\n      getTrainOptsJSON: () => this.getTrainOptsJSON(),\n      weights,\n      biases\n    });\n  }\n}\n\nmodule.exports = NeuralNetworkGPU;\n","const { Internal } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { release } = require('../utilities/kernel');\n\nclass RecurrentConnection extends Internal {\n  setLayer(layer) {\n    this.layer = layer;\n  }\n\n  get width() {\n    return this.layer.width;\n  }\n\n  set width(value) {\n    throw new Error(`${this.constructor.name}-width is not yet implemented`);\n  }\n\n  get height() {\n    return this.layer.height;\n  }\n\n  set height(value) {\n    throw new Error(`${this.constructor.name}-height is not yet implemented`);\n  }\n\n  get deltas() {\n    return this.layer.deltas;\n  }\n\n  set deltas(deltas) {\n    release(this.layer.deltas);\n    this.layer.deltas = deltas;\n  }\n\n  get weights() {\n    return this.layer.weights;\n  }\n\n  set weights(weights) {\n    release(this.layer.weights);\n    this.layer.weights = weights;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    throw new Error('no longer using');\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n\nmodule.exports = {\n  RecurrentConnection\n};\n","const { Internal } = require('./types');\nconst { Base } = require('./base');\nconst { release } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\n\nclass RecurrentInput extends Internal {\n  constructor(recurrentInput) {\n    super();\n    this.recurrentInput = recurrentInput;\n    this.validate();\n  }\n\n  get width() {\n    return this.recurrentInput.width;\n  }\n\n  get height() {\n    return this.recurrentInput.height;\n  }\n\n  get deltas() {\n    return this.recurrentInput.deltas;\n  }\n\n  set deltas(deltas) {\n    const recurrentInputDeltas = this.recurrentInput.deltas;\n    this.recurrentInput.deltas = deltas;\n    release(recurrentInputDeltas);\n  }\n\n  get weights() {\n    return this.recurrentInput.weights;\n  }\n\n  set weights(weights) {\n    const recurrentInputWeights = this.recurrentInput.weights;\n    this.recurrentInput.weights = weights;\n    release(recurrentInputWeights);\n  }\n\n  validate() {\n    Base.prototype.validate.call(this);\n    if (this.width !== this.recurrentInput.width) {\n      throw new Error(\n        `${this.constructor.name} layer width ${this.width} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.width}) are not same`\n      );\n    }\n\n    if (this.height !== this.recurrentInput.height) {\n      throw new Error(\n        `${this.constructor.name} layer height ${this.height} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.height}) are not same`\n      );\n    }\n  }\n\n  setDimensions(width, height) {\n    throw new Error('should just listen');\n    this.width = width;\n    this.height = height;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n\nmodule.exports = {\n  RecurrentInput\n};\n","const zeros2D = require('../utilities/zeros-2d');\nconst { Internal } = require('./types');\nconst { release, clear } = require('../utilities/kernel');\n\nclass RecurrentZeros extends Internal {\n  setDimensions(width, height) {\n    this.praxis = null;\n    this.width = width;\n    this.height = height;\n    this.weights = zeros2D(width, height);\n    this.deltas = zeros2D(width, height);\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    const { weights: oldWeights } = this;\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    this.deltas = deltas;\n    release(oldWeights);\n    clear(this.deltas);\n  }\n\n  validate() {\n    throw new Error(`${this.constructor.name}-validate is not yet implemented`);\n  }\n\n  reset() {\n    throw new Error(`${this.constructor.name}-reset is not yet implemented`);\n  }\n}\n\nfunction recurrentZeros() {\n  return new RecurrentZeros();\n}\n\nmodule.exports = {\n  RecurrentZeros,\n  recurrentZeros,\n};\n","const { RecurrentConnection } = require('./layer/recurrent-connection');\nconst { RecurrentInput } = require('./layer/recurrent-input');\nconst { RecurrentZeros } = require('./layer/recurrent-zeros');\nconst { Model, InternalModel } = require('./layer/types');\nconst { Target } = require('./layer/target');\nconst flattenLayers = require('./utilities/flatten-layers');\nconst { FeedForward } = require('./feed-forward');\nconst { release, clone } = require('./utilities/kernel');\n\nclass Recurrent extends FeedForward {\n  static get structure() {\n    return {\n      /**\n       *\n       * _inputLayers are a 1 dimensional array of input layers defined once\n       * @type Object[]\n       * @private\n       */\n      _inputLayers: null,\n\n      /**\n       * _hiddenLayers are a 1 dimensional array of hidden layers defined from results from settings.hiddenLayers\n       * @type Object[]\n       * @private\n       */\n      _hiddenLayers: null,\n\n      /**\n       * _hiddenLayerSets are a 2 dimensional array of hidden layers defined for each recursion\n       * @type Object[][]\n       * @private\n       */\n      _hiddenLayerSets: null,\n\n      /**\n       * a 2 dimensional array of layers defined for each recursion\n       */\n      _layerSets: null,\n      _hiddenLayerOutputIndices: null,\n\n      /**\n       * _outputLayers are a 1 dimensional array of output layers defined once\n       * @type Object[]\n       * @private\n       */\n      _outputLayers: null,\n      _outputConnection: null,\n      _previousInputs: null,\n      _model: null,\n      _recurrentIndices: null,\n    };\n  }\n\n  _connectLayers() {\n    const inputLayer = this.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(inputLayer);\n    const outputLayer = this.outputLayer(hiddenLayers[hiddenLayers.length - 1]);\n    return {\n      inputLayer,\n      hiddenLayers,\n      outputLayer,\n    };\n  }\n\n  _connectLayersDeep() {\n    const layers = [];\n    const previousLayers = this._layerSets[this._layerSets.length - 1];\n    let usedHiddenLayerOutputIndex = 0;\n    for (let i = 0; i < previousLayers.length; i++) {\n      const previousLayer = previousLayers[i];\n      let layer = null;\n      switch (Object.getPrototypeOf(previousLayer.constructor).name) {\n        case 'Activation': {\n          layer = new previousLayer.constructor(findInputLayer(previousLayer.inputLayer));\n          break;\n        }\n        case 'EntryPoint': {\n          layer = new previousLayer.constructor(layerSettings(previousLayer));\n          break;\n        }\n        case 'Filter': {\n          layer = new previousLayer.constructor(\n            layerSettings(previousLayer.inputLayer),\n            findInputLayer(previousLayer.inputLayer)\n          );\n          break;\n        }\n        case 'Internal': {\n          const previousHiddenLayerOutput = previousLayers[this._hiddenLayerOutputIndices[usedHiddenLayerOutputIndex++]];\n          switch (previousLayer.constructor.name) {\n            case 'RecurrentConnection':\n              throw new Error('unfinished');\n            case 'RecurrentInput':\n              layer = new RecurrentInput(previousHiddenLayerOutput);\n              break;\n            case 'RecurrentZeros':\n            default:\n              layer = new RecurrentInput(previousHiddenLayerOutput);\n              break;\n          }\n          break;\n        }\n        case 'InternalModel':\n        case 'Model': {\n          layer = previousLayer;\n          break;\n        }\n        case 'Modifier': {\n          layer = new previousLayer.constructor(findInputLayer(previousLayer.inputLayer));\n          break;\n        }\n        case 'Operator': {\n          layer = new previousLayer.constructor(\n            findInputLayer(previousLayer.inputLayer1),\n            findInputLayer(previousLayer.inputLayer2),\n            layerSettings(previousLayer)\n          );\n          break;\n        }\n        default:\n          throw new Error(\n            `hidden layer ${\n              previousLayer.constructor.name\n            } extends unknown hidden layer ${\n              Object.getPrototypeOf(previousLayer.constructor).name\n            }`\n          );\n      }\n      layers.push(layer);\n    }\n\n    function findInputLayer(inputLayer) {\n      const index = previousLayers.indexOf(inputLayer);\n      if (index < 0) throw new Error('unable to find layer');\n      return layers[index];\n    }\n\n    function layerSettings(layer) {\n      return { ...layer, weights: null, deltas: null, errors: null, praxis: null };\n    }\n\n    return layers;\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    const hiddenLayers = [];\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const recurrentInput = new RecurrentZeros();\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, recurrentInput, i);\n      previousLayer = hiddenLayer;\n      hiddenLayers.push(hiddenLayer);\n    }\n    return hiddenLayers;\n  }\n\n  initialize() {\n    this.layers = [];\n    this._outputConnection = new RecurrentConnection();\n    const { inputLayer, hiddenLayers, outputLayer } = this._connectLayers();\n    const layerSet = flattenLayers([inputLayer, ... hiddenLayers, outputLayer]);\n    this._hiddenLayerOutputIndices = hiddenLayers.map(l => layerSet.indexOf(l));\n    this._layerSets = [layerSet];\n    this._model = layerSet.filter(l => l instanceof Model || l instanceof InternalModel);\n    this.initializeLayers(layerSet);\n  }\n\n  initializeDeep() {\n    const layers = this._connectLayersDeep();\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      layer.reuseKernels(this._layerSets[0][i]);\n    }\n    this._layerSets.push(layers);\n  }\n\n  run(input) {\n    while (this._layerSets.length <= input.length) {\n      this.initializeDeep();\n    }\n    return super.run(input);\n  }\n\n  runInput(input) {\n    while (this._layerSets.length < input.length) {\n      this.initializeDeep();\n    }\n    const max = input.length - 1; // last output will be compared with last index\n    for (let x = 0; x <= max; x++) {\n      const layerSet = this._layerSets[x];\n      layerSet[0].predict([new Float32Array([input[x]])]);\n      for (let i = 1; i < layerSet.length; i++) {\n        layerSet[i].predict();\n      }\n    }\n    const lastLayerUsed = this._layerSets[max];\n    const result = lastLayerUsed[lastLayerUsed.length - 1].weights;\n    this.end();\n    return result;\n  }\n\n  end() {\n    const x = this._layerSets.length - 1;\n    const lastLayerSet = this._layerSets[x];\n    lastLayerSet[0].predict([new Float32Array([0])]);\n    for (let i = 1; i < lastLayerSet.length; i++) {\n      lastLayerSet[i].predict();\n    }\n  }\n\n  transferData(formattedData) {\n    return formattedData;\n  }\n\n  _prepTraining(data, options) {\n    const stats = super._prepTraining(data, options);\n\n    this.verifyIsInitialized(data);\n\n    return stats;\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  _calculateTrainingError(data) {\n    let sum = new Float32Array(1);\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this._trainPattern(data[i], true);\n      sum = this.meanSquaredError.add(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this.meanSquaredError.divide(data.length, sum);\n    release(sum);\n    if (result.toArray) {\n      const resultArray = result.toArray();\n      return resultArray[0];\n    }\n    return result[0];\n  }\n\n  formatData(data) {\n    return data;\n  }\n\n  _calculateDeltas(target) {\n    const lastLayerSet = this._layerSets[this._layerSets.length - 1];\n    // Iterate from the second to last layer backwards, propagating 0's\n    for (let i = lastLayerSet.length - 2; i >= 0; i--) {\n      lastLayerSet[i].compare();\n    }\n\n    for (let x = target.length - 2; x >= 0; x--) {\n      const layerSet = this._layerSets[x];\n      layerSet[layerSet.length - 1].compare(new Float32Array([target[x + 1]]));\n      for (let i = layerSet.length - 2; i >= 0; i--) {\n        layerSet[i].compare();\n      }\n    }\n  }\n\n  adjustWeights() {\n    const { _model } = this;\n    for (let i = 0; i < _model.length; i++) {\n      _model[i].learn();\n    }\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i], false);\n    }\n  }\n  /**\n   *\n   * @param {number[]} input\n   * @param {Boolean} [logErrorRate]\n   */\n  _trainPattern(input, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(input);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      const { meanSquaredError } = this;\n      let error = new Float32Array(1);\n      for (let i = 0, max = input.length - 1; i < max; i++) {\n        const layerSet = this._layerSets[i];\n        const lastLayer = layerSet[layerSet.length - 1];\n        const prevError = error;\n        error = meanSquaredError.addAbsolute(prevError, lastLayer.errors);\n        release(prevError);\n      }\n      return clone(meanSquaredError.divide(input.length, error));\n    }\n    return null;\n  }\n}\n\nmodule.exports = {\n  Recurrent\n};\n","const zeros = require('../../utilities/zeros');\n\n/**\n * A matrix\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nclass Matrix {\n  constructor(rows, columns) {\n    if (rows === undefined) return;\n    if (columns === undefined) return;\n\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n    this.deltas = zeros(rows * columns);\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @returns {Float32Array|Array}\n   */\n  getWeights(row, col) {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('get accessor is skewed');\n    return this.weights[ix];\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setWeight(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed');\n    this.weights[ix] = v;\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setDeltas(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed');\n    this.deltas[ix] = v;\n  }\n\n  /**\n   *\n   * @returns {{rows: *, columns: *, weights: Array}}\n   */\n  toJSON() {\n    return {\n      rows: this.rows,\n      columns: this.columns,\n      weights: this.weights.slice(0),\n    };\n  }\n\n  static fromJSON(json) {\n    const matrix = new Matrix(json.rows, json.columns);\n    for (let i = 0, max = json.rows * json.columns; i < max; i++) {\n      matrix.weights[i] = json.weights[i]; // copy over weights\n    }\n    return matrix;\n  }\n\n  /**\n   *\n   * @param weightRows\n   * @param [deltasRows]\n   * @returns {Matrix}\n   */\n  static fromArray(weightRows, deltasRows) {\n    const rows = weightRows.length;\n    const columns = weightRows[0].length;\n    const m = new Matrix(rows, columns);\n\n    deltasRows = deltasRows || weightRows;\n\n    for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\n      const weightValues = weightRows[rowIndex];\n      const deltasValues = deltasRows[rowIndex];\n      for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\n        m.setWeight(rowIndex, columnIndex, weightValues[columnIndex]);\n        m.setDeltas(rowIndex, columnIndex, deltasValues[columnIndex]);\n      }\n    }\n\n    return m;\n  }\n\n  weightsToArray() {\n    const deltas = [];\n    let row = 0;\n    let column = 0;\n    for (let i = 0; i < this.weights.length; i++) {\n      if (column === 0) {\n        deltas.push([]);\n      }\n      deltas[row].push(this.weights[i]);\n      column++;\n      if (column >= this.columns) {\n        column = 0;\n        row++;\n      }\n    }\n    return deltas;\n  }\n\n  deltasToArray() {\n    const deltas = [];\n    let row = 0;\n    let column = 0;\n    for (let i = 0; i < this.deltas.length; i++) {\n      if (column === 0) {\n        deltas.push([]);\n      }\n      deltas[row].push(this.deltas[i]);\n      column++;\n      if (column >= this.columns) {\n        column = 0;\n        row++;\n      }\n    }\n    return deltas;\n  }\n}\n\nmodule.exports = Matrix;\n","const Matrix = require('.');\nconst { randomFloat } = require('../../utilities/random');\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @param std\n * @constructor\n */\nclass RandomMatrix extends Matrix {\n  constructor(rows, columns, std) {\n    super(rows, columns);\n    this.rows = rows;\n    this.columns = columns;\n    this.std = std;\n    for (let i = 0, max = this.weights.length; i < max; i++) {\n      this.weights[i] = randomFloat(-std, std);\n    }\n  }\n}\n\nmodule.exports = RandomMatrix;\n","const Matrix = require('.');\nconst ones = require('../../utilities/ones');\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nclass OnesMatrix extends Matrix {\n  constructor(rows, columns) {\n    super(rows, columns);\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = ones(rows * columns);\n    this.deltas = ones(rows * columns);\n  }\n}\n\nmodule.exports = OnesMatrix;\n","/*\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function copy(product, left) {\n  product.rows = parseInt(left.rows, 10);\n  product.columns = parseInt(left.columns, 10);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n};\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function cloneNegative(product, left) {\n  product.rows = parseInt(left.rows, 10);\n  product.columns = parseInt(left.columns, 10);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = -left.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * add {left} and {right} matrix weights into {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function add(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i];\n    product.deltas[i] = 0;\n  }\n};\n","/**\n * adds {from} deltas to {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function addB(product, left, right) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = product.deltas[i];\n    right.deltas[i] = product.deltas[i];\n  }\n};\n","/**\n * makes matrix weights and deltas all ones\n * @param {Matrix} product\n */\nmodule.exports = function allOnes(product) {\n  for (let i = 0; i < product.weights.length; i++) {\n    product.weights[i] = 1;\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * multiply {left} and {right} matrix weights to {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiply(product, left, right) {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRow = 0; leftRow < leftRows; leftRow++) {\n    const leftRowBase = leftColumns * leftRow;\n    const rightRowBase = rightColumns * leftRow;\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // dot product loop\n      let dot = 0;\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftIndex = leftRowBase + leftColumn;\n        const rightIndex = rightColumnBase + rightColumn;\n        dot += left.weights[leftIndex] * right.weights[rightIndex];\n        left.deltas[leftIndex] = 0;\n        right.deltas[rightIndex] = 0;\n      }\n      product.weights[rightRowBase + rightColumn] = dot;\n    }\n  }\n};\n","/**\n * multiplies {from} deltas to {left} and {right}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyB(product, left, right) {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRowRoot = 0; leftRowRoot < leftRows; leftRowRoot++) {\n    const leftRowBase = leftColumns * leftRowRoot;\n    const rightRowBase = rightColumns * leftRowRoot;\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftRow = leftRowBase + leftColumn;\n        const rightRow = rightColumnBase + rightColumn;\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\n      }\n    }\n  }\n};\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyElement(product, left, right) {\n  const { weights } = left;\n  for (let i = 0; i < weights.length; i++) {\n    product.weights[i] = left.weights[i] * right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyElementB(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i];\n    right.deltas[i] = left.weights[i] * product.deltas[i];\n  }\n}\n","/**\n *\n * relu {m} weights to {into} weights\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function relu(product, left) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function reluB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n  }\n};\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowPluckIndex\n */\nmodule.exports = function rowPluck(product, left, rowPluckIndex) {\n  const { columns } = left;\n  const rowBase = columns * rowPluckIndex;\n  for (let column = 0; column < columns; column++) {\n    product.weights[column] = left.weights[rowBase + column];\n    product.deltas[column] = 0;\n  }\n};\n","/**\n * adds {from} deltas into {m} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowIndex\n */\nmodule.exports = function rowPluckB(product, left, rowIndex) {\n  const { columns } = left;\n  const rowBase = columns * rowIndex;\n  for (let column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n};\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function sigmoid(product, left) {\n  // sigmoid nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));\n    product.deltas[i] = 0;\n  }\n}\n\nfunction sig(x) {\n  // helper function for computing sigmoid\n  return 1 / (1 + Math.exp(-x));\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function sigmoidB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    const mwi = product.weights[i];\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function tanh(product, left) {\n  // tanh nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.tanh(left.weights[i]);\n    product.deltas[i] = 0;\n  }\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function tanhB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    // grad for z = tanh(x) is (1 - z^2)\n    const mwi = product.weights[i];\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\n  }\n}\n","const Matrix = require('.');\n\n/**\n *\n * @param {Matrix} m\n * @returns {Matrix}\n */\nmodule.exports = function softmax(m) {\n  const result = new Matrix(m.rows, m.columns); // probability volume\n  let maxVal = -999999;\n  for (let i = 0; i < m.weights.length; i++) {\n    if (m.weights[i] > maxVal) {\n      maxVal = m.weights[i];\n    }\n  }\n\n  let s = 0;\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] = Math.exp(m.weights[i] - maxVal);\n    s += result.weights[i];\n  }\n\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] /= s;\n  }\n\n  // no backward pass here needed\n  // since we will use the computed probabilities outside\n  // to set gradients directly on m\n  return result;\n};\n","const Matrix = require('./');\nconst OnesMatrix = require('./ones-matrix');\nconst copy = require('./copy');\nconst cloneNegative = require('./clone-negative');\nconst add = require('./add');\nconst addB = require('./add-b');\nconst allOnes = require('./all-ones');\nconst multiply = require('./multiply');\nconst multiplyB = require('./multiply-b');\nconst multiplyElement = require('./multiply-element');\nconst multiplyElementB = require('./multiply-element-b');\nconst relu = require('./relu');\nconst reluB = require('./relu-b');\nconst rowPluck = require('./row-pluck');\nconst rowPluckB = require('./row-pluck-b');\nconst sigmoid = require('./sigmoid');\nconst sigmoidB = require('./sigmoid-b');\nconst tanh = require('./tanh');\nconst tanhB = require('./tanh-b');\nconst softmax = require('./softmax');\n\nclass Equation {\n  constructor() {\n    this.inputRow = 0;\n    this.inputValue = null;\n    this.states = [];\n  }\n\n  /**\n   * connects two matrices together by add\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  add(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, left.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: add,\n      backpropagationFn: addB,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param {Number} rows\n   * @param {Number} columns\n   * @returns {Matrix}\n   */\n  allOnes(rows, columns) {\n    const product = new Matrix(rows, columns);\n    this.states.push({\n      left: product,\n      product,\n      forwardFn: allOnes,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  cloneNegative(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: cloneNegative,\n    });\n    return product;\n  }\n\n  /**\n   * connects two matrices together by subtract\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  subtract(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    return this.add(\n      this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)),\n      right\n    );\n  }\n\n  /**\n   * connects two matrices together by multiply\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiply(left, right) {\n    if (left.columns !== right.rows) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, right.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiply,\n      backpropagationFn: multiplyB,\n    });\n    return product;\n  }\n\n  /**\n   * connects two matrices together by multiplyElement\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiplyElement(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, left.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiplyElement,\n      backpropagationFn: multiplyElementB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to relu\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  relu(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: relu,\n      backpropagationFn: reluB,\n    });\n    return product;\n  }\n\n  /**\n   * copy a matrix\n   * @param {Matrix} input\n   * @returns {Matrix}\n   */\n  input(input) {\n    this.states.push({\n      product: input,\n      forwardFn: (product) => {\n        product.weights = input.weights = this.inputValue;\n      }\n    });\n    return input;\n  }\n\n  /**\n   * connects a matrix via a row\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  inputMatrixToRow(m) {\n    const self = this;\n    const product = new Matrix(m.columns, 1);\n    this.states.push({\n      left: m,\n      get right() {\n        return self.inputRow;\n      },\n      product,\n      forwardFn: rowPluck,\n      backpropagationFn: rowPluckB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to sigmoid\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  sigmoid(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: sigmoid,\n      backpropagationFn: sigmoidB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to tanh\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  tanh(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: tanh,\n      backpropagationFn: tanhB,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param m\n   * @returns {Matrix}\n   */\n  observe(m) {\n    let iForward = 0;\n    let iBackpropagate = 0;\n    this.states.push({\n      forwardFn() {\n        iForward++;\n      },\n      backpropagationFn() {\n        iBackpropagate++;\n      },\n    });\n    return m;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runIndex(rowIndex = 0) {\n    this.inputRow = rowIndex;\n    let state;\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue;\n      }\n      state.forwardFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runInput(inputValue) {\n    this.inputValue = inputValue;\n    let state;\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue;\n      }\n      state.forwardFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  backpropagate() {\n    let i = this.states.length;\n    let state;\n    while (i-- > 0) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('backpropagationFn')) {\n        continue;\n      }\n      // console.log('backfn', state.backpropagationFn.name);\n      // console.log('before', state.product.deltas);\n      state.backpropagationFn(state.product, state.left, state.right);\n      // console.log('after', state.product.deltas);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  backpropagateIndex(rowIndex = 0) {\n    this.inputRow = rowIndex;\n\n    let i = this.states.length;\n    let state;\n    while (i-- > 0) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('backpropagationFn')) {\n        continue;\n      }\n      state.backpropagationFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  predictTarget(input, target) {\n    const output = this.runInput(input);\n    let errorSum = 0;\n    for (let i = 0; i < output.weights.length; i++) {\n      const error = output.weights[i] - target[i];\n      // set gradients into log probabilities\n      errorSum += Math.abs(error);\n      // write gradients into log probabilities\n      output.deltas[i] = error;\n    }\n    return errorSum;\n  }\n\n  predictTargetIndex(input, target) {\n    const output = this.runIndex(input);\n    // set gradients into log probabilities\n    const logProbabilities = output; // interpret output as log probabilities\n    let probabilities = softmax(output); // compute the softmax probabilities\n\n    // write gradients into log probabilities\n    logProbabilities.deltas = probabilities.weights.slice(0);\n    logProbabilities.deltas[target] -= 1;\n\n    // accumulate base 2 log prob and do smoothing\n    return -Math.log2(probabilities.weights[target]);\n  }\n}\n\nmodule.exports = Equation;\n","const { randomFloat } = require('../../utilities/random');\n\n/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nmodule.exports = function sampleI(m) {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  const r = randomFloat(0, 1);\n  let x = 0;\n  let i = 0;\n  const w = m.weights;\n\n  while (true) {\n    x += w[i];\n    if (x > r) {\n      return i;\n    }\n    i++;\n  }\n};\n","/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nmodule.exports = function maxI(m) {\n  // argmax of array w\n  const { weights } = m;\n  let maxv = weights[0];\n  let maxix = 0;\n  for (let i = 1; i < weights.length; i++) {\n    const v = weights[i];\n    if (v < maxv) continue;\n\n    maxix = i;\n    maxv = v;\n  }\n  return maxix;\n};\n","/**\n *\n * @param {String[]|Number[]} values\n * @param maxThreshold\n * @constructor\n */\nclass DataFormatter {\n  constructor(values, maxThreshold = 0) {\n    if (values === undefined) return;\n\n    this.values = values;\n    // go over all characters and keep track of all unique ones seen\n    // count up all characters\n    this.indexTable = {};\n    this.characterTable = {};\n    this.characters = [];\n    this.specialIndexes = [];\n    this.buildCharactersFromIterable(values);\n    this.buildTables(maxThreshold);\n  }\n\n  buildCharactersFromIterable(values) {\n    const tempCharactersTable = {};\n    for (\n      let dataFormatterIndex = 0, dataFormatterLength = values.length;\n      dataFormatterIndex < dataFormatterLength;\n      dataFormatterIndex++\n    ) {\n      const characters = values[dataFormatterIndex];\n\n      if (characters.hasOwnProperty('length')) {\n        for (\n          let characterIndex = 0, charactersLength = characters.length;\n          characterIndex < charactersLength;\n          characterIndex++\n        ) {\n          const character = characters[characterIndex];\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else {\n        const character = values[dataFormatterIndex];\n        if (tempCharactersTable.hasOwnProperty(character)) continue;\n        tempCharactersTable[dataFormatterIndex] = true;\n        this.characters.push(character);\n      }\n    }\n  }\n\n  buildTables(maxThreshold) {\n    // filter by count threshold and create pointers\n    const charactersLength = this.characters.length;\n    for (\n      let characterIndex = 0;\n      characterIndex < charactersLength;\n      characterIndex++\n    ) {\n      const character = this.characters[characterIndex];\n      if (characterIndex >= maxThreshold) {\n        // add character to dataFormatter\n        this.indexTable[character] = characterIndex;\n        this.characterTable[characterIndex] = character;\n      }\n    }\n  }\n\n  toIndexes(value, maxThreshold = 0) {\n    const result = [];\n    const { indexTable } = this;\n\n    for (let i = 0, max = value.length; i < max; i++) {\n      const character = value[i];\n      let index = indexTable[character];\n      if (index === undefined) {\n        if (indexTable['unrecognized']) {\n          index = indexTable['unrecognized'];\n        } else {\n          throw new Error(`unrecognized character \"${ character }\"`);\n        }\n      }\n      if (index < maxThreshold) continue;\n      result.push(index);\n    }\n    return result;\n  }\n\n  toIndexesInputOutput(value1, value2 = null, maxThreshold = 0) {\n    let result = null;\n    if (typeof value1 === 'string') {\n      result = this.toIndexes(\n        value1.split('').concat(['stop-input', 'start-output']),\n        maxThreshold\n      );\n    } else if (typeof value1 === 'number') {\n      result = this.toIndexes(\n        value1.toString().split('').concat(['stop-input', 'start-output']),\n        maxThreshold\n      );\n    } else {\n      result = this.toIndexes(\n        value1.concat(['stop-input', 'start-output']),\n        maxThreshold\n      );\n    }\n\n    if (value2 === null) return result;\n\n    if (typeof value2 === 'string') {\n      return result.concat(this.toIndexes(value2.split(''), maxThreshold));\n    } else {\n      return result.concat(this.toIndexes(value2, maxThreshold));\n    }\n  }\n\n  toCharacters(indices, maxThreshold = 0) {\n    const result = [];\n    const { indexTable, characterTable } = this;\n\n    for (let i = 0, max = indices.length; i < max; i++) {\n      let index = indices[i];\n      if (index < maxThreshold) continue;\n      let character = characterTable[index];\n      if (character === undefined) {\n        if (indexTable['unrecognized']) {\n          character = characterTable[indexTable['unrecognized']];\n        } else {\n          throw new Error(`unrecognized index \"${ index }\"`);\n        }\n      } else if (character !== null) {\n        result.push(character);\n      }\n    }\n\n    return result;\n  }\n\n  toString(indices, maxThreshold) {\n    return this.toCharacters(indices, maxThreshold).join('');\n  }\n\n  addInputOutput() {\n    this.addSpecial('stop-input');\n    this.addSpecial('start-output');\n  }\n\n  addUnrecognized() {\n    this.addSpecial('unrecognized');\n  }\n\n  static fromAllPrintable(maxThreshold, values = ['\\n']) {\n    for (let i = 32; i <= 126; i++) {\n      values.push(String.fromCharCode(i));\n    }\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromAllPrintableInputOutput(maxThreshold, values = ['\\n']) {\n    const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromStringInputOutput(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string));\n    const dataFormatter = new DataFormatter(values, maxThreshold);\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromArrayInputOutput(array, maxThreshold) {\n    const dataFormatter = new DataFormatter(\n      array.filter((v, i, a) => a.indexOf(v) === i),\n      maxThreshold\n    );\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromString(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string));\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromJSON(json) {\n    const dataFormatter = new DataFormatter();\n    dataFormatter.indexTable = json.indexTable;\n    dataFormatter.characterTable = json.characterTable;\n    dataFormatter.values = json.values;\n    dataFormatter.characters = json.characters;\n    dataFormatter.specialIndexes = json.specialIndexes;\n    return dataFormatter;\n  }\n\n  addSpecial(special, character = null) {\n    let specialIndex = this.indexTable[special] = this.characters.length;\n    this.characterTable[specialIndex] = character;\n    this.specialIndexes.push(this.characters.length);\n    this.characters.push(special);\n  }\n\n  countSpecial(output) {\n    let sum = 0;\n    for (let i = 0; i < this.specialIndexes; i++) {\n      let index = -1;\n      while (index = output.indexOf(this.specialIndexes[i], index) > -1) {\n        sum++;\n      }\n    }\n    return sum;\n  }\n\n  toFunctionString() {\n    return `\nvar characterTable = ${ JSON.stringify(this.characterTable) };\nvar indexTable = ${ JSON.stringify(this.indexTable) };\nvar characters = ${ JSON.stringify(this.characters) };\nvar dataFormatter = {\n  ${ this.toIndexes.toString() },\n  ${ this.toIndexesInputOutput.toString() },\n  ${ this.toCharacters.toString() }\n};`;\n  }\n}\n\n/**\n *\n * @param {*[]} data\n * @returns {Number[]}\n */\nfunction defaultRNNFormatter(data) {\n  if (\n    typeof data[0] !== 'string'\n    && !Array.isArray(data[0])\n    && (\n      !data[0].hasOwnProperty('input')\n      || !data[0].hasOwnProperty('output')\n    )\n  ) {\n    return data;\n  }\n  let values = [];\n  const result = [];\n  if (typeof data[0] === 'string' || typeof data[0] === 'number' || Array.isArray(data[0])) {\n    if (!this.dataFormatter) {\n      for (let i = 0; i < data.length; i++) {\n        values.push(validateAndCast(data[i]));\n      }\n      this.dataFormatter = new DataFormatter(values);\n      this.dataFormatter.addUnrecognized();\n    }\n    for (let i = 0, max = data.length; i < max; i++) {\n      result.push(this.formatDataIn(data[i]));\n    }\n  } else if (data[0].input && data[0].output) {\n    if (!this.dataFormatter) {\n      for (let i = 0; i < data.length; i++) {\n        const datum = data[i];\n        values.push(validateAndCast(datum.input), validateAndCast(datum.output));\n      }\n      this.dataFormatter = DataFormatter.fromArrayInputOutput(values);\n      this.dataFormatter.addUnrecognized();\n    }\n    for (let i = 0, max = data.length; i < max; i++) {\n      result.push(this.formatDataIn(validateAndCast(data[i].input), validateAndCast(data[i].output)));\n    }\n  } else {\n    throw new Error('unrecognized data');\n  }\n  return result;\n\n  function validateAndCast(value) {\n    if (typeof value === 'string') return value;\n    if (typeof value === 'number') return value.toString();\n    if (typeof value[0] === 'string') return value;\n    if (typeof value[0] === 'number') {\n      return value.map(value => value.toString());\n    }\n    throw new Error('unrecognized value, expected string[], string, number[], or number');\n  }\n}\n\nmodule.exports = { DataFormatter, defaultRNNFormatter };\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst Equation = require('./matrix/equation');\nconst sampleI = require('./matrix/sample-i');\nconst maxI = require('./matrix/max-i');\nconst softmax = require('./matrix/softmax');\nconst copy = require('./matrix/copy');\nconst { randomFloat } = require('../utilities/random');\nconst zeros = require('../utilities/zeros');\nconst {\n  DataFormatter,\n  defaultRNNFormatter,\n} = require('../utilities/data-formatter');\nconst NeuralNetwork = require('../neural-network');\n\nclass RNN {\n  constructor(options = {}) {\n    const { defaults } = this.constructor;\n\n    Object.assign(this, defaults, options);\n    this.trainOpts = {};\n    this.updateTrainingOptions({\n      ...this.constructor.trainDefaults,\n      ...options,\n    });\n\n    this.stepCache = {};\n    this.runs = 0;\n    this.ratioClipped = null;\n    this.model = null;\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  initialize() {\n    this.model = {\n      input: null,\n      hiddenLayers: [],\n      output: null,\n      equations: [],\n      allMatrices: [],\n      equationConnections: [],\n      outputConnector: null,\n    };\n\n    if (this.dataFormatter) {\n      this.inputSize = this.inputRange = this.outputSize = this.dataFormatter.characters.length;\n    }\n    this.mapModel();\n  }\n\n  createHiddenLayers() {\n    // 0 is end, so add 1 to offset\n    this.model.hiddenLayers.push(\n      this.constructor.getModel(this.hiddenLayers[0], this.inputSize)\n    );\n    let prevSize = this.hiddenLayers[0];\n\n    for (let d = 1; d < this.hiddenLayers.length; d++) {\n      // loop over depths\n      const hiddenSize = this.hiddenLayers[d];\n      this.model.hiddenLayers.push(\n        this.constructor.getModel(hiddenSize, prevSize)\n      );\n      prevSize = hiddenSize;\n    }\n  }\n\n  /**\n   *\n   * @param {Number} hiddenSize\n   * @param {Number} prevSize\n   * @returns {object}\n   */\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // wxh\n      weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      // whh\n      transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      // bhh\n      bias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const relu = equation.relu.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n\n    return relu(\n      add(\n        add(\n          multiply(hiddenLayer.weight, inputMatrix),\n          multiply(hiddenLayer.transition, previousResult)\n        ),\n        hiddenLayer.bias\n      )\n    );\n  }\n\n  createInputMatrix() {\n    // 0 is end, so add 1 to offset\n    this.model.input = new RandomMatrix(\n      this.inputRange + 1,\n      this.inputSize,\n      0.08\n    );\n  }\n\n  createOutputMatrix() {\n    const { model } = this;\n    const { outputSize } = this;\n    const lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    // 0 is end, so add 1 to offset\n    // whd\n    model.outputConnector = new RandomMatrix(\n      outputSize + 1,\n      lastHiddenSize,\n      0.08\n    );\n    // 0 is end, so add 1 to offset\n    // bd\n    model.output = new Matrix(outputSize + 1, 1);\n  }\n\n  bindEquation() {\n    const { model } = this;\n    const equation = new Equation();\n    const outputs = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? model.equationConnections[model.equationConnections.length - 1]\n        : this.initialLayerInputs;\n    // 0 index\n    let output = this.constructor.getEquation(\n      equation,\n      equation.inputMatrixToRow(model.input),\n      equationConnection[0],\n      model.hiddenLayers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = this.hiddenLayers.length; i < max; i++) {\n      output = this.constructor.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        model.hiddenLayers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(\n      equation.multiply(model.outputConnector, output),\n      model.output\n    );\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    const { model } = this;\n    const { hiddenLayers } = model;\n    const { allMatrices } = model;\n    this.initialLayerInputs = this.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n\n    this.createInputMatrix();\n    if (!model.input) throw new Error('net.model.input not set');\n    allMatrices.push(model.input);\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      const hiddenMatrix = hiddenLayers[i];\n      for (const property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector)\n      throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  /**\n   *\n   * @param {Number[]|string[]|string} input\n   * @param {boolean} [logErrorRate]\n   * @returns {number}\n   */\n  trainPattern(input, logErrorRate) {\n    const error = this.trainInput(input);\n    this.backpropagate(input);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n  }\n\n  /**\n   *\n   * @param {Number[]} input\n   * @returns {number}\n   */\n  trainInput(input) {\n    this.runs++;\n    const { model } = this;\n    const max = input.length;\n    let log2ppl = 0;\n    let equation;\n    while (model.equations.length <= input.length + 1) {\n      // last is zero\n      this.bindEquation();\n    }\n    for (\n      let inputIndex = -1, inputMax = input.length;\n      inputIndex < inputMax;\n      inputIndex++\n    ) {\n      // start and end tokens are zeros\n      const equationIndex = inputIndex + 1;\n      equation = model.equations[equationIndex];\n\n      const source = inputIndex === -1 ? 0 : input[inputIndex] + 1; // first step: start with START token\n      const target = inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1; // last step: end with END token\n      log2ppl += equation.predictTargetIndex(source, target);\n    }\n    return Math.pow(2, log2ppl / (max - 1)) / 100;\n  }\n\n  /**\n   * @param {Number[]} input\n   */\n  backpropagate(input) {\n    let i = input.length;\n    const { model } = this;\n    const { equations } = model;\n    while (i > 0) {\n      equations[i].backpropagateIndex(input[i - 1] + 1);\n      i--;\n    }\n    equations[0].backpropagateIndex(0);\n  }\n\n  adjustWeights() {\n    const {\n      regc,\n      clipval,\n      model,\n      decayRate,\n      stepCache,\n      smoothEps,\n      trainOpts,\n    } = this;\n    const { learningRate } = trainOpts;\n    const { allMatrices } = model;\n    let numClipped = 0;\n    let numTot = 0;\n    for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n      const matrix = allMatrices[matrixIndex];\n      const { weights, deltas } = matrix;\n      if (!(matrixIndex in stepCache)) {\n        stepCache[matrixIndex] = zeros(matrix.rows * matrix.columns);\n      }\n      const cache = stepCache[matrixIndex];\n      for (let i = 0; i < weights.length; i++) {\n        let r = deltas[i];\n        const w = weights[i];\n        // rmsprop adaptive learning rate\n        cache[i] = cache[i] * decayRate + (1 - decayRate) * r * r;\n        // gradient clip\n        if (r > clipval) {\n          r = clipval;\n          numClipped++;\n        }\n        if (r < -clipval) {\n          r = -clipval;\n          numClipped++;\n        }\n        numTot++;\n        // update (and regularize)\n        weights[i] =\n          w + (-learningRate * r) / Math.sqrt(cache[i] + smoothEps) - regc * w;\n      }\n    }\n    this.ratioClipped = numClipped / numTot;\n  }\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable() {\n    if (this.model.equations.length === 0) {\n      console.error(`No equations bound, did you run train()?`);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   *\n   * @param {Number[]|*} [rawInput]\n   * @param {Boolean} [isSampleI]\n   * @param {Number} temperature\n   * @returns {*}\n   */\n  run(rawInput = [], isSampleI = false, temperature = 1) {\n    const maxPredictionLength =\n      this.maxPredictionLength +\n      rawInput.length +\n      (this.dataFormatter ? this.dataFormatter.specialIndexes.length : 0);\n    if (!this.isRunnable) return null;\n    const input = this.formatDataIn(rawInput);\n    const { model } = this;\n    const output = [];\n    let i = 0;\n    while (true) {\n      const previousIndex =\n        i === 0 ? 0 : i < input.length ? input[i - 1] + 1 : output[i - 1];\n      while (model.equations.length <= i) {\n        this.bindEquation();\n      }\n      const equation = model.equations[i];\n      // sample predicted letter\n      const outputMatrix = equation.runIndex(previousIndex);\n      const logProbabilities = new Matrix(\n        model.output.rows,\n        model.output.columns\n      );\n      copy(logProbabilities, outputMatrix);\n      if (temperature !== 1 && isSampleI) {\n        /**\n         * scale log probabilities by temperature and re-normalize\n         * if temperature is high, logProbabilities will go towards zero\n         * and the softmax outputs will be more diffuse. if temperature is\n         * very low, the softmax outputs will be more peaky\n         */\n        for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\n          logProbabilities.weights[j] /= temperature;\n        }\n      }\n\n      const probs = softmax(logProbabilities);\n      const nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n      i++;\n      if (nextIndex === 0) {\n        // END token predicted, break out\n        break;\n      }\n      if (i >= maxPredictionLength) {\n        // something is wrong\n        break;\n      }\n\n      output.push(nextIndex);\n    }\n\n    /**\n     * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\n     * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\n     * locks in on a value.\n     * Kind of like this, values are from input:\n     * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\n     * 2 -> 2 (oh how interesting, I've narrowed down values...)\n     * 1 -> 9 (oh how interesting, I've now know what the values are...)\n     * then the output looks like: [4, 2, 9,...]\n     * so we then remove the erroneous data to get our true output\n     */\n    return this.formatDataOut(\n      input,\n      output.slice(input.length).map((value) => value - 1)\n    );\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initilaized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (!this.model) {\n      this.initialize();\n    }\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options) {\n    Object.keys(this.constructor.trainDefaults).forEach(\n      (p) =>\n        (this.trainOpts[p] = options.hasOwnProperty(p)\n          ? options[p]\n          : this.trainOpts[p])\n    );\n    this.validateTrainingOptions(this.trainOpts);\n    this.setLogMethod(options.log || this.trainOpts.log);\n    this.activation = options.activation || this.activation;\n  }\n\n  validateTrainingOptions(options) {\n    NeuralNetwork.prototype.validateTrainingOptions.call(this, options);\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  setLogMethod(log) {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return {object} { data, status, endTime }\n   */\n  prepTraining(data, options) {\n    this.updateTrainingOptions(options);\n    data = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(data);\n\n    return {\n      data,\n      status,\n      endTime,\n    };\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    this.trainOpts = options = {\n      ...this.constructor.trainDefaults,\n      ...options,\n    };\n    const { iterations } = options;\n    const { errorThresh } = options;\n    const log = options.log === true ? console.log : options.log;\n    const { logPeriod } = options;\n    const { callback } = options;\n    const { callbackPeriod } = options;\n    let error = Infinity;\n    let i;\n\n    if (this.hasOwnProperty('setupData')) {\n      data = this.setupData(data);\n    }\n\n    this.verifyIsInitialized();\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        const err = this.trainPattern(data[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) {\n        throw new Error(\n          'Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. '\n        );\n      }\n      if (log && i % logPeriod === 0) {\n        log(`iterations: ${i}, training error: ${error}`);\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  addFormat() {\n    throw new Error('not yet implemented');\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const { defaults } = this.constructor;\n    if (!this.model) {\n      this.initialize();\n    }\n    const { model } = this;\n    const options = {};\n    for (const p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options,\n      input: model.input.toJSON(),\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        const layers = {};\n        for (const p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n    };\n  }\n\n  fromJSON(json) {\n    const { defaults } = this.constructor;\n    const { options } = json;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const input = Matrix.fromJSON(json.input);\n    allMatrices.push(input);\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      const layers = {};\n      for (const p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    if (options.dataFormatter) {\n      this.dataFormatter = DataFormatter.fromJSON(options.dataFormatter);\n    }\n\n    this.model = {\n      input,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n    this.bindEquation();\n  }\n\n  /**\n   * @param {Function} [cb]\n   * @returns {Function}\n   */\n  toFunction(cb) {\n    const { model } = this;\n    const { equations } = this.model;\n    const equation = equations[1];\n    const { states } = equation;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m);\n          if (j > -1 && (m === state.left || m === state.right)) {\n            return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n          }\n          return `new Matrix(${m.rows}, ${m.columns})`;\n        }\n\n        if (m === state.product) return `states[${i}].product`;\n        if (m === state.right) return `states[${i}].right`;\n        if (m === state.left) return `states[${i}].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const { states } = equations[0];\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n\n      if (m === model.input) return `json.input`;\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i];\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${i}].${p}`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n      return fnString\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n        return `-${value.toLowerCase()}`;\n      })}.js`;\n    }\n\n    const statesRaw = [];\n    const usedFunctionNames = {};\n    const innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i];\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${matrixToString(state.left, i)},\n      right: ${matrixToString(state.right, i)},\n      product: ${matrixToString(state.product, i)}\n    }`);\n\n      const fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${fnName}': //compiled from ${fileName(fnName)}\n          ${toInner(state.forwardFn.toString())}\n          break;`\n        );\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  var json = ${jsonString};\n  ${\n    this.dataFormatter\n      ? `${this.dataFormatter.toFunctionString()};\n  Object.assign(dataFormatter, json.options.dataFormatter);`\n      : ''\n  }\n  ${\n    this.dataFormatter && typeof this.formatDataIn === 'function'\n      ? `const formatDataIn = function (input, output) { ${toInner(\n          this.formatDataIn.toString()\n        )} }.bind({ dataFormatter });`\n      : ''\n  }\n  ${\n    this.dataFormatter !== null && typeof this.formatDataOut === 'function'\n      ? `const formatDataOut = function formatDataOut(input, output) { ${toInner(\n          this.formatDataOut.toString()\n        )} }.bind({ dataFormatter });`\n      : ''\n  }\n  var input = ${\n    this.dataFormatter && typeof this.formatDataIn === 'function'\n      ? 'formatDataIn(rawInput)'\n      : 'rawInput'\n  };\n  var maxPredictionLength = input.length + ${this.maxPredictionLength};\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      var state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n\n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  ${\n    this.dataFormatter && typeof this.formatDataOut === 'function'\n      ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))'\n      : 'return output.slice(input.length).map(function(value) { return value - 1; })'\n  };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${zeros.toString()}\n  ${softmax.toString()}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n    return new Function(\n      'rawInput',\n      'isSampleI',\n      'temperature',\n      cb ? cb(src) : src\n    );\n  }\n}\n\nRNN.defaults = {\n  inputSize: 20,\n  inputRange: 20,\n  hiddenLayers: [20, 20],\n  outputSize: 20,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5,\n  maxPredictionLength: 100,\n  /**\n   *\n   * @param {*[]} data\n   * @returns {Number[]}\n   */\n  setupData: defaultRNNFormatter,\n  /**\n   *\n   * @param {*[]} input\n   * @param {*[]} output\n   * @returns {Number[]}\n   */\n  formatDataIn(input, output = null) {\n    if (this.dataFormatter) {\n      if (this.dataFormatter.indexTable.hasOwnProperty('stop-input')) {\n        return this.dataFormatter.toIndexesInputOutput(input, output);\n      }\n      return this.dataFormatter.toIndexes(input);\n    }\n    return input;\n  },\n  /**\n   *\n   * @param {Number[]} input\n   * @param {Number[]} output\n   * @returns {*}\n   */\n  formatDataOut(input, output) {\n    if (this.dataFormatter) {\n      return this.dataFormatter.toCharacters(output).join('');\n    }\n    return output;\n  },\n  dataFormatter: null,\n};\n\nRNN.trainDefaults = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.01,\n  callback: null,\n  callbackPeriod: 10,\n};\n\nmodule.exports = RNN;\n","function ArrayLookupTable(data, prop) {\n  this.length = 0;\n  this.prop = prop;\n  const table = this.table = {};\n  for (let i = 0; i < data.length; i++) {\n    const datum = data[i];\n    const input = datum[prop];\n    for (let j = 0; j < input.length; j++) {\n      for (let p in input[j]) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  }\n}\n\nmodule.exports = ArrayLookupTable;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst Equation = require('./matrix/equation');\nconst RNN = require('./rnn');\nconst zeros = require('../utilities/zeros');\nconst softmax = require('./matrix/softmax');\nconst { randomFloat } = require('../utilities/random');\nconst sampleI = require('./matrix/sample-i');\nconst maxI = require('./matrix/max-i');\nconst lookup = require('../lookup');\nconst LookupTable = require('../utilities/lookup-table');\nconst ArrayLookupTable = require('../utilities/array-lookup-table');\nconst {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array,\n} = require('../utilities/cast');\n\nclass RNNTimeStep extends RNN {\n  // eslint-disable-next-line\n  constructor(options) {\n    super(options);\n  }\n\n  createInputMatrix() {}\n\n  createOutputMatrix() {\n    const { model } = this;\n    const { outputSize } = this;\n    const lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    // whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    // bd\n    model.output = new RandomMatrix(outputSize, 1, 0.08);\n  }\n\n  bindEquation() {\n    const { model } = this;\n    const { hiddenLayers } = this;\n    const layers = model.hiddenLayers;\n    const equation = new Equation();\n    const outputs = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? model.equationConnections[model.equationConnections.length - 1]\n        : this.initialLayerInputs;\n    // 0 index\n    let output = this.constructor.getEquation(\n      equation,\n      equation.input(new Matrix(this.inputSize, 1)),\n      equationConnection[0],\n      layers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.constructor.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        layers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(\n      equation.multiply(model.outputConnector, output),\n      model.output\n    );\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    const { model } = this;\n    const { hiddenLayers } = model;\n    const { allMatrices } = model;\n    this.initialLayerInputs = this.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      const hiddenMatrix = hiddenLayers[i];\n      for (const property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector)\n      throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  backpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n  /**\n   *\n   * @param {number[]|number[][]|object|object[][]} [rawInput]\n   * @returns {number[]|number|object|object[]|object[][]}\n   */\n  run(rawInput) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.run = this.runObject;\n        return this.runObject(rawInput);\n      }\n      this.run = this.runNumbers;\n      return this.runNumbers(rawInput);\n    }\n    if (this.outputLookup) {\n      this.run = this.runObjects;\n      return this.runObjects(rawInput);\n    }\n    this.run = this.runArrays;\n    return this.runArrays(rawInput);\n  }\n\n  forecast(input, count) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.forecast = this.runObject;\n        return this.runObject(input);\n      }\n      this.forecast = this.forecastNumbers;\n      return this.forecastNumbers(input, count);\n    }\n    if (this.outputLookup) {\n      this.forecast = this.forecastObjects;\n      return this.forecastObjects(input, count);\n    }\n    this.forecast = this.forecastArrays;\n    return this.forecastArrays(input, count);\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    this.trainOpts = options = {\n      ...this.constructor.trainDefaults,\n      ...options,\n    };\n    const { iterations } = options;\n    const { errorThresh } = options;\n    const log = options.log === true ? console.log : options.log;\n    const { logPeriod } = options;\n    const { callback } = options;\n    const { callbackPeriod } = options;\n\n    if (this.inputSize === 1 || !this.inputSize) {\n      this.setSize(data);\n    }\n\n    data = this.formatData(data);\n    let error = Infinity;\n    let i;\n\n    this.verifyIsInitialized(data);\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        const err = this.trainPattern(data[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error))\n        throw new Error(\n          'Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. '\n        );\n      if (log && i % logPeriod === 0) {\n        log(`iterations: ${i}, training error: ${error}`);\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(data) {\n    if (data[0].input) {\n      this.trainInput = this.trainInputOutput;\n    } else if (data[0].length > 0) {\n      if (data[0][0].length > 0) {\n        this.trainInput = this.trainArrays;\n      } else if (this.inputSize > 1) {\n        this.trainInput = this.trainArrays;\n      } else {\n        this.trainInput = this.trainNumbers;\n      }\n    }\n\n    if (!this.model) {\n      this.initialize();\n    }\n  }\n\n  setSize(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,array,number':\n      case 'array,object,number':\n      case 'array,datum,array,number':\n      case 'array,datum,object,number':\n        // probably 1\n        break;\n      case 'array,array,array,number':\n        this.inputSize = this.outputSize = data[0][0].length;\n        break;\n      case 'array,array,object,number':\n        this.inputSize = this.outputSize = Object.keys(\n          lookup.toTable2D(data)\n        ).length;\n        break;\n      case 'array,datum,array,array,number':\n        this.inputSize = this.outputSize = data[0].input[0].length;\n        break;\n      case 'array,datum,array,object,number':\n        this.inputSize = Object.keys(lookup.toInputTable2D(data)).length;\n        this.outputSize = Object.keys(lookup.toOutputTable2D(data)).length;\n        break;\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  trainNumbers(input) {\n    const { model } = this;\n    const { equations } = model;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget([input[i]], [input[i + 1]]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runNumbers(input) {\n    if (!this.isRunnable) return null;\n    const { model } = this;\n    const { equations } = model;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput(new Float32Array([input[i]]));\n    }\n    this.end();\n    return lastOutput.weights[0];\n  }\n\n  forecastNumbers(input, count) {\n    if (!this.isRunnable) return null;\n    const { model } = this;\n    const { equations } = model;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput([input[i]]);\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return result;\n  }\n\n  runObject(input) {\n    if (this.inputLookup === this.outputLookup) {\n      const inputArray = lookup.toArrayShort(this.inputLookup, input);\n      return lookup.toObjectPartial(\n        this.outputLookup,\n        this.forecastNumbers(\n          inputArray,\n          this.outputLookupLength - inputArray.length\n        ),\n        inputArray.length\n      );\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.forecastNumbers(\n        lookup.toArray(this.inputLookup, input, this.inputLookupLength),\n        this.outputLookupLength\n      )\n    );\n  }\n\n  runObjects(input) {\n    input = input.map((value) =>\n      lookup.toArray(this.inputLookup, value, this.inputLookupLength)\n    );\n    return this.forecastArrays(input, 1).map((value) =>\n      lookup.toObject(this.outputLookup, value)\n    )[0];\n  }\n\n  forecastObjects(input, count) {\n    input = input.map((value) =>\n      lookup.toArray(this.inputLookup, value, this.inputLookupLength)\n    );\n    return this.forecastArrays(input, count).map((value) =>\n      lookup.toObject(this.outputLookup, value)\n    );\n  }\n\n  trainInputOutput(object) {\n    const { model } = this;\n    const { input } = object;\n    const { output } = object;\n    const totalSize = input.length + output.length;\n    const { equations } = model;\n    while (equations.length < totalSize) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    let equationIndex = 0;\n    for (\n      let inputIndex = 0, max = input.length - 1;\n      inputIndex < max;\n      inputIndex++\n    ) {\n      errorSum += equations[equationIndex++].predictTarget(\n        input[inputIndex],\n        input[inputIndex + 1]\n      );\n    }\n    errorSum += equations[equationIndex++].predictTarget(\n      input[input.length - 1],\n      output[0]\n    );\n    for (\n      let outputIndex = 0, max = output.length - 1;\n      outputIndex < max;\n      outputIndex++\n    ) {\n      errorSum += equations[equationIndex++].predictTarget(\n        output[outputIndex],\n        output[outputIndex + 1]\n      );\n    }\n    this.end();\n    return errorSum / totalSize;\n  }\n\n  trainArrays(input) {\n    const { model } = this;\n    const { equations } = model;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runArrays(input) {\n    if (!this.isRunnable) return null;\n    const { model } = this;\n    const { equations } = model;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    if (this.inputLookup) {\n      input = lookup.toArrays(this.inputLookup, input, this.inputLookupLength);\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      const outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    if (this.outputLookup) {\n      return lookup.toObject(this.outputLookup, lastOutput);\n    }\n    return lastOutput;\n  }\n\n  forecastArrays(input, count) {\n    if (!this.isRunnable) return null;\n    const { model } = this;\n    const { equations } = model;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    const result = [lastOutput.weights];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights.slice(0));\n    }\n    this.end();\n    return result;\n  }\n\n  end() {\n    this.model.equations[this.model.equations.length - 1].runInput(\n      new Float32Array(this.outputSize)\n    );\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    const result = [];\n    switch (dataShape) {\n      case 'array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from([data[i]]));\n        }\n        return [result];\n      }\n      case 'array,array,number': {\n        if (this.inputSize === 1 && this.outputSize === 1) {\n          for (let i = 0; i < data.length; i++) {\n            result.push(arrayToFloat32Arrays(data[i]));\n          }\n          return result;\n        }\n        if (this.inputSize !== data[0].length) {\n          throw new Error('inputSize must match data input size');\n        }\n        if (this.outputSize !== data[0].length) {\n          throw new Error('outputSize must match data input size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from(data[i]));\n        }\n        return [result];\n      }\n      case 'array,object,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        if (!this.inputLookup) {\n          const lookupTable = new LookupTable(data);\n          this.inputLookup = this.outputLookup = lookupTable.table;\n          this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(objectToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      case 'array,datum,array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: arrayToFloat32Arrays(datum.input),\n            output: arrayToFloat32Arrays(datum.output),\n          });\n        }\n        return result;\n      }\n      case 'array,datum,object,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        if (this.outputSize !== 1) {\n          throw new Error('outputSize must be 1 for this data size');\n        }\n        if (!this.inputLookup) {\n          const inputLookup = new LookupTable(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n        if (!this.outputLookup) {\n          const outputLookup = new LookupTable(data, 'output');\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectToFloat32Arrays(datum.input),\n            output: objectToFloat32Arrays(datum.output),\n          });\n        }\n        return result;\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < data.length; i++) {\n          result.push(arraysToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      case 'array,array,object,number': {\n        if (!this.inputLookup) {\n          const lookupTable = new LookupTable(data);\n          this.inputLookup = this.outputLookup = lookupTable.table;\n          this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const array = [];\n          for (let j = 0; j < data[i].length; j++) {\n            array.push(\n              objectToFloat32Array(\n                data[i][j],\n                this.inputLookup,\n                this.inputLookupLength\n              )\n            );\n          }\n          result.push(array);\n        }\n        return result;\n      }\n      case 'array,datum,array,array,number': {\n        if (this.inputSize === 1 && this.outputSize === 1) {\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: Float32Array.from(datum.input),\n              output: Float32Array.from(datum.output),\n            });\n          }\n        } else {\n          if (this.inputSize !== data[0].input[0].length) {\n            throw new Error('inputSize must match data input size');\n          }\n          if (this.outputSize !== data[0].output[0].length) {\n            throw new Error('outputSize must match data output size');\n          }\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: arraysToFloat32Arrays(datum.input),\n              output: arraysToFloat32Arrays(datum.output),\n            });\n          }\n        }\n        return result;\n      }\n      case 'array,datum,array,object,number': {\n        if (!this.inputLookup) {\n          const inputLookup = new ArrayLookupTable(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n        if (!this.outputLookup) {\n          const outputLookup = new ArrayLookupTable(data, 'output');\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectsToFloat32Arrays(\n              datum.input,\n              this.inputLookup,\n              this.inputLookupLength\n            ),\n            output: objectsToFloat32Arrays(\n              datum.output,\n              this.outputLookup,\n              this.outputLookupLength\n            ),\n          });\n        }\n        return result;\n      }\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(data) {\n    const formattedData = this.formatData(data);\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,array,number': {\n        if (this.inputSize === 1) {\n          for (let i = 0; i < formattedData.length; i++) {\n            const input = formattedData[i];\n            const output = this.run(input.splice(0, input.length - 1));\n            const target = input[input.length - 1][0];\n            const error = target - output;\n            const errorMSE = error * error;\n            errorSum += errorMSE;\n            const errorsAbs = Math.abs(errorMSE);\n            if (errorsAbs > this.trainOpts.errorThresh) {\n              const misclass = data[i];\n              Object.assign(misclass, {\n                value: input,\n                actual: output,\n              });\n              misclasses.push(misclass);\n            }\n          }\n          break;\n        }\n        throw new Error('unknown data shape or configuration');\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.splice(0, input.length - 1));\n          const target = input[input.length - 1];\n          let errors = 0;\n          let errorCount = 0;\n          for (let j = 0; j < output.length; j++) {\n            errorCount++;\n            const error = target[j] - output[j];\n            // mse\n            errors += error * error;\n          }\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output,\n            });\n          }\n        }\n        break;\n      }\n      case 'array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(\n            lookup.toObjectPartial(\n              this.outputLookup,\n              input,\n              0,\n              input.length - 1\n            )\n          );\n          const target = input[input.length - 1];\n          let errors = 0;\n          let p;\n          for (p in output) {\n          }\n          const error = target[i] - output[p];\n          // mse\n          errors += error * error;\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output,\n            });\n          }\n        }\n        break;\n      }\n      case 'array,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.slice(0, input.length - 1));\n          const target = data[i][input.length - 1];\n          let errors = 0;\n          let errorCount = 0;\n          for (const p in output) {\n            const error = target[p] - output[p];\n            // mse\n            errors += error * error;\n            errorCount++;\n          }\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output,\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,number':\n      case 'array,datum,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          let errorCount = 0;\n          for (let j = 0; j < output.length; j++) {\n            const error = datum.output[j][0] - output[j];\n            errors += error * error;\n            errorCount++;\n          }\n\n          errorSum += errors / errorCount;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            Object.assign(misclass, {\n              actual: this.outputLookup\n                ? lookup.toObject(this.outputLookup, output)\n                : output,\n            });\n            misclasses.push(misclass);\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (let k = 0; k < output[j].length; k++) {\n              const error = datum.output[j][k] - output[j][k];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output,\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (const p in output[j]) {\n              const error = data[i].output[j][p] - output[j][p];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output,\n            });\n          }\n        }\n        break;\n      }\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n\n    return {\n      error: errorSum / formattedData.length,\n      misclasses,\n      total: formattedData.length,\n    };\n  }\n\n  addFormat(value) {\n    const dataShape = lookup.dataShape(value).join(',');\n    switch (dataShape) {\n      case 'array,array,number':\n      case 'datum,array,array,number':\n      case 'array,number':\n      case 'datum,array,number':\n        return;\n      case 'datum,object,number': {\n        this.inputLookup = lookup.addKeys(value.input, this.inputLookup);\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        this.outputLookup = lookup.addKeys(value.output, this.outputLookup);\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        }\n        break;\n      }\n      case 'object,number': {\n        this.inputLookup = this.outputLookup = lookup.addKeys(\n          value,\n          this.inputLookup\n        );\n        if (this.inputLookup) {\n          this.inputLookupLength = this.outputLookupLength = Object.keys(\n            this.inputLookup\n          ).length;\n        }\n        break;\n      }\n      case 'array,object,number': {\n        for (let i = 0; i < value.length; i++) {\n          this.inputLookup = this.outputLookup = lookup.addKeys(\n            value[i],\n            this.inputLookup\n          );\n          if (this.inputLookup) {\n            this.inputLookupLength = this.outputLookupLength = Object.keys(\n              this.inputLookup\n            ).length;\n          }\n        }\n        break;\n      }\n      case 'datum,array,object,number': {\n        for (let i = 0; i < value.input.length; i++) {\n          this.inputLookup = lookup.addKeys(value.input[i], this.inputLookup);\n          if (this.inputLookup) {\n            this.inputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        for (let i = 0; i < value.output.length; i++) {\n          this.outputLookup = lookup.addKeys(\n            value.output[i],\n            this.outputLookup\n          );\n          if (this.outputLookup) {\n            this.outputLookupLength = Object.keys(this.outputLookup).length;\n          }\n        }\n        break;\n      }\n\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const { defaults } = this.constructor;\n    if (!this.model) {\n      this.initialize();\n    }\n    const { model } = this;\n    const options = {};\n    for (const p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        const layers = {};\n        for (const p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n      inputLookup: this.inputLookup,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup,\n      outputLookupLength: this.outputLookupLength,\n    };\n  }\n\n  fromJSON(json) {\n    const { defaults } = this.constructor;\n    const { options } = json;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      const layers = {};\n      for (const p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    this.inputLookup = json.inputLookup;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup;\n    this.outputLookupLength = json.outputLookupLength;\n\n    this.model = {\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n    this.bindEquation();\n  }\n\n  /**\n   * @param {Function} [cb]\n   * @returns {Function}\n   */\n  toFunction(cb) {\n    const { model } = this;\n    const { equations } = this.model;\n    const { inputSize } = this;\n    const { inputLookup } = this;\n    const { inputLookupLength } = this;\n    const { outputLookup } = this;\n    const { outputLookupLength } = this;\n    const equation = equations[1];\n    const { states } = equation;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n              }\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n              }\n            case state.product:\n              return `new Matrix(${m.rows}, ${m.columns})`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${i}].product`;\n        if (m === state.right) return `states[${i}].right`;\n        if (m === state.left) return `states[${i}].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const { states } = equations[0];\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i];\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${i}].${p}`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupInput(input) {\n            var table = ${JSON.stringify(inputLookup)};\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n        }\n        return `function lookupInput(input) {\n          var table = ${JSON.stringify(inputLookup)};\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(rawInputs) {\n        var table = ${JSON.stringify(inputLookup)};\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${inputLookupLength});\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupOutputPartial(output, input) {\n            var table = ${JSON.stringify(outputLookup)};\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n        }\n        return `function lookupOutput(output) {\n          var table = ${JSON.stringify(outputLookup)};\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n      }\n      return `function lookupOutput(output) {\n        var table = ${JSON.stringify(outputLookup)};\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n\n      return fnString\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace(\n          'product.weights = input.weights = this.inputValue;',\n          inputLookup && inputSize === 1\n            ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;'\n            : inputSize === 1\n            ? 'product.weights = [input[_i]];'\n            : 'product.weights = input[_i];'\n        )\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n        return `-${value.toLowerCase()}`;\n      })}.js`;\n    }\n\n    const statesRaw = [];\n    const usedFunctionNames = {};\n    const innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i];\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${matrixToString(state.left, i)},\n      right: ${matrixToString(state.right, i)},\n      product: ${matrixToString(state.product, i)}\n    }`);\n\n      const fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${fnName}':${\n            fnName !== 'forwardFn' ? ` //compiled from ${fileName(fnName)}` : ''\n          }\n          ${toInner(state.forwardFn.toString())}\n          break;`\n        );\n      }\n    }\n\n    const forceForecast = this.inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput'};\n  var json = ${jsonString};\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${\n    forceForecast\n      ? inputLookup === outputLookup\n        ? inputLookupLength\n        : `input.length + ${outputLookupLength - 1}`\n      : 'input.length'\n  };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n    ${\n      inputSize === 1 && inputLookup\n        ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }'\n        : 'output = state.product.weights;'\n    }\n  }\n  ${\n    outputLookup\n      ? outputLookup === inputLookup\n        ? 'return lookupOutputPartial(output, input)'\n        : 'return lookupOutput(output)'\n      : inputSize === 1\n      ? 'return output[0]'\n      : 'return output'\n  };\n  ${formatInputData()}\n  ${formatOutputData()}\n\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${zeros.toString()}\n  ${softmax.toString().replace('_2.default', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n    return new Function('rawInput', cb ? cb(src) : src);\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenLayers: [20],\n  outputSize: 1,\n  learningRate: RNN.defaults.learningRate,\n  decayRate: RNN.defaults.decayRate,\n  smoothEps: RNN.defaults.smoothEps,\n  regc: RNN.defaults.regc,\n  clipval: RNN.defaults.clipval,\n};\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults;\n\nmodule.exports = RNNTimeStep;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst RNN = require('./rnn');\n\nclass LSTM extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // gates parameters\n      // wix\n      inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wih\n      inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bi\n      inputBias: new Matrix(hiddenSize, 1),\n      // wfx\n      forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wfh\n      forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bf\n      forgetBias: new Matrix(hiddenSize, 1),\n      // wox\n      outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // woh\n      outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bo\n      outputBias: new Matrix(hiddenSize, 1),\n      // cell write params\n      // wcx\n      cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wch\n      cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellActivationBias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n\n    const inputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.inputMatrix, inputMatrix),\n          multiply(hiddenLayer.inputHidden, previousResult)\n        ),\n        hiddenLayer.inputBias\n      )\n    );\n\n    const forgetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.forgetMatrix, inputMatrix),\n          multiply(hiddenLayer.forgetHidden, previousResult)\n        ),\n        hiddenLayer.forgetBias\n      )\n    );\n\n    // output gate\n    const outputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.outputMatrix, inputMatrix),\n          multiply(hiddenLayer.outputHidden, previousResult)\n        ),\n        hiddenLayer.outputBias\n      )\n    );\n\n    // write operation on cells\n    const cellWrite = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellActivationMatrix, inputMatrix),\n          multiply(hiddenLayer.cellActivationHidden, previousResult)\n        ),\n        hiddenLayer.cellActivationBias\n      )\n    );\n\n    // compute new cell activation\n    const retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\n    const writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\n    const cell = add(retainCell, writeCell); // new cell contents\n\n    // compute hidden state as gated, saturated cell activations\n    return multiplyElement(outputGate, tanh(cell));\n  }\n}\n\nmodule.exports = LSTM;\n","const Matrix = require('./matrix');\nconst LSTM = require('./lstm');\nconst RNNTimeStep = require('./rnn-time-step');\n\nclass LSTMTimeStep extends RNNTimeStep {\n  static getModel(hiddenSize, prevSize) {\n    return LSTM.getModel.call(this, hiddenSize, prevSize);\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return LSTM.getEquation.call(\n      this,\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    );\n  }\n}\n\nmodule.exports = LSTMTimeStep;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst RNN = require('./rnn');\n\nclass GRU extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // update Gate\n      // wzxh\n      updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wzhh\n      updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bz\n      updateGateBias: new Matrix(hiddenSize, 1),\n      // reset Gate\n      // wrxh\n      resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wrhh\n      resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // br\n      resetGateBias: new Matrix(hiddenSize, 1),\n      // cell write parameters\n      // wcxh\n      cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wchh\n      cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellWriteBias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n    const allOnes = equation.allOnes.bind(equation);\n    const cloneNegative = equation.cloneNegative.bind(equation);\n\n    // update gate\n    const updateGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.updateGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.updateGateBias\n      )\n    );\n\n    // reset gate\n    const resetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.resetGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.resetGateBias\n      )\n    );\n\n    // cell\n    const cell = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix),\n          multiply(\n            hiddenLayer.cellWriteHiddenMatrix,\n            multiplyElement(resetGate, previousResult)\n          )\n        ),\n        hiddenLayer.cellWriteBias\n      )\n    );\n\n    // compute hidden state as gated, saturated cell activations\n    // negate updateGate\n    return add(\n      multiplyElement(\n        add(\n          allOnes(updateGate.rows, updateGate.columns),\n          cloneNegative(updateGate)\n        ),\n        cell\n      ),\n      multiplyElement(previousResult, updateGate)\n    );\n  }\n}\n\nmodule.exports = GRU;\n","// import Matrix from './matrix'\nconst GRU = require('./gru');\nconst RNNTimeStep = require('./rnn-time-step');\n\nclass GRUTimeStep extends RNNTimeStep {\n  static getModel(hiddenSize, prevSize) {\n    return GRU.getModel(hiddenSize, prevSize);\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return GRU.getEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    );\n  }\n}\n\nmodule.exports = GRUTimeStep;\n","const NeuralNetwork = require('../neural-network');\nconst RNN = require('../recurrent/rnn');\nconst RNNTimeStep = require('../recurrent/rnn-time-step');\nconst { FeedForward } = require('../feed-forward');\nconst { Recurrent } = require('../recurrent');\nconst { recurrentZeros } = require('../layer/recurrent-zeros');\n\nconst recurrentJSONTypes = [\n  'RNN',\n  'LSTM',\n  'GRU',\n  'RNNTimeStep',\n  'LSTMTimeStep',\n  'GRUTimeStep',\n  'Recurrent'\n];\n\nfunction drawInput({ pixelX, pixelY, radius, inputs, row, line, fontSize, fontClassName }) {\n  let svg = `<rect\n              x=\"${ pixelX / 2 - radius }\"\n              y=\"${ pixelY / 2 + row * pixelY - radius }\"\n              width=\"${ 2 * radius }\"\n              height=\"${ 2 * radius }\"\n              stroke=\"black\"\n              stroke-width=\"1\"\n              fill=\"${ inputs.color }\" \n              class=\"${ inputs.className }\" />\n            <line\n              x1=\"${ pixelX / 4 }\"\n              y1=\"${ pixelY / 2 + row * pixelY }\"\n              x2=\"${ pixelX / 2 - radius }\"\n              y2=\"${ pixelY / 2 + row * pixelY }\"\n              style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n              class=\"${ line.className }\" />`;\n  if (inputs.labels) {\n    svg += `<text\n              x=\"${ pixelX / 8 }\"\n              y=\"${ pixelY / 2 + row * pixelY - 5 }\"\n              fill=\"black\"\n              font-size=\"${ fontSize }\"\n              class=\"${ fontClassName }\">${ inputs.labels[row] }</text>`;\n  }\n  return svg;\n}\n\nfunction drawNeuron({ pixelX, pixelY, row, column, radius, hidden }) {\n  return `<circle\n            cx=\"${ pixelX / 2 + column * pixelX }\"\n            cy=\"${ pixelY / 2 + row * pixelY }\"\n            r=\"${ radius }\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${ hidden.color }\"\n            class=\"${ hidden.className }\" />`\n}\n\nfunction drawOutput({ pixelX, pixelY, row, column, line, outputs, radius }) {\n  return `<circle\n            cx=\"${ pixelX / 2 + column * pixelX }\"\n            cy=\"${ pixelY / 2 + row * pixelY }\"\n            r=\"${ radius }\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${ outputs.color }\"\n            class=\"${ outputs.className }\" />\n          <line\n            x1=\"${ pixelX / 2 + column * pixelX + radius }\"\n            y1=\"${ pixelY / 2 + row * pixelY }\"\n            x2=\"${ pixelX / 2 + column * pixelX + pixelX / 4 }\"\n            y2=\"${ pixelY / 2 + row * pixelY }\"\n            style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n            class=\"${ line.className }\" />`\n}\n\nfunction drawBackwardConnections({ pixelX, pixelY, row, column, radius, lineY, line, previousConnectionIndex }) {\n  return `<line\n            x1=\"${ pixelX / 2 + (column - 1) * pixelX + radius }\"\n            y1=\"${ lineY / 2 + previousConnectionIndex * lineY }\"\n            x2=\"${ pixelX / 2 + column * pixelX - radius }\"\n            y2=\"${ pixelY / 2 + row * pixelY }\"\n            style=\"stroke:${ line.color };stroke-width:${ line.width }\"\n            class=\"${ line.className }\" />`;\n}\n\nfunction neuralNetworkToSVG(options) {\n  const { sizes, height, width } = options;\n  let svg = '';\n  const pixelX = width / sizes.length;\n  for (let column = 0; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      if (column === 0) {\n        svg += drawInput(Object.assign({ pixelX, pixelY, row, column }, options));\n      } else {\n        if (column === sizes.length - 1) {\n          svg += drawOutput(Object.assign({ pixelX, pixelY, row, column }, options));\n        } else {\n          svg += drawNeuron(Object.assign({ pixelX, pixelY, row, column }, options));\n        }\n        const previousSize = sizes[column - 1];\n        const lineY = height / previousSize;\n        for (let previousConnectionIndex = 0; previousConnectionIndex < previousSize; previousConnectionIndex++) {\n          svg += drawBackwardConnections(Object.assign({ pixelX, pixelY, row, column, lineY, previousConnectionIndex }, options));\n        }\n      }\n    }\n  }\n  return svg;\n}\n\nfunction rnnToSVG(options) {\n  const { width, height, recurrentLine, sizes, radius } = options;\n  const pixelX = width / sizes.length;\n  let svg = `<defs>\n              <marker id=\"arrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"8\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                <path d=\"M0,0 L0,6 L9,3 z\" fill=\"${ recurrentLine.color }\" />\n              </marker>\n            </defs>`;\n  svg += neuralNetworkToSVG(options);\n  for (let column = 1; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      svg += drawRecurrentConnections({ pixelX, pixelY, row, column, radius, recurrentLine });\n    }\n  }\n  return svg;\n\n  function drawRecurrentConnections({ pixelX, pixelY, row, column, radius, recurrentLine }) {\n    const moveX = (pixelX / 2 + column * pixelX + radius) + 1;\n    const moveY = pixelY / 2 + row * pixelY;\n    const x = (moveX - (radius * 2)) - 2;\n    const y = moveY;\n    const x1 = x + 100;\n    const y1 = y + 50;\n    const x2 = moveX - 100;\n    const y2 = moveY + 50;\n    return `<path\n              d=\"M ${ moveX } ${ moveY } C ${ x1 } ${ y1 }, ${ x2 } ${ y2 }, ${ x } ${ y }\"\n              stroke=\"${ recurrentLine.color }\"\n              stroke-width=\"${ recurrentLine.width }\"\n              fill=\"transparent\"\n              stroke-linecap=\"round\"\n              marker-end=\"url(#arrow)\"\n              class=\"${ recurrentLine.className }\" />`;\n  }\n}\n\nfunction getFeedForwardLayers(network) {\n  const inputLayer = network.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(network.hiddenLayers[0](inputLayer));\n  for (let i = 1; i < network.hiddenLayers.length; i++) {\n    hiddenLayers.push(network.hiddenLayers[i](hiddenLayers[i - 1]));\n  }\n  const outputLayer = network.outputLayer(hiddenLayers[hiddenLayers.length - 1]);\n  return {\n    inputLayer,\n    hiddenLayers,\n    outputLayer,\n    layerCount: 1 + hiddenLayers.length + 1\n  };\n}\n\nfunction getRecurrentLayers(network) {\n  const inputLayer = network.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(network.hiddenLayers[0](inputLayer, recurrentZeros(), 0));\n  for (let i = 1; i < network.hiddenLayers.length; i++) {\n    hiddenLayers.push(network.hiddenLayers[i](hiddenLayers[i - 1], recurrentZeros(), i));\n  }\n  const outputLayer = network.outputLayer(hiddenLayers[hiddenLayers.length - 1]);\n  return {\n    inputLayer,\n    hiddenLayers,\n    outputLayer,\n    layerCount: 1 + hiddenLayers.length + 1\n  };\n}\n\nfunction wrapSVG(svgBody, width, height) {\n  return `<svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\"\n            width=\"${ width }\"\n            height=\"${ height }\">${ svgBody }</svg>`;\n}\n\nfunction getSizes({sizes, inputSize, outputSize, hiddenLayers }) {\n  return (typeof inputSize === 'number'\n    && Array.isArray(hiddenLayers)\n    && hiddenLayers.every(l => typeof l === 'number')\n    && typeof outputSize === 'number')\n  ? [inputSize]\n      .concat(hiddenLayers)\n      .concat([outputSize])\n  : sizes\n}\n\nfunction toSVG(net, options) {\n  //default values\n  const defaultOptions = {\n    line: {\n      width: 0.5,\n      color: 'black',\n      className: 'connection'\n    },\n    recurrentLine: {\n      width: 1,\n      color: 'red',\n      className: 'recurrence'\n    },\n    inputs: {\n      color:'rgba(0, 128, 0, 0.5)',\n      labels: null,\n      className: 'input'\n    },\n    outputs: {\n      color:'rgba(100, 149, 237, 0.5)',\n      className: 'output'\n    },\n    hidden: {\n      color:'rgba(255, 127, 80, 0.5)',\n      className: 'hidden-neuron'\n    },\n    fontSize: '14px',\n    fontClassName: 'label',\n    radius: 8,\n    width: 400,\n    height: 250\n  };\n\n  const mergedOptions = { ...defaultOptions, ...options };\n  const {\n    width,\n    height,\n    inputs,\n  } = mergedOptions;\n\n  const isRNN = net.hasOwnProperty('model')\n    || net instanceof Recurrent\n    || (net.type && recurrentJSONTypes.indexOf(net.type) !== -1);\n\n  // Get network size array for NeuralNetwork or NeuralNetworkGPU\n  let sizes = null;\n  if (\n    net instanceof NeuralNetwork\n    || net instanceof RNN\n    || net instanceof RNNTimeStep\n  ) {\n    sizes = getSizes(net);\n  }\n  // Get network size array for NeuralNetwork json\n  else if (net.sizes) {\n    sizes = net.sizes;\n  }\n  // get network size for Recurrent\n  else if (net instanceof Recurrent) {\n    const { inputLayer, hiddenLayers, outputLayer } = getRecurrentLayers(net);\n    sizes = [inputLayer.height]\n      .concat(hiddenLayers.map(l => l.height))\n      .concat([outputLayer.height]);\n  }\n  // get network size for FeedForward\n  else if (net instanceof FeedForward) {\n    const { inputLayer, hiddenLayers, outputLayer } = getFeedForwardLayers(net);\n    sizes = [inputLayer.height]\n      .concat(hiddenLayers.map(l => l.height))\n      .concat([outputLayer.height]);\n  }\n  // handle json, recurrent first\n  else if (isRNN) {\n    if (net.options) {\n      sizes = getSizes(net.options);\n    }\n  }\n  // handle json, NeuralNetwork\n  else {\n    sizes = getSizes(net);\n  }\n\n  if (!sizes) throw new Error('sizes not set');\n\n  if (inputs.labels && inputs.labels.length !== sizes[0]) throw new Error('not enough labels for inputs');\n\n  if (isRNN) {\n    return wrapSVG(rnnToSVG({ ...mergedOptions, sizes }), width, height);\n  } else {\n    return wrapSVG(neuralNetworkToSVG({ ...mergedOptions, sizes }), width, height);\n  }\n}\n\nmodule.exports = toSVG;\n","const activation = require('./activation');\nconst CrossValidate = require('./cross-validate');\nconst layer = require('./layer');\nconst layerTypes = require('./layer/types');\nconst likely = require('./likely');\nconst lookup = require('./lookup');\nconst praxis = require('./praxis');\nconst { FeedForward } = require('./feed-forward');\nconst NeuralNetwork = require('./neural-network');\nconst NeuralNetworkGPU = require('./neural-network-gpu');\nconst TrainStream = require('./train-stream');\nconst { Recurrent } = require('./recurrent');\nconst RNNTimeStep = require('./recurrent/rnn-time-step');\nconst LSTMTimeStep = require('./recurrent/lstm-time-step');\nconst GRUTimeStep = require('./recurrent/gru-time-step');\nconst RNN = require('./recurrent/rnn');\nconst LSTM = require('./recurrent/lstm');\nconst GRU = require('./recurrent/gru');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst ones = require('./utilities/ones');\nconst random = require('./utilities/random');\nconst randomWeight = require('./utilities/random-weight');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst DataFormatter = require('./utilities/data-formatter');\nconst zeros = require('./utilities/zeros');\nconst toSVG = require('./utilities/to-svg');\n\nconst brain = {\n  activation,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n    toSVG,\n  },\n};\n\nif (typeof window !== 'undefined') {\n  window.brain = brain //eslint-disable-line\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = brain;\n}\n"]}