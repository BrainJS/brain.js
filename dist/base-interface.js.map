{"version":3,"sources":["../src/base-interface.js"],"names":["BaseInterface","options","Object","assign","constructor","defaults","trainOpts","updateTrainingOptions","trainDefaults","inputLookup","inputLookupLength","outputLookup","outputLookupLength","p","hasOwnProperty","validateTrainingOptions","setLogMethod","log","activation","validations","iterations","val","errorThresh","logPeriod","learningRate","momentum","callback","callbackPeriod","timeout","Error","console","data","sum","i","length","trainPattern","status","endTime","error","Date","now","calculateTrainingError","errorCheckInterval","trainPatterns","setupData","formatData","verifyIsInitialized","prepTraining","trainingTick","Promise","resolve","reject","thawedTrain","Thaw","Array","delay","each","stop","done","tick","trainError"],"mappings":"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","file":"base-interface.js","sourcesContent":["import Thaw from 'thaw.js';\r\n\r\n/**\r\n * @param {object} options\r\n * @constructor\r\n */\r\nexport default class BaseInterface {\r\n\r\n  constructor(options = {}) {\r\n    Object.assign(this, this.constructor.defaults, options);\r\n    this.trainOpts = {};\r\n    this.updateTrainingOptions(Object.assign({}, this.constructor.trainDefaults, options));\r\n\r\n    this.inputLookup = null;\r\n    this.inputLookupLength = null;\r\n    this.outputLookup = null;\r\n    this.outputLookupLength = null;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param options\r\n   *    Supports all `trainDefaults` properties\r\n   *    also supports:\r\n   *       learningRate: (number),\r\n   *       momentum: (number),\r\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\r\n   */\r\n  updateTrainingOptions(options) {\r\n    const trainDefaults = this.constructor.trainDefaults;\r\n    for (const p in trainDefaults) {\r\n      if (!trainDefaults.hasOwnProperty(p)) continue;\r\n      this.trainOpts[p] = options.hasOwnProperty(p)\r\n        ? options[p]\r\n        : trainDefaults[p];\r\n    }\r\n    this.validateTrainingOptions(this.trainOpts);\r\n    this.setLogMethod(options.log || this.trainOpts.log);\r\n    this.activation = options.activation || this.activation;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param options\r\n   */\r\n  validateTrainingOptions(options) {\r\n    const validations = {\r\n      iterations: (val) => { return typeof val === 'number' && val > 0; },\r\n      errorThresh: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\r\n      log: (val) => { return typeof val === 'function' || typeof val === 'boolean'; },\r\n      logPeriod: (val) => { return typeof val === 'number' && val > 0; },\r\n      learningRate: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\r\n      momentum: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\r\n      callback: (val) => { return typeof val === 'function' || val === null },\r\n      callbackPeriod: (val) => { return typeof val === 'number' && val > 0; },\r\n      timeout: (val) => { return typeof val === 'number' && val > 0 }\r\n    };\r\n    for (const p in validations) {\r\n      if (!validations.hasOwnProperty(p)) continue;\r\n      if (!options.hasOwnProperty(p)) continue;\r\n      if (!validations[p](options[p])) {\r\n        throw new Error(`[${p}, ${options[p]}] is out of normal training range, your network will probably not train.`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param log\r\n   * if a method is passed in method is used\r\n   * if false passed in nothing is logged\r\n   * @returns error\r\n   */\r\n  setLogMethod(log) {\r\n    if (typeof log === 'function'){\r\n      this.trainOpts.log = log;\r\n    } else if (log) {\r\n      this.trainOpts.log = console.log;\r\n    } else {\r\n      this.trainOpts.log = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @returns {Number} error\r\n   */\r\n  calculateTrainingError(data) {\r\n    let sum = 0;\r\n    for (let i = 0; i < data.length; ++i) {\r\n      sum += this.trainPattern(data[i], true);\r\n    }\r\n    return sum / data.length;\r\n  }\r\n\r\n  /**\r\n   * @param data\r\n   */\r\n  trainPatterns(data) {\r\n    for (let i = 0; i < data.length; ++i) {\r\n      this.trainPattern(data[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {object} data\r\n   * @param {object} status { iterations: number, error: number }\r\n   * @param endTime\r\n   */\r\n  trainingTick(data, status, endTime) {\r\n    if (status.iterations >= this.trainOpts.iterations || status.error <= this.trainOpts.errorThresh || Date.now() >= endTime) {\r\n      return false;\r\n    }\r\n\r\n    status.iterations++;\r\n\r\n    if (this.trainOpts.log && (status.iterations % this.trainOpts.logPeriod === 0)) {\r\n      status.error = this.calculateTrainingError(data);\r\n      this.trainOpts.log(`iterations: ${status.iterations}, training error: ${status.error}`);\r\n    } else {\r\n      if (status.iterations % this.errorCheckInterval === 0) {\r\n        status.error = this.calculateTrainingError(data);\r\n      } else {\r\n        this.trainPatterns(data);\r\n      }\r\n    }\r\n\r\n    if (this.trainOpts.callback && (status.iterations % this.trainOpts.callbackPeriod === 0)) {\r\n      this.trainOpts.callback({\r\n        iterations: status.iterations,\r\n        error: status.error\r\n      });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @param options\r\n   * @protected\r\n   * @return {object} { data, status, endTime }\r\n   */\r\n  prepTraining(data, options) {\r\n    this.updateTrainingOptions(options);\r\n    if (this.setupData) data = this.setupData(data);\r\n    if (this.formatData) data = this.formatData(data);\r\n    const endTime = Date.now() + this.trainOpts.timeout;\r\n\r\n    const status = {\r\n      error: 1,\r\n      iterations: 0\r\n    };\r\n\r\n    this.verifyIsInitialized(data);\r\n\r\n    return {\r\n      data,\r\n      status,\r\n      endTime\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @param options\r\n   * @returns {object} {error: number, iterations: number}\r\n   */\r\n  train(data, options = {}) {\r\n    let status, endTime;\r\n    ({ data, status, endTime } = this.prepTraining(data, options));\r\n\r\n    while (this.trainingTick(data, status, endTime));\r\n    return status;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @param options\r\n   * @returns {Promise}\r\n   * @resolves {{error: number, iterations: number}}\r\n   * @rejects {{trainError: string, status: {error: number, iterations: number}}\r\n   */\r\n  trainAsync(data, options = {}) {\r\n    let status, endTime;\r\n    ({ data, status, endTime } = this.prepTraining(data, options));\r\n\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const thawedTrain = new Thaw(new Array(this.trainOpts.iterations), {\r\n          delay: true,\r\n          each: () => this.trainingTick(data, status, endTime) || thawedTrain.stop(),\r\n          done: () => resolve(status)\r\n        });\r\n        thawedTrain.tick();\r\n      } catch (trainError) {\r\n        reject({trainError, status});\r\n      }\r\n    });\r\n  }\r\n\r\n  // These methods to be implimented in subclasses\r\n\r\n  run() {\r\n    throw new Error('not yet implemented');   \r\n  }\r\n\r\n  trainPattern() {\r\n    throw new Error('not yet implemented');\r\n  }\r\n\r\n  verifyIsInitialized() {\r\n    throw new Error('not yet implemented');   \r\n  }\r\n\r\n  addFormat() {\r\n    throw new Error('not yet implemented');\r\n  }\r\n\r\n  toJSON() {\r\n    throw new Error('not yet implemented');\r\n  }\r\n\r\n  fromJSON() {\r\n    throw new Error('not yet implemented');\r\n  }\r\n\r\n  toFunction() {\r\n    throw new Error('not yet implemented');\r\n  }\r\n}\r\n"]}